#include <bits/stdc++.h>

using namespace std;

int N;
char S[100001];
int ans[100001];
pair<int, int> m[256][256];
int o[10];

int main()
{
    m['A']['B']=make_pair(0, 1);
    m['A']['C']=make_pair(5, 7);
    m['A']['D']=make_pair(5, 8);
    m['A']['E']=make_pair(0, 4);
    m['B']['A']=make_pair(1, 0);
    m['B']['C']=make_pair(1, 2);
    m['B']['D']=make_pair(6, 8);
    m['B']['E']=make_pair(6, 9);
    m['C']['A']=make_pair(7, 5);
    m['C']['B']=make_pair(2, 1);
    m['C']['D']=make_pair(2, 3);
    m['C']['E']=make_pair(7, 9);
    m['D']['A']=make_pair(8, 5);
    m['D']['B']=make_pair(8, 6);
    m['D']['C']=make_pair(3, 2);
    m['D']['E']=make_pair(3, 4);
    m['E']['A']=make_pair(4, 0);
    m['E']['B']=make_pair(9, 6);
    m['E']['C']=make_pair(9, 7);
    m['E']['D']=make_pair(4, 3);
    o[0]=5;
    o[1]=6;
    o[2]=7;
    o[3]=8;
    o[4]=9;
    o[5]=0;
    o[6]=1;
    o[7]=2;
    o[8]=3;
    o[9]=4;
    int T;
    scanf("%d", &T);
    while(T--)
    {
        scanf("%s", S);
        N=strlen(S);
        memset(ans, -1, sizeof ans);
        for(int i=1; i<N; i++)
            if(S[i]!=S[i-1])
            {
                pair<int, int> p=m[S[i-1]][S[i]];
                if(ans[i-1]!=-1 && ans[i-1]!=p.first)
                    goto fail;
                if(ans[i]!=-1 && ans[i]!=p.second)
                    goto fail;
                ans[i-1]=p.first;
                ans[i]=p.second;
            }
        for(int i=1; i<N; i++)
            if(S[i]==S[i-1])
            {
                if(ans[i-1]!=-1)
                {
                    if(ans[i]!=-1 && ans[i]!=o[ans[i-1]])
                        goto fail;
                    ans[i]=o[ans[i-1]];
                }
                if(ans[i]!=-1)
                {
                    if(ans[i-1]!=-1 && ans[i-1]!=o[ans[i]])
                        goto fail;
                    ans[i-1]=o[ans[i]];
                }
            }
        for(int i=N-1; i>0; i--)
            if(S[i]==S[i-1])
            {
                if(ans[i]!=-1)
                {
                    if(ans[i-1]!=-1 && ans[i-1]!=o[ans[i]])
                        goto fail;
                    ans[i-1]=o[ans[i]];
                }
                if(ans[i-1]!=-1)
                {
                    if(ans[i]!=-1 && ans[i]!=o[ans[i-1]])
                        goto fail;
                    ans[i]=o[ans[i-1]];
                }
            }
        if(ans[0]==-1)
            ans[0]=S[0]-'A';
        for(int i=1; i<N; i++)
            if(S[i]==S[i-1])
            {
                if(ans[i-1]!=-1)
                {
                    if(ans[i]!=-1 && ans[i]!=o[ans[i-1]])
                        goto fail;
                    ans[i]=o[ans[i-1]];
                }
                if(ans[i]!=-1)
                {
                    if(ans[i-1]!=-1 && ans[i-1]!=o[ans[i]])
                        goto fail;
                    ans[i-1]=o[ans[i]];
                }
                if(ans[i]==-1)
                    ans[i]=S[i]-'A';
            }
        for(int i=0; i<N; i++)
            printf("%d", ans[i]);
        printf("\n");
        continue;
        fail:;
        printf("-1\n");
    }
    return 0;
}
