/*********************************************************************\
   |--\        ---       /\        |-----------| -----   /-------|    |
   |   \        |       /  \       |               |    /             |
   |    \       |      /    \      |               |   |              |
   |     \      |     /      \     |               |   |----|         |
   |      \     |    / ------ \    |-------|       |        |-----|   |
   |       \    |   /          \   |               |              |   |
   |        \   |  /            \  |               |              /   |
  ---        -------            ------           ----- |---------/    |
                                                                      |
    codeforces = nfssdq  ||  topcoder = nafis007                      |
    mail = nafis_sadique@yahoo.com || nfssdq@gmail.com                |
    IIT,Jahangirnagar University(41)                                  |
                                                                      |
**********************************************************************/

#include <bits/stdc++.h>
using namespace std;

#define xx         first
#define yy         second
#define pb         push_back
#define mp         make_pair
#define LL         long long
#define inf        INT_MAX/3
#define mod        1000000007ll
#define PI         acos(-1.0)
#define linf       (1ll<<60)-1
#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     A.begin(), A.end()
#define set0(ar)   memset(ar,0,sizeof ar)
#define vsort(v)   sort(v.begin(),v.end())
#define setinf(ar) memset(ar,126,sizeof ar)

//cout << fixed << setprecision(20) << p << endl;

template <class T> inline T bigmod(T p,T e,T M){
    LL ret = 1;
    for(; e > 0; e >>= 1){
        if(e & 1) ret = (ret * p) % M;
        p = (p * p) % M;
    } return (T)ret;
}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}

string s;
string mat[10] = {
"0100110000",
"1010001000",
"0101000100",
"0010100010",
"1001000001",
"1000000110",
"0100000011",
"0010010001",
"0001011000",
"0000101100"
};
string txt = "ABCDEABCDE";
int dp[100011][10];
int main() {
    ios_base::sync_with_stdio(0); cin.tie(0);
    LL a = 0,b,c,d = 0,e,f = 0,g,h = 0,x,y,z = 0;
    cin >> a;
    while(a--){
        cin >> s;
        REP(i, 10) dp[s.size()][i] = 1;
        for(int i = s.size() - 1; i >= 0; i--){
            REP(j, 10){
                dp[i][j] = 0;
                if(txt[j] != s[i]) continue;
                REP(k, 10){
                    if(mat[j][k] == '1') dp[i][j] |= dp[i + 1][k];
                }
            }
        }
        f = -1;
        REP(i, 10) if(dp[0][i] == 1) {
            f = i;
            break;
        }
        if(f == -1) cout << -1 << endl;
        else {
            REP(i, s.size()){
                cout << f;
                REP(j, 10){
                    if(mat[f][j] == '1' && dp[i + 1][j] == 1) {
                        f = j;
                        break;
                    }
                }
            }
            cout << endl;
        }
    }
}
