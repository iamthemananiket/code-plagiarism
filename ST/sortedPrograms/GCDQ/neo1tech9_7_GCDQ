#include <bits/stdc++.h>
#include <assert.h>
 
using namespace std;
 
typedef long long ll;
typedef vector < long long > vll;
typedef pair < long long, long long > pll;
typedef pair < int, int > pii;
typedef vector < int > vii;
 
#define rep(i,n) for(int i = 0; i < n; i++)
#define reps(i,a,n) for(int i = a; i < n; i++)
#define s(n) cin >> n
#define csl ios_base::sync_with_stdio(false); cin.tie(NULL)
#define rsz(x,n) x.clear(); x.resize(n)
#define rrsz(x,a,n) x.clear(); x.resize(n,a)
#define wt while(true)
#define all(x) x.begin(),x.end()
#define pb push_back
#define ls(x) (((x) << 1) + 1)
#define rs(x) ((ls(x)) + 1)
#define md(a,b) (((a) + (b)) >> 1)
#define INF (1LL << 60LL)
 
int t, u, v, n, k, m, c, d, f, e, l, r, q;
const int N = 100005;
int B[N];
int A[N];
int C[N];
int gcd (int a, int b) {
	if (a > b) swap(a, b);
	if (b % a == 0) return a;
	else return gcd(b % a, a);
}
int main() {
    csl;
	cin >> t;
	while (t--) {
		cin >> n >> q;
		rep (i, n) cin >> A[i];
		B[0] = A[0];
		reps (i, 1, n) B[i] = gcd(B[i - 1], A[i]);
		C[n - 1] = A[n - 1];
		for (int i = n - 2; i >= 0; --i) {
			C[i] = gcd(C[i + 1], A[i]);
		}
		while (q--) {
			cin >> l >> r;
			--l, --r;
			if (l == 0) cout << C[r + 1] << '\n';
			else if (r == n - 1) cout << B[l - 1] << '\n';
			else cout << gcd(B[l - 1], C[r + 1]) << '\n';
		}
	}
    return 0;
}