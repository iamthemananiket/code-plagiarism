/*
._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._
	ABHINANDAN AGARWAL
	MNNIT ALLAHABAD
	CSE
._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._
*/
#include<bits/stdc++.h>
using namespace std;
#define pc putchar_unlocked
#define gc getchar_unlocked
typedef long long ll;
typedef unsigned long long llu;
#define mp make_pair
#define pb push_back
#define sc(x) scanf("%d",&x);
#define fl(i,n) for (i=0;i<n;i++)
#define fle(i,n) for (i=1;i<=n;i++)
#define fla(i,a,n) for (i=a;i<n;i++)
#define mem(a,i) memset(a,i,sizeof(a))
#define fi first
#define se second
#define pii pair<int,int> 
#define piii pair<int,pair<int,int> >
#define wl(n) while (n--)
typedef long double LF;
typedef double lF;
int fs()
{
	int x=0;
	char c;
	c=getchar_unlocked();
	while (c<'0'||c>'9')
		c=getchar_unlocked();
	while ('0'<=c&&c<='9')
	{
		x=(x<<3)+(x<<1)+c-'0';
		c=getchar_unlocked();
	}
	return x; 
}
void pps(const char *s)
{
	int i;
	for (i=0;s[i]!='\0';i++)
	{
		putchar_unlocked(s[i]);
	}
}
void _ppd(int a)
{
	if (a==0)
		return ;
	_ppd(a/10);
	putchar_unlocked(a%10+'0');
}
void ppd(int a) // Printing integer using utchar unlocked!
{
	if (a==0)
	{
		pc('0');
		return;
	}
	if (a<0)
	{
		pc('-');
		a=-a;
	}
	_ppd(a);
}
void _pplld(ll a)
{
	if (a==0)
		return ;
	_pplld(a/10);
	pc(a%10+'0');
}
void pplld(ll a)
{
	if (a==0)
	{
		pc('0');
		return ;
	}
	if (a<0)
	{
		pc('-');
		a=-a;
	}
	_pplld(a);
}
int ggs(char *s) // String inputting
{
	int x=0;
	char c=gc();
	while (!('a'<=c&&c<='z')&&c!=-1) // change conditions to whatever strings can input !
		c=gc();
	while ('a'<=c&&c<='z')
	{
		s[x++]=c;
		c=gc();
	}
	s[x]='\0';
	return x;
}

int fsn()
{
	int x=0;
	char c;
	c=getchar_unlocked();
	while (!('0'<=c&&c<='9'||c=='-'))
		c=getchar_unlocked();
	int neg=0;
	if (c=='-'){
		neg=1;
		c=getchar_unlocked();
	}
	while ('0'<=c&&c<='9')
	{
		x=(x<<3)+(x<<1)+c-'0';
		c=getchar_unlocked();
	}
	return (neg==0?x:-x); 
}
//------------------------------------------------------------------------------------
int n;
vector<int>gr[100010];
int x[100010],tot;
int howmany[100010],sz[100010];
pii dfs(int c,int p){
	int i,z=gr[c].size(),p1=0,p2=0;
	p1=1;p2=x[c];
	for (i=0;i<z;i++)
	{
		if (gr[c][i]!=p)
		{
			pii ret=dfs(gr[c][i],c);
			p1+=ret.fi;
			p2+=ret.se;
		}
	}
	sz[c]=p1;howmany[c]=p2;
	return mp(p1,p2);
}
lF pw(lF x,int b)
{
	if (b==0)return 1;
	lF ret=pw(x,b/2);
	if(b&1)
		return (ret*ret*x);
	else return ret*ret;
}
LF haha;
void dfs2(int c,int p){
	int i,z=gr[c].size();
	if (p!=-1)
	{
		lF ans;
		ans=pw((lF)sz[c]/(n-1),tot-howmany[c]);
		ans=((lF)ans*pw((lF)((lF)n-sz[c])/(n-1),howmany[c]));
		haha+=ans;
		//printf("for node :%d and calced is :%lf\n",c,ans);
	}

	for (i=0;i<z;i++)
	{
		if (gr[c][i]!=p)
			dfs2(gr[c][i],c);
	}
}
int main()
{
	int t;
	t=fs();
	wl(t)
	{
		n=fs();
		int i,j;
		for (i=0;i<=n;i++)
		{
			gr[i].clear();x[i]=0;
		}
		for (i=0;i<n-1;i++)
		{
			int x=fs(),y=fs();
			gr[x].pb(y);
			gr[y].pb(x);
		}
		tot=0;
		for (i=0;i<n;i++)
		{
			x[i]=fs();
			tot+=x[i];
		}
		haha=0;
		dfs(0,-1);
		dfs2(0,-1);
		printf("%.15Lf\n",haha);
	}	
	
	return 0;
}