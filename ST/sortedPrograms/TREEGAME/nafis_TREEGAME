/*********************************************************************\
   |--\        ---       /\        |-----------| -----   /-------|    |
   |   \        |       /  \       |               |    /             |
   |    \       |      /    \      |               |   |              |
   |     \      |     /      \     |               |   |----|         |
   |      \     |    / ------ \    |-------|       |        |-----|   |
   |       \    |   /          \   |               |              |   |
   |        \   |  /            \  |               |              /   |
  ---        -------            ------           ----- |---------/    |
                                                                      |
    codeforces = nfssdq  ||  topcoder = nafis007                      |
    mail = nafis_sadique@yahoo.com || nfssdq@gmail.com                |
    IIT,Jahangirnagar University(41)                                  |
                                                                      |
**********************************************************************/

#include <bits/stdc++.h>
using namespace std;

#define xx         first
#define yy         second
#define pb         push_back
#define mp         make_pair
#define LL         long long
#define inf        INT_MAX/3
#define mod        1000000007ll
#define PI         2.0*acos(0.0)
#define linf       (1ll<<60)-1
#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     ((A).begin(), (A).end())
#define set0(ar)   memset(ar,0,sizeof ar)
#define vsort(v)   sort(v.begin(),v.end())
#define setinf(ar) memset(ar,126,sizeof ar)

//cout << fixed << setprecision(20) << p << endl;

template <class T> inline T bigmod(T p,T e,T M){
    LL ret = 1;
    for(; e > 0; e >>= 1){
        if(e & 1) ret = (ret * p) % M;
        p = (p * p) % M;
    } return (T)ret;
}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}


vector < int > vc[10001];
vector < pair < int, int > > vp[10011];
int cnt[10001], pre[10001], on[10001], mv;
void dfs(int c, int p, int d){
    pre[c] = p;
    mv = max(mv, d);
    cnt[d]++;
    int f = 0;
    REP(i, vc[c].size()){
        if(vc[c][i] == p) continue;
        f = 1;
        dfs(vc[c][i], c, d + 1);
    }
}
void clr(int c){
    on[c] = 1;
    REP(i, vc[c].size()){
        if(vc[c][i] == pre[c]) continue;
        clr(vc[c][i]);
    }
}
int main() {
//    ios_base::sync_with_stdio(0); cin.tie(0);
    int a,b,c,d = 0,e,f = 0,g,h = 0,x,y,z = 0;
    scanf("%d", &a);
    while(a--){
        scanf("%d", &b);
        FOR(i, 1, 10001) {
            vc[i].clear();
            vp[i].clear();
        }
        REP(i, b - 1){
            scanf("%d %d", &c, &d);
            vc[c].pb(d);
            vc[d].pb(c);
        }
        set0(cnt); set0(pre); set0(on); mv = 0;
        dfs(1, 0, 1);
        f = 0; e = mv;
        for(int i = 1; i <= mv; i++){
            if(cnt[i] == 0) break;
            f++;
            while(e > i && cnt[e] == 0) e--;
            if(e == i) break;
            cnt[e]--;
            f++;
        }
        cout << f << endl;
    }
}
