#pragma comment(linker, "/STACK:500000000")
#define _CRT_SECURE_NO_WARNINGS
#include <algorithm>
#include <assert.h>
#include <bitset>
#include <functional>
#include <iostream>
#include <list>
#include <map>
#include <math.h>
#include <set>
#include <stack>
#include <stdio.h>
#include <stdlib.h>
#include <string>
#include <string.h>
#include <time.h>
#include <queue>
#include <utility>
#include <vector>
using namespace std;

#define y0 y0ChloeGraceMoretz
#define y1 y1ChloeGraceMoretz
#define ll long long
int nextInt() { int n; scanf("%d", &n); return n; }
ll nextLong() { ll n; scanf("%lld", &n); return n; }
const double PI = acos(-1.0);
const double EPS = 1e-9;
const int INF = (int)2e9;

vector<int> a[(int) 1e7];
map<vector<int>, bool> dp;
int p[(int)1e7 + 9];
int n, sum;

bool f(vector<int> x, int cur) {  // &x
	if (cur == sum) {
		return true;
	}
	if (dp.find(x) == dp.end()) {
		vector<int> y;
		for (int i = 0; i < n; ++i) {
			y.push_back(x[i]);
		}
		bool res = false;
		for (int i = 0; i < n; ++i) {
			if (x[i] + 1 <= a[i].size() && p[cur] == a[i][x[i]]) {
				++y[i];
				if (f(y, cur + 1)) {
					res = true;
					break;
				}
				y[i] = x[i];
			}
		}
		dp[x] = res;
	}
	return dp[x];
}

int main() {
	//freopen("in.txt", "rt", stdin);
	//freopen("out.txt", "wt", stdout);
	int t;
	scanf("%d", &t);
	while (t--) {
		scanf("%d", &n);
		sum = 0;
		for (int i = 0; i < n; ++i) {
			a[i].clear();
			int m;
			scanf("%d", &m);
			sum += m;
			while (m--) {
				a[i].push_back(nextInt());
			}
		}
		dp.clear();
		for (int i = 0; i < sum; ++i) {
			scanf("%d", &p[sum - 1 - i]);
		}
		if (n == 1) {
			bool res = true;
			for (int i = 0; i < sum; ++i) {
				if (p[i] != a[0][i]) {
					res = false;
					break;
				}
			}
			printf(res ? "Yes\n" : "No\n");
		} else {
			printf(f(vector<int>(n), 0) ? "Yes\n" : "No\n");
		}
	}
	return 0;
}