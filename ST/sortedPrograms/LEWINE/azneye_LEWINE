/*
 * 2013 Codechef Ode2Code
 * Booze
 * File:   LEWINE.cpp
 * Author: Andy Y.F. Huang
 * Created on Nov 16, 2013, 11:25:52 AM
 */

#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstddef>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <complex>
#include <deque>
#include <fstream>
#include <functional>
#include <iomanip>
#include <iostream>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <valarray>
#include <vector>

using namespace std;

namespace LEWINE {
int dp[5555];

void solve(int test_num) {
  int N, M, w[55], v[55];
  cin >> N >> M;
  for (int i = 0; i < M; i++)
    cin >> w[i] >> v[i];
  memset(dp, 0xC0, sizeof(dp));
  dp[0] = 0;
  for (int i = 0; i < M; i++)
    for (int j = 0; j + w[i] <= N; j++)
      dp[j + w[i]] = max(dp[j + w[i]], dp[j] + v[i]);
  const int res = *max_element(dp, dp + N + 1);
  cout << res << endl;
}

void solve() {
#ifdef AZN
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
  freopen("azn.txt", "w", stderr);
#endif
  int tests;
  cin >> tests;
  for (int i = 1; i <= tests; i++)
    solve(i);
}
}

int main() {
  LEWINE::solve();
  return 0;
}
