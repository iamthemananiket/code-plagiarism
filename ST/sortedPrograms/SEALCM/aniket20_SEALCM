#include<bits/stdc++.h>
#define ll long long
#define N 1000000007
using namespace std;
int mark[1001];
vector<ll>prim;
vector<ll>foo[1001];
ll power(ll a,ll b)
{
	ll t=1;
	while(b>0)
	{
		if(b&1)
		{
			t=(t*a)%N;
		}
		a=(a*a)%N;
		b>>=1;
	}
	return t%N;
}
ll fun1(ll p,ll m,ll n)
{
	ll i=m/p;
	return power(m-i,n);
}
ll fun2(vector<ll>p,ll m,ll n)
{
	ll k1=m/p[0],k2,k3;
	ll ans=0;
	ans=(ans+power(m-k1,n))%N;
	k2=m/p[1];
	ans=(ans+power(m-k2,n))%N;
	k3=m/(p[0]*p[1]);
	k1=k1+k2-k3;
	ans=(((ans-power(m-k1,n))%N)+N)%N;
	return ans;
}
ll fun3(vector<ll>p,ll m,ll n)
{
	ll k1=m/p[0],k2=m/p[1],k3=m/p[2];
	ll ans=0;
	ans=(ans+power(m-k1,n))%N;
	ans=(ans+power(m-k2,n))%N;
	ans=(ans+power(m-k3,n))%N;
	ll k4=m-(k1+k2-m/(p[0]*p[1]));
	ans=(((ans-power(k4,n))%N)+N)%N;
	k4=m-(k1+k3-m/(p[0]*p[2]));
	ans=(((ans-power(k4,n))%N)+N)%N;
	k4=m-(k2+k3-m/(p[2]*p[1]));
	ans=(((ans-power(k4,n))%N)+N)%N;
	k4=m-(k1+k2+k3-m/(p[0]*p[1])-m/(p[0]*p[2])-m/(p[1]*p[2])+m/(p[0]*p[1]*p[2]));
	ans=(ans+power(k4,n))%N;
	return ans;
}
ll fun4(vector<ll>p,ll m,ll n)
{
	ll k1=m/p[0],k2=m/p[1],k3=m/p[2],k4=m/p[3];
	ll ans=0;
//	cout<<k1<<" "<<k2<<" "<<k3<<" "<<k4<<endl;
	ans=(ans+power(m-k1,n))%N;
	ans=(ans+power(m-k2,n))%N;
	ans=(ans+power(m-k3,n))%N;
	ans=(ans+power(m-k4,n))%N;
	ll k5=m-(k1+k2-m/(p[0]*p[1]));
	//	cout<<ans<<" "<<k5<<endl;
	ans=(((ans-power(k5,n))%N)+N)%N;
	 k5=m-(k1+k3-m/(p[0]*p[2]));
	 	//	cout<<k5<<endl;
	ans=(((ans-power(k5,n))%N)+N)%N;
	k5=m-(k2+k3-m/(p[1]*p[2]));
		//	cout<<k5<<endl;
	ans=(((ans-power(k5,n))%N)+N)%N;
	k5=m-(k1+k4-m/(p[0]*p[3]));
		//	cout<<k5<<endl;
	ans=(((ans-power(k5,n))%N)+N)%N;
	 k5=m-(k2+k4-m/(p[1]*p[3]));
	 //	cout<<k5<<endl;
	ans=(((ans-power(k5,n))%N)+N)%N;
	 k5=m-(k3+k4-m/(p[2]*p[3]));
	 //		cout<<k5<<endl;
	ans=(((ans-power(k5,n))%N)+N)%N;
	k5=m-(k1+k2+k3-m/(p[0]*p[1])-m/(p[0]*p[2])-m/(p[1]*p[2])+m/(p[0]*p[1]*p[2]));
	//	cout<<k5<<endl;
	ans=(ans+power(k5,n))%N;
	k5=m-(k1+k2+k4-m/(p[0]*p[1])-m/(p[0]*p[3])-m/(p[1]*p[3])+m/(p[0]*p[1]*p[3]));
	//		cout<<k5<<endl;
	ans=(ans+power(k5,n))%N;
	
	k5=m-(k4+k2+k3-m/(p[2]*p[1])-m/(p[3]*p[2])-m/(p[1]*p[3])+m/(p[3]*p[1]*p[2]));
	//		cout<<k5<<endl;
	ans=(ans+power(k5,n))%N;
	k5=m-(k4+k1+k3-m/(p[2]*p[0])-m/(p[3]*p[2])-m/(p[0]*p[3])+m/(p[3]*p[0]*p[2]));
	//		cout<<k5<<endl;
	ans=(ans+power(k5,n))%N;
	k5=m-(k1+k2+k3+k4-m/(p[0]*p[1])-m/(p[0]*p[2])-m/(p[1]*p[2])-m/(p[0]*p[3])-m/(p[1]*p[3])-m/(p[2]*p[3])+m/(p[0]*p[1]*p[2])+m/(p[0]*p[1]*p[3])+m/(p[1]*p[2]*p[3])+m/(p[0]*p[2]*p[3])-m/(p[0]*p[1]*p[2]*p[3]));
	//	cout<<k5<<endl;
	ans=(((ans-power(k5,n))%N)+N)%N;
	return ans;
}
int main()
{
	ll n,m,l,r,i,ans,t,p,k,val,j,fin;
	for(i=0;i<=1000;i++)
	{
		mark[i]=0;
	}
	for(i=2;i<=1000;i++)
	{
		if(!mark[i])
		{
		//	cout<<i<<" ";
			prim.push_back(i);
			k=2;
			p=k*i;
			while(p<=1000)
			{
				mark[p]=1;
				k++;
				p=k*i;
			}
		}
	}
	for(i=1;i<=1000;i++)
	{
		k=i;
		for(j=0;prim[j]<=(int)sqrt(i);j++)
		{
			val=1;
			while(k%prim[j]==0)
			{
				k=k/prim[j];
				val=val*prim[j];
			}
			if(val!=1)
			foo[i].push_back(val);
		}
		if(k!=1)
		{
			foo[i].push_back(k);
		}
	}
	scanf("%lld",&t);
	while(t--)
	{
		scanf("%lld %lld %lld %lld",&n,&m,&l,&r);
	//	cout<<ans<<endl;
		fin=0;
		for(i=l;i<=r;i++)
		{
			ans=power(m,n);
			if(foo[i].size()==1)
			{
				ans=(((ans-fun1(foo[i][0],m,n))%N)+N)%N;
			}
			if(foo[i].size()==2)
			{
				ans=(((ans-fun2(foo[i],m,n))%N)+N)%N;
			}
			if(foo[i].size()==3)
			{
				ans=(((ans-fun3(foo[i],m,n))%N)+N)%N;
			}
			if(foo[i].size()==4)
			{
				ans=(((ans-fun4(foo[i],m,n))%N)+N)%N;
			}
			fin=(fin+ans)%N;
		}
		printf("%lld\n",fin);
	}
	return 0;
}