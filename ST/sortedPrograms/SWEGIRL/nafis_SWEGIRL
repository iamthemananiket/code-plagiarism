/*********************************************************************\
   |--\        ---       /\        |-----------| -----   /-------|    |
   |   \        |       /  \       |               |    /             |
   |    \       |      /    \      |               |   |              |
   |     \      |     /      \     |               |   |----|         |
   |      \     |    / ------ \    |-------|       |        |-----|   |
   |       \    |   /          \   |               |              |   |
   |        \   |  /            \  |               |              /   |
  ---        -------            ------           ----- |---------/    |
                                                                      |
    codeforces = nfssdq  ||  topcoder = nafis007                      |
    mail = nafis_sadique@yahoo.com || nfssdq@gmail.com                |
    IIT,Jahangirnagar University(41)                                  |
                                                                      |
**********************************************************************/

#include <bits/stdc++.h>
using namespace std;

#define xx         first
#define yy         second
#define pb         push_back
#define mp         make_pair
#define LL         long long
#define inf        INT_MAX/3
#define mod        1000000009ll
#define PI         acos(-1.0)
#define linf       (1ll<<60)-1
#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     ((A).begin(), (A).end())
#define set0(ar)   memset(ar,0,sizeof ar)
#define vsort(v)   sort(v.begin(),v.end())
#define setinf(ar) memset(ar,126,sizeof ar)

//cout << fixed << setprecision(20) << p << endl;

template <class T> inline T bigmod(T p,T e,T M){
    LL ret = 1;
    for(; e > 0; e >>= 1){
        if(e & 1) ret = (ret * p) % M;
        p = (p * p) % M;
    } return (T)ret;
}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}

int lzy[400001];
void update(int idx, int s, int e){
    if(s == e){
        return;
    }
    lzy[idx * 2 + 1] = lzy[idx * 2 + 2] = lzy[idx];
    lzy[idx] = 0;
    return;
}
void insert(int idx, int s, int e, int st, int ed, int v){
    if(lzy[idx]) update(idx, s, e);
    if(s == st && e == ed){
        lzy[idx] = v;
        return;
    }
    int mid = (s + e) / 2;
    if(ed <= mid) insert(idx * 2 + 1, s, mid, st, ed, v);
    else if(st > mid) insert(idx * 2 + 2, mid + 1, e, st, ed, v);
    else {
        insert(idx * 2 + 1, s, mid, st, mid, v);
        insert(idx * 2 + 2, mid + 1, e, mid + 1, ed, v);
    }
}
int query(int idx, int s, int e, int p){
    if(lzy[idx]) update(idx, s, e);
    if(s == e) return lzy[idx];
    int mid = (s + e) / 2;
    if(p <= mid) return query(idx * 2 + 1, s, mid, p);
    else return query(idx * 2 + 2, mid + 1, e, p);
}

int ar[100001];
string S;
int main() {
    ios_base::sync_with_stdio(0); cin.tie(0);
    int T; cin >> T;
    while(T--){
        set0(lzy);
        cin >> S;
        for(int i = 1; i <= S.size(); i++){
            if(S[i-1] == 'X') insert(0, 1, S.size(), i, i, 1);
            else insert(0, 1, S.size(), i, i, 2);
        }
        int m; cin >> m;
        while(m--){
            int v, l, r; cin >> v >> l >> r;
            insert(0, 1, S.size(), l, r, v);
        }

        int cnt = 0;
        for(int i = 1; i <= S.size(); i++) {
            ar[i] = query(0, 1, S.size(), i);
            if(ar[i] == 1) cnt++;
        }

        int cnt1 = 0, cnt2 = 0, res = S.size()+1;
        ar[0] = 1; cnt++;
        for(int i = 0; i <= S.size(); i++){
            if(ar[i] == 1) cnt1++;
            else cnt2++;
            res = min(res, cnt2 + cnt - cnt1);
        }

        cout << res << endl;
    }
}
