#include <stdio.h>
#include <bits/stdc++.h>
using namespace std;
#define mod 1000000007

inline long long int fast_input(void)
{
	char t;
	long long int x=0;
	int neg=0;
	t=getchar();
	while((t<48 || t>57) && t!='-')
		t=getchar();
	if(t=='-')
		{neg=1; t=getchar();}
    while(t>=48 && t<=57)
    {
        x=(x<<3)+(x<<1)+t-48;
        t=getchar();
    }
	if(neg)
		x=-x;
	return x;
}

inline void fast_output(long long int x)
{
	char a[20];
	int i=0,j;
	a[0]='0';
	if (x<0) {putchar('-'); x=-x;}
	if (x==0) putchar('0');
	while(x)
	{
		a[i++]=x%10+48;
		x/=10;
	}
	for(j=i-1;j>=0;j--)
	{
		putchar(a[j]);
	}
	putchar('\n');
}

int phi[10000001];
long long int sum[10000001];
map <long long int, long long int> m;

inline void make()
{
	int i,j;
	memset(phi,0,sizeof(phi));
	phi[1]=1;
	for(i=2;i<10000001;i++)
	{
		if (!phi[i])
		{
			phi[i]=i-1;
			for(j=2*i;j<10000001;j+=i)
			{
				if (!phi[j]) phi[j]=j;
				phi[j]/=i;
				phi[j]*=(i-1);
			}
		}
	}
	sum[0]=0;
	for(i=1;i<10000001;i++) sum[i]=sum[i-1]+((long long int)phi[i]);
}

inline long long int sumphi(long long int n)
{
	if (n<10000001) return sum[n];
	if (m[n]!=0) return m[n];
	long long int ans=(n*(n+1))/2,i;
	for(i=2;i*i<=n;i++)
		ans-=sumphi(n/i);
	i=n/i;
	for(i;i>0;i--)
	{
		//if (n==10000001) fast_output(n/i-n/(i+1));
		//ans-=(n/i-n/(i+1))*sumphi(i);
		ans-=(n/i-n/(i+1))*sum[i];
	}
	m[n]=ans;
	return ans;
}

int main()
{
long long int t,n,d;
make();
t=fast_input();
while(t--)
{
	n=fast_input();
	d=fast_input();
	fast_output(sumphi(n/d));
}
return 0;
}
