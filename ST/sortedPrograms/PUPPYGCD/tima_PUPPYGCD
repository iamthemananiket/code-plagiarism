#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <cstdlib>
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define pii pair<int, int>
using namespace std;          
const int N = int(5e7);
int n,d,t,p,m,f[N+10];
short lp[N+10];
ll s[N+10];

ll rec(int n){
	if(n <= N) return s[n];
	ll res = 1ll*n*(n+1) / 2;
	int sqr = int(sqrt(n+0.0)) + 1;
	for(int d=2;d<=sqr;d++) res -= rec(n/d);
	int l = sqr + 1,r,j;
	while(l <= n){
		j = n / l;
		r =  n / j;
		res -= 1ll*(r - l + 1) * s[j];
		l = r + 1;
	}
	return res;
}
 
int main () {
	scanf("%d",&t);
	
	for(int i=2;i<=N;i+=2) lp[i] = 2;
	int K = int(sqrt(N+1.0)) + 1;
	for(int i=3;i<=K;i+=2) if(!lp[i]){
		for(int j=i*i;j<=N;j+=(i+i)) lp[j] = i;
	}
	f[1] = 1;
	s[1] = 1;
	for(int i=2;i<=N;i++){
		p = lp[i];
		if(!p) {
			f[i] = i - 1;
		}
		else if(p == 2){
			if((i & 3) == 0) f[i] = (f[i>>1]<<1);
			else f[i] = f[i>>1];
		}
		else{
			m = i / p;
			if(p * (m / p) == m) f[i] = p * f[m];
			else f[i] = (p-1) * f[m];
		}
		s[i] = s[i-1] + f[i];
	}
	for(int i=1;i<=t;i++){
		scanf("%d%d",&n,&d);
		n /= d;
		ll res = rec(n);
		printf("%lld\n",res);
	}
return 0;
}