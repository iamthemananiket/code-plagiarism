/*********************************************************************\
   |--\        ---       /\        |-----------| -----   /-------|    |
   |   \        |       /  \       |               |    /             |
   |    \       |      /    \      |               |   |              |
   |     \      |     /      \     |               |   |----|         |
   |      \     |    / ------ \    |-------|       |        |-----|   |
   |       \    |   /          \   |               |              |   |
   |        \   |  /            \  |               |              /   |
  ---        -------            ------           ----- |---------/    |
                                                                      |
    codeforces = nfssdq  ||  topcoder = nafis007                      |
    mail = nafis_sadique@yahoo.com || nfssdq@gmail.com                |
    IIT,Jahangirnagar University(41)                                  |
                                                                      |
**********************************************************************/

#include <bits/stdc++.h>
using namespace std;

#define xx         first
#define yy         second
#define pb         push_back
#define mp         make_pair
#define LL         long long
#define inf        INT_MAX/3
#define mod        1000000007ll
#define PI         acos(-1.0)
#define linf       (1ll<<60)-1
#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     ((A).begin(), (A).end())
#define set0(ar)   memset(ar,0,sizeof ar)
#define vsort(v)   sort(v.begin(),v.end())
#define setinf(ar) memset(ar,126,sizeof ar)

//cout << fixed << setprecision(20) << p << endl;

template <class T> inline T bigmod(T p,T e,T M){
    LL ret = 1;
    for(; e > 0; e >>= 1){
        if(e & 1) ret = (ret * p) % M;
        p = (p * p) % M;
    } return (T)ret;
}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}

int ar[100001], qq[100001][3];
int bit[501][100001], id[200001];
void insert(int x, int y, int v){
    for(int i = y; i <= 100000; i += i & -i) bit[x][i] += v;
}
int query(int x, int y){
    int ret = 0;
    for(int i = y; i > 0; i -= i & -i) ret += bit[x][i];
    return ret;
}

map < int, int > mm;
int cnt[200001], vv[200001];

int main() {
    ios_base::sync_with_stdio(0); cin.tie(0);
    int n, m; cin >> n >> m;
    FOR(i, 1, n+1) {
        cin >> ar[i];
        mm[ar[i]]++;
    }
    FOR(i, 1, m+1){
        REP(j, 3) cin >> qq[i][j];
        if(qq[i][0] == 1) mm[qq[i][2]]++;
    }

    int sz = 400;

    int lcnt = 0;
    int cc = 0;
    for(auto &v: mm) {
        if(v.yy >= sz) {
            lcnt++;
            id[cc + 1] = lcnt;
        }
        v.yy = ++cc;
    }

    FOR(i, 1, n+1){
        ar[i] = mm[ar[i]];
        if(id[ar[i]] != 0) insert(id[ar[i]], i, 1);
    }

    FOR(t, 1, m+1){
        if(qq[t][0] == 1){
            qq[t][2] = mm[qq[t][2]];
            int c = qq[t][1];
            if(id[ar[c]] != 0) insert(id[ar[c]], c, -1);
            ar[c] = qq[t][2];
            if(id[ar[c]] != 0) insert(id[ar[c]], c, 1);
        } else {
            int l = qq[t][1], r = qq[t][2];
            if(r-l+1 >= 2*sz){
                int fl = 0;
                for(int i = 1; i <= lcnt; i++){
                    if((query(i, r) - query(i, l-1)) * 2 > (r-l+1)) {
                        fl = 1;
                        break;
                    }
                }
                if(fl) cout << "Yes\n";
                else cout << "No\n";
            } else {
                int fl = 0;
                for(int i = l; i <= r; i++){
                    if(vv[ar[i]] != t){
                        vv[ar[i]] = t;
                        cnt[ar[i]] = 0;
                    }
                    cnt[ar[i]]++;
                    if(cnt[ar[i]] * 2 > (r-l+1)) fl = 1;
                }
                if(fl) cout << "Yes\n";
                else cout << "No\n";
            }
        }
    }

}
