#include <bits/stdc++.h>
// iostream is too mainstream
#include <cstdio>
// bitch please
#include <iostream>
#include <algorithm>
#include <cstdlib>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <list>
#include <cmath>
#include <iomanip>
#include <time.h>
#define dibs reserve
#define OVER9000 1234567890
#define ALL_THE(CAKE,LIE) for(auto LIE =CAKE.begin(); LIE != CAKE.end(); LIE++)
#define tisic 47
#define soclose 1e-8
#define chocolate win
// so much chocolate
#define patkan 9
#define ff first
#define ss second
#define abs(x) ((x < 0)?-(x):x)
#define uint unsigned int
#define dbl long double
#define pi 3.14159265358979323846
using namespace std;
// mylittledoge

#ifdef DONLINE_JUDGE
	// palindromic tree is better than splay tree!
	#define lld I64d
#endif

struct fin {
	vector<int> T;
	fin() {}
	fin(int N) {T.resize(N+tisic,0);}

	int lastone(int x) {return x&(x^(x-1));}

	void put(int pos, int val) {
		for(int i =pos+1; i < (int)T.size(); i +=lastone(i)) T[i] +=val;}

	int get(int pos) {
		int ret =0;
		for(int i =pos+1; i > 0; i -=lastone(i)) ret +=T[i];
		return ret;}
	};

int main() {
	cin.sync_with_stdio(0);
	cin.tie(0);
	cout << fixed << setprecision(10);
	int N,Q;
	cin >> N >> Q;
	vector<int> A(N);
	map<int,int> M;
	for(int i =0; i < N; i++) {
		cin >> A[i];
		M[A[i]]++;}
	vector< vector<int> > upd(Q,vector<int>(3));
	for(int q =0; q < Q; q++) {
		for(int i =0; i < 3; i++) cin >> upd[q][i];
		if(upd[q][0] == 1) M[upd[q][2]]++;}

	int K =300;
	map<int,int> Mb;
	vector<fin> F;
	ALL_THE(M,it) if(it->ss >= K) {
		Mb[it->ff] =F.size();
		F.push_back(fin(N));}

	for(int i =0; i < N; i++) if(M[A[i]] >= K) F[Mb[A[i]]].put(i,1);
	for(int q =0; q < Q; q++) {
		int tp =upd[q][0];
		if(tp == 1) {
			int x =upd[q][1]-1, y =upd[q][2];
			if(M[A[x]] >= K) F[Mb[A[x]]].put(x,-1);
			A[x] =y;
			if(M[y] >= K) F[Mb[y]].put(x,1);
			continue;}
		int l =upd[q][1]-1, r =upd[q][2];
		if(r-l < 2*K) {
			int poc =0, val =A[l];
			for(int i =l; i < r; i++) {
				if(poc == 0) {poc++; val =A[i]; continue;}
				if(val != A[i]) poc--;
				else poc++;}
			poc =0;
			for(int i =l; i < r; i++) if(A[i] == val) poc++;
			if(poc*2 > r-l) cout << "Yes\n";
			else cout << "No\n";
			continue;}
		bool ans =false;
		for(int i =0; i < (int)F.size(); i++) {
			int x =F[i].get(r-1)-F[i].get(l-1);
			if(x*2 > r-l) {ans =true; break;}
			}
		if(ans) cout << "Yes\n";
		else cout << "No\n";}
	return 0;}

// look at my code
// my code is amazing