#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <string>
#include <utility>
#include <vector>
using namespace std;

#define fi first
#define se second
#define pb push_back
#define all(x) (x).begin(), (x).end()
#define sz(x) (int((x).size()))
#define bit(x) (1 << (x))
#define cnt1(x) (__builtin_popcount(x))

template<class T, class U>
inline void chkmax(T& x, U y) {
	if (x < y) x = y;
}

template<class T, class U>
inline void chkmin(T& x, U y) {
	if (y < x) x = y;
}

typedef long long LL;
typedef double DB;
typedef pair<int, int> PII;
typedef vector<int> VI;
const int MX = 20005;
int n;
int a[MX], b[MX];
int nxt[MX];
int id[10000005];
map<int, int> adj[MX];
 
int main() {
	
	int i, j, k;
	
	scanf("%d", &n);
	for (j = 0; j < n; j++) {
		scanf("%d", &a[j]);
		b[j] = a[j];
	}
	if (n == 1) {
		printf("%d\n", a[0]);
		return 0;
	}
	sort(b, b + n);
	for (j = 0; j < n; j++) id[b[j]] = j + 1;
	for (i = 1; i <= 5; i++) {
		for (j = 0; j < n; j++) adj[a[j]][a[j + 1]]++;
		if (i == 5) break;
		for (j = 0; j < n; j++) {
			scanf("%d", &k);
			a[j] = id[k];
		}
	}
	for (j = 1; j <= n; j++) {
		PII pr(0, 0);
		for (map<int, int>::iterator it = adj[j].begin(); it != adj[j].end(); it++) {
			if (pr.se < it->se) pr = PII(it->fi, it->se);
		}
		nxt[j] = pr.fi;
	}
	for (i = 1; i <= n; i++) {
		j = 0;
		for (k = i; k; k = nxt[k]) j++;
		if (j == n) break;
	}
	for (k = i; k; k = nxt[k]) printf("%d\n", b[k - 1]);
	return 0;
}
