/*********************************************************************\
   |--\        ---       /\        |-----------| -----   /-------|    |
   |   \        |       /  \       |               |    /             |
   |    \       |      /    \      |               |   |              |
   |     \      |     /      \     |               |   |----|         |
   |      \     |    / ------ \    |-------|       |        |-----|   |
   |       \    |   /          \   |               |              |   |
   |        \   |  /            \  |               |              /   |
  ---        -------            ------           ----- |---------/    |
                                                                      |
    codeforces = nfssdq  ||  topcoder = nafis007                      |
    mail = nafis_sadique@yahoo.com || nfssdq@gmail.com                |
    IIT,Jahangirnagar University(41)                                  |
                                                                      |
**********************************************************************/

#include <bits/stdc++.h>

using namespace std;

#define xx         first
#define yy         second
#define pb         push_back
#define mp         make_pair
#define LL         long long
#define inf        INT_MAX/3
#define mod        1000000007ll
#define PI         2.0*acos(0.0)
#define linf       (1ll<<60)-1
#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     ((A).begin(), (A).end())
#define set0(ar)   memset(ar,0,sizeof ar)
#define vsort(v)   sort(v.begin(),v.end())
#define setinf(ar) memset(ar,126,sizeof ar)

//cout << fixed << setprecision(20) << p << endl;

template <class T> inline T bigmod(T p,T e,T M){
    LL ret = 1;
    for(; e > 0; e >>= 1){
        if(e & 1) ret = (ret * p) % M;
        p = (p * p) % M;
    } return (T)ret;
}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}


LL ar[6] = { 0, -1, 0, 10, 15, 6 };
LL add[6] = {1, 4, 6, 4, 1};
LL mul[33][6];
LL calc(LL n, LL m){
    LL ret = 0;
    LL a = n % 30;
    n -= a;
    LL v = 1;
    for(int i = 4; i >= 0; i--){
        ret = (ret + v * mul[a][i]) % m;
        v = (v * n) % m;
    }
    LL tr = 0;
    for(int i = 1; i <= a; i++){
        tr = (tr + (n+i)*(n+i)*(n+i)*(n+i)) % m;
    }
//    cout << tr << " " << ret << " " << n << endl;
    LL f = n / 30;
    ret = (ret - (f%m) + m)%m;
    for(int i = 2; i <= 5; i++){
        f = (f * n) % m;
        ret = (ret + ar[i]*f) % m;
    }
    return ret;
}
LL go(LL l, LL r, LL m){
//    return calc(r, m);
    return (calc(r, m) - calc(l - 1, m) + m) % m;
}
main() {
//    ios_base::sync_with_stdio(0); cin.tie(0);
    LL a,b,c,d = 0,e,f = 0,g,h = 0,x,y,z;
    for(int i = 1; i <= 30; i++){
        mul[i][0] = 1;
        for(int j = 1; j < 6; j++){
            mul[i][j] = mul[i][j - 1] * i;
        }
        REP(j, 5) mul[i][j] *= add[j];
        REP(j, 5) mul[i][j] += mul[i - 1][j];
    }
    scanf("%lld", &a);
//    a = 30;
    while(a--){
        scanf("%lld %lld", &b, &c);
//        b = 10000000000ll, c = 100000ll;
        if(b == 1) {
            printf("%lld\n", 1%c);
            continue;
        }
        if(c == 1){
            printf("0\n");
            continue;
        }
        d = sqrt(b); f = 0; e = b;
        for(LL i = 2; i <= d; i++){
            f = (f + (i - 1)*go((b/i) + 1, e, c)) % c;
            e = b/i;
        }
        for(LL i = e; i >= 1; i--){
            g = 1;
            for(int j = 1; j <= 4; j++) g = (g * i) % c;
            g *= (b / i);
            g %= c;
            f = (f + g) % c;
        }
        printf("%lld\n", f);
    }
}
