#include <cstdio>
#include <cmath>
#include <iostream>
#include <set>
#include <algorithm>
#include <vector>
#include <map>
#include <cassert>
#include <string>
#include <cstring>
#include <queue>

using namespace std;

#define rep(i,a,b) for(int i = a; i < b; i++)
#define S(x) scanf("%d",&x)
#define S2(x,y) scanf("%d%d",&x,&y)
#define P(x) printf("%d\n",x)
#define all(v) v.begin(),v.end()
#define sz size()

typedef long long int LL;
typedef pair<int, int > pii;
typedef vector<int > vi;

vector<LL > SS[55];
vector<LL > CC[55];
map<LL, int > M;
map<LL, int >::iterator it;

LL dp[55][55][105];

void pre() {

  rep(s,1,51) {
    LL tot = (1LL<<s) + 1;
    rep(k,0,103) {
      tot -= dp[s-1][0][k-1];
      dp[s][0][k] = dp[s-1][0][k-1];
    }
    dp[s][0][1] = tot;
  }

  rep(c,1,51) {
    LL tot = (1LL<<c);
    dp[0][c][1] = tot + dp[0][c-1][1];
  }

  rep(s,1,51) rep(c,1,51) {
    rep(k,0,103) dp[s][c][k] = dp[s][c-1][k];
    if(c+1 == s) {
      dp[s][c][1] -= (1LL<<c);
      dp[s][c][2] += (1LL<<c);
    } else if(c+1 > s) {
      dp[s][c][1] += (1LL<<c);
    } else {
      dp[s][c][(s - c - 1) + 1] -= (1LL<<c);
      dp[s][c][(s - c - 1) + 2] += (1LL<<c);
    }
  }

}

int main() {
  pre();
  int t;
  S(t);
  while(t--) {
    int s,c,k;
    M.clear();
    scanf("%d%d%d",&s,&c,&k);
    LL ans = 0;
    rep(i,k,103) ans += dp[s][c][i];
    printf("%lld\n",ans);
  }
  return 0;
}