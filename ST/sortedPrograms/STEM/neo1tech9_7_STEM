#include <bits/stdc++.h>
#include <assert.h>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef vector < long long > vll;
typedef pair < long long, long long > pll;
typedef pair < int, int > pii;
typedef vector < int > vii;

#define csl ios_base::sync_with_stdio(false); cin.tie(NULL)
#define mp make_pair
#define fst first
#define snd second

ll t, n, u, v, m, q, r, ql, qr, k, l, s, x, y, w, h, c, a, b, z, d;
const int N =  500;
const long long mod = 1e9 + 7;
const long long INF = 1LL << 57LL;
const bool JUDGE = false;
string str[N];
int main() {
    csl;
	if (JUDGE) {
        freopen("cricket.in", "r", stdin);
        freopen("cricket.out", "w", stdout);
	}
	cin >> t;
	string ans = "";
	while (t--) {
		cin >> n;
		ans = "";
		for (int i = 0; i < n; ++i) cin >> str[i];
		string pr = "";
		for (int i = 0; i < str[0].size(); ++i) {
			pr.clear();
			for (int j = i; j < str[0].size(); ++j) {
				pr.push_back(str[0][j]);
				bool okk = true;
				for (int l = 0; l < n; ++l) {
					if (str[l].size() < pr.size()) {
						okk = false;
						break;
					}
					if (okk == false) break;
					okk = false;
					for (int k = 0; k <= (int)str[l].size() - (int)pr.size(); ++k) {
						bool ok = true;
						for (int m = 0; m < pr.size(); ++m) if (str[l][k + m] != pr[m]) ok = false;
						okk |= ok;
					}
				}
				if (okk && pr.size() > ans.size()) ans = pr;
				else if (okk && pr.size() == ans.size()) ans = min(ans, pr);
			}
		}
		cout << ans << '\n';
	}
	return 0;
}
/*#include <bits/stdc++.h>
using namespace std;
 
typedef long long ll;
typedef vector < long long > vll;
typedef pair < long long,  long long > pll;
typedef pair < int,  int > pii;
typedef vector < int > vii;
 
#define mp make_pair
#define fst first
#define snd second
 
ll t, n, u, v, m, q, r, ql, qr, k, d, l, w, c, x;
const int N = 1e5 + 500;
const ll mod = 1e9 + 7;
const ll INF = 1LL << 57LL;
struct {
{
}
};*/ 