#include <bits/stdc++.h>
#include <string>
using namespace std;
bool kmp(string text, string pat){
	int txtlen = text.length(), patlen = pat.length();
	int lps[patlen];
	int prev = 0, ptr = 1;
	lps[0] = 0;
	while (ptr < patlen){
	    if(pat[prev] == pat[ptr]){
	    	prev++;
	    	lps[ptr] = prev;
	    	ptr++;
	    }
	    else{
	    	if(prev == 0) {
	    		lps[ptr] = 0;
	    		ptr++;
	    	}
	    	else prev = lps[prev - 1];
	    }
	}
	int txtptr = 0, patptr = 0;
	while (txtptr < txtlen){
	    if(text[txtptr] == pat[patptr]){
	    	txtptr++;
	    	patptr++;
	    }
	    if(patptr == patlen){
	    	return true;
	    	patptr = lps[patptr - 1];
	    }
	    else if(txtptr < txtlen && text[txtptr] != pat[patptr]){
	    	if(patptr == 0) txtptr++;
	    	else patptr = lps[patptr - 1];
	    }
	}
	return false;
}
int main(){
	int test;
	scanf("%d",&test);
	while (test--){
		int n;
		cin>>n;
		string s[n];
		string ans = "";
		for (int i = 0; i < n; i++) cin>>s[i];
		for (int i = 0; i < n; i++) {
			for (int w = 0; w < (int)s[i].length(); w++) {
				string tmp = "";
				for (int u = w; u < (int)s[i].length(); u++) {
					tmp.push_back(s[i][u]);
					bool ok = true;
					for (int j = 0; j < n; j++) {
						if(!kmp(s[j], tmp)) {
							ok = false;
						}
					}
					if(ok){
						int len = tmp.length();
						if(len > (int)ans.length()) ans = tmp;
						else if(len == (int)ans.length()) ans = min(ans, tmp);
					}
				}
			}
		}
		cout<<ans<<endl;
	}	
}