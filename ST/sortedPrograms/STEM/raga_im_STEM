#include <cmath>
#include <cstdio>
#include <set>
#include <map>
#include <iostream>
#include <algorithm>
#include <limits>
using namespace std;

map <string,int> mymap;
map <string,int>:: iterator it;
void fills(string s){
    string k;
    set <string> my;
    for(int i=0;i<s.length();i++)
        for(int l=1;l<=s.length()-i;l++){
        k=s.substr(i,l);
        if(my.find(k)==my.end()){
            my.insert(k);
            if(mymap.find(k)==mymap.end()){
                mymap.insert(std::pair<string,int>(k,1));
            }
            else{
                it=mymap.find(k);
                it->second=it->second+1;
            }
          
        }
        
    }
}
int main() {
    /* Enter your code here. Read input from STDIN. Print output to STDOUT */ 
  std::ios::sync_with_stdio(false);
    int t,n,f;
    string s,k;
    cin>>t;
    while(t--){
        cin>>n;
        mymap.clear();
        f=-1;
       // cout<<mymap.size()<<endl;
        for(int i=0;i<n;i++){
            cin>>s;
            fills(s);
        }
        for(it=mymap.begin();it!=mymap.end();it++){
            if(it->second==n){
                 if(f==-1){
                    k=it->first;
                     f=1;
                 }
                else{
                    if((it->first).length()>k.length())
                        k=it->first;
                    else if((it->first).length()==k.length()&&k>it->first)
                         k=it->first;
                }
                    //break;
            }
         //cout<<(it->first)<<endl;
            }
        
        cout<<k<<endl;
    }
   
    
    return 0;
}
