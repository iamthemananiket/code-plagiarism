/*
 *
 * File: stuff.cpp
 * Author: Andy Y.F. Huang (azneye)
 * Created on Aug 23, 2014, 11:50:25 PM
 */

#include <bits/stdc++.h>

using namespace std;

namespace stuff {
typedef long long ll;
int arr[111000];
int bit[111000];

void update(int pos, int val) {
  for (int i = pos; i <= 100000; i += i & -i)
    bit[i] += val;
}

int get(int pos) {
  int res = 0;
  for (int i = pos; i > 0; i -= i & -i)
    res += bit[i];
  return res;
}

void solve(int test_num) {
  int N, K;
  cin >> N >> K;
  for (int i = 0; i < N; i++)
    cin >> arr[i];
  ll invs = 0;
  memset(bit, 0, sizeof(bit));
  for (int i = 0; i < N; i++) {
    invs += i - get(arr[i]);
    update(arr[i], 1);
  }
  sort(arr, arr + N);
  bool have_equal = false;
  for (int i = 1; i < N; i++)
    if (arr[i] == arr[i - 1])
      have_equal = true;
  while (K > 0) {
    invs--;
    if (invs < 0)
      invs = !have_equal;
    K--;
  }
  cout << "Case " << test_num << ": " << invs << endl;
}

void solve() {
#ifdef AZN
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
//freopen("azn.txt", "w", stderr);
  double start_t = clock();
#endif
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  int T = 1;
  cin >> T;
  for (int t = 1; t <= T; t++)
    solve(t);
#ifdef AZN
  pln("Took:", (clock() - start_t) / CLOCKS_PER_SEC);
#endif
}
}

int main() {
  stuff::solve();
  return 0;
}

