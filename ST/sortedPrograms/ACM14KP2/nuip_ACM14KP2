#include <string>
#include <vector>
#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<stack>
#include<queue>
#include<cmath>
#include<algorithm>
#include<functional>
#include<list>
#include<deque>
#include<bitset>
#include<set>
#include<map>
#include<cstring>
#include<sstream>
#include<complex>
#include<iomanip>
#define X first
#define Y second
#define pb push_back
#define rep(X,Y) for (int (X) = 0;(X) < int(Y);++(X))
#define rrep(X,Y) for (int (X) = int(Y-1);(X) >=0;--(X))
#define repe(X,Y) for ((X) = 0;(X) < int(Y);++(X))
#define peat(X,Y) for (;(X) < int(Y);++(X))
#define all(X) (X).begin(),(X).end()
#define rall(X) (X).rbegin(),(X).rend()

using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;

ll bit[212345];
int nn=1<<17;

ll Sum(int i){
  ll s=0;
  while(i>0){
    s+=bit[i];//ok?
    i-=i&-i;
  }
  return s;
}

void add(int i,int x){
  while(i<=nn){
    bit[i]+=x;
    i+=i&-i;
  }
}
int main(){
  ios_base::sync_with_stdio(false);
  cout<<fixed<<setprecision(0);
  int i,j,k;
  int t,T;
  cin>>T;
  rep(t,T){
    int n,k;
    fill(bit,bit+212345,0);
    cin>>n>>k;
    vector<int> a(n);
    ll sum=0;
    rep(i,n){
      cin>>a[i];
    }
    rrep(i,n){
      sum+=Sum(a[i]);
      add(a[i]+1,1);
    }
   // cout<<sum<<endl;
    cout<<"Case "<<t+1<<": ";
    if(sum>k){
      cout<<sum-k<<endl;
    }else{
      cout<<1-( (sum-k)%2==0 || set<int>(all(a)).size()<n )<<endl;
    }
  }
  return 0;
}