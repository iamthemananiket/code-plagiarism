/*
 *
 * File: stuff.cpp
 * Author: Andy Y.F. Huang (azneye)
 * Created on Aug 23, 2014, 11:50:25 PM
 */

#include <bits/stdc++.h>

using namespace std;

namespace stuff {
typedef long long ll;
const int MAX = 111000;

void solve(int test_num) {
  int N;
  cin >> N;
  vector<int> vals(N);
  for (int i = 0; i < N; ++i) {
    cin >> vals[i];
  }
  set<pair<int, int>> sorted; //(size, index)
  int S = 0;
  for (int i = 0; i < N; ++i) {
    auto it = sorted.lower_bound( { vals[i] + 1, -1 });
    if (it != sorted.end()) {
      sorted.insert( { vals[i], it->second });
      sorted.erase(it);
    } else {
      sorted.insert( { vals[i], S++ });
    }
  }
  cout << S << ' ';
  for (const auto& st : sorted) {
    cout << st.first << ' ';
  }
  cout << endl;
}

void solve() {
#ifdef AZN
//make_case();
  double start_t = clock();
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
//freopen("azn.txt", "w", stderr);
#endif
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  int T = 1;
//scanf("%d", &T);
  cin >> T;
  for (int t = 1; t <= T; t++)
    solve(t);
#ifdef AZN
  cerr << fixed << setprecision(3) << "Took: " << ((clock() - start_t) / CLOCKS_PER_SEC);
#endif
}
}

int main() {
  stuff::solve();
  return 0;
}
