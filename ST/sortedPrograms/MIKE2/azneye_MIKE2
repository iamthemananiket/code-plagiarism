/*
 * Solved
 * File:   MIKE2.cpp
 * Author: Andy Y.F. Huang (azneye)
 * Created on 2013-12-29, 12:42:31 AM
 */

#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstddef>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <complex>
#include <deque>
#include <fstream>
#include <functional>
#include <iomanip>
#include <iostream>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <valarray>
#include <vector>

using namespace std;

namespace MIKE2 {
typedef long long ll;
int a[1 << 20];
ll sum2[1 << 20], sum[1 << 20];

void solve(int test_num) {
  int N;
  ll X;
  scanf("%d %lld", &N, &X);
  for (int i = 1; i <= N; i++)
    scanf("%d", a + i);
  sort(a + 1, a + N + 1);
  sum2[0] = sum[0] = 0;
  for (int i = 1; i <= N; i++) {
    sum[i] = sum[i - 1] + a[i];
    sum2[i] = sum2[i - 1] + (a[i] + 1) / 2;
  }
  for (int fail = 0; fail <= N; fail++) {
    int res = -1;
    for (int low = 0, high = N - fail; low <= high;) {
      int mid = (low + high) >> 1;
      if (sum[mid] + sum2[N-fail] - sum2[mid] <= X) {
        res = mid;
        low = mid + 1;
      } else
        high = mid - 1;
    }
    if (~res) {
      printf("%d %d\n", fail, res);
      break;
    }
  }
}

void solve() {
#ifdef AZN
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
  freopen("azn.txt", "w", stderr);
#endif
  solve(1);
}
}

int main() {
  MIKE2::solve();
  return 0;
}
