//#include "testlib.h"
//#include <spoj.h>
 
#include <iostream>
#include <stdio.h>
#include <vector>
#include <string>
#include <algorithm>
#include <math.h>
#include <assert.h>
#include <time.h>
#include <memory.h>
#include <set>
#include <numeric>
#include <map>
#include <queue>
#include <stack>
#include <bitset>
#include <unordered_map>
 
using namespace std;
 
const int mod = 1e9+7;
 
void add(int &x, int v) {
    x += v;
    if (x >= mod) x -= mod;
}
 
int n, m;
int a[2222], b[2222];
int dp[2222][2222];
 
const int N = 2222;
int t[2222];
void addF(int i, int value) {
    for (; i < N; i += (i + 1) & -(i + 1))
        add(t[i], value);
}
 
// sum[0,i]
int sum(int i) {
    int res = 0;
    for (; i >= 0; i -= (i + 1) & -(i + 1))
        add(res, t[i]);
    return res;
}
 
int main() {
    ios::sync_with_stdio(0);
    
//    n = 1500; m = 1000; //210142818
//    for(int i = 0; i < n; ++i)
//        a[i] = 1;
//    for(int i = 0; i < m; ++i)
//        b[i] = 1;
 
    cin >> n >> m;
    for(int i = 0; i < n; ++i)
        cin >> a[i];
    for(int i = 0; i < m; ++i)
        cin >> b[i];
 
    for(int i = 0; i < n; ++i)
        dp[i][0] = 1;
    
    vector< pair<int, int> > v;
    for(int j = 1; j < m; ++j) {
        vector<int> nums;
        for(int i = 0; i < n; ++i)
            nums.push_back(a[i] + b[j-1]);
        nums.push_back(-1); nums.push_back(2e9);
        sort(nums.begin(), nums.end());
        nums.resize(unique(nums.begin(), nums.end()) - nums.begin());
        
        memset(t, 0, sizeof t);
        for(int i = 0; i < n; ++i) {
            dp[i][j] = sum(lower_bound(nums.begin(), nums.end(), a[i] + b[j] + 1) - nums.begin() - 1);
            addF(lower_bound(nums.begin(), nums.end(), a[i] + b[j-1] + 1) - nums.begin() - 1, dp[i][j-1]);
        }
    }
    int ans = 0;
    for(int i = 0; i < n; ++i)
        add(ans, dp[i][m-1]);
    cout << ans << "\n";
    
    //cout << 1.0 * clock() / CLOCKS_PER_SEC << "\n";
    return 0;
} 