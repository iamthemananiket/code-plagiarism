#include <bits/stdc++.h>
using namespace std;
#define M 2020
const int mod = 1000000007;

int n, m;
int a[M], A[M];
int nx, x[M];
int b[M];

int t[M], f[M][M];
void add(int &x, int y) {
    x += y;
    if (x >= mod) {
        x -= mod;
    }
}

void Add(int k, int v) {
    while (k <= nx) {
        add(t[k], v);
        k += k & -k;
    }
}
int Sum(int k, int s = 0) {
    while (k) {
        add(s, t[k]);
        k -= k & -k;
    }
    return s;
}

int main() {
    //freopen("sum1.in", "r", stdin);
    scanf("%d %d", &n, &m);

    for (int i = 1; i <= n; i++) {
        scanf("%d", &a[i]);
        x[i-1] = a[i];
    }
    nx = n;
    sort(x, x + nx);
    nx = unique(x, x + nx) - x;
    for (int i = 1; i <= n; i++) {
        A[i] = lower_bound(x, x + nx, a[i]) - x + 1;
    }

    for (int i = 1; i <= m; i++) {
        scanf("%d", &b[i]);
    }

    for (int j = 1; j <= n; j++) {
        f[1][j] = 1;
    }
    for (int i = 2; i <= m; i++) {
        memset(t, 0, sizeof t);
        for (int j = 1; j <= n; j++) {
            int c = upper_bound(x, x + nx, a[j] + b[i] - b[i-1]) - x + 1 - 1;
            f[i][j] = Sum(c);
            Add(A[j], f[i-1][j]);
        }
    }

    int sum = 0;
    for (int i = 1; i <= n; i++) {
        add(sum, f[m][i]);
    }
    printf("%d\n", sum);
    return 0;
}
