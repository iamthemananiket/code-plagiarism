#include <stdio.h>
#include <memory.h>
#include <algorithm>
#include <vector>
using namespace std;
#define M 100009
#define min(x,y) (x<y?x:y)
 
vector<int> v[M];
 
int deg[M],L[M],R[M],LL[M],RR[M];
 
int c[M][33][33],f[33][33];
 
int ans[33];
 
int vis[M];
int val[33];

int dist(int x,int y,int z,int w) {
	int X = min(x,z);
	int Y = max(y,w);
	int len = Y - X + 1;
	return len - (w - z + 1);
}
 
void dfs(int u) {
    if(vis[u]) return;
    vis[u] = 1;
    for(int i=0;i<v[u].size();i++) {
        int x = v[u][i];
        dfs(x);
        val[0] = 0;
        for(int j=1;j<=32;j++) for(int k=j;k<=32;k++) {
            if(x != 1) c[u][j][k] = min(c[u][j][k],c[x][j][k] + dist(j,k,L[x],R[x]));
            else c[u][j][k] = min(c[u][j][k],c[x][j][k] + dist(j,k,LL[u],RR[u]));
        }
    }
}
 
int  main(){
    int n,m,x,y,l,r;
    int _size = 256 << 20; // 256MB
	char *p = (char*)malloc(_size) + _size;
	__asm__("movl %0, %%esp\n" :: "r"(p) );
 
    ///freopen("Girl.in","r",stdin);
    while(scanf("%d%d",&n,&m)==2){
        for(int i = 1; i <= n; i ++) v[i].clear();
        memset(vis,0,sizeof(vis));
        memset(deg,0,sizeof(deg));
        while(m--){
            scanf("%d%d%d%d",&x,&y,&l,&r);
            L[x]=l,R[x]=r;
            if(x == 1) LL[y] = l,RR[y] = r;
            deg[x]++;
            v[y].push_back(x);
        }
        for(int i=1;i<=n;i++) for(int j=1;j<=32;j++) for(int k=j;k<=32;k++) c[i][j][k] = n * 32 + 1;
        for(int i=1;i<=32;i++) for(int j=i;j<=32;j++) f[i][j] = n * 32 + 1;
        for(int j=1;j<=32;j++) for(int k=j;k<=32;k++) c[1][j][k] = 0;
        vis[1] = 1;
        for(int i=1;i<=n;i++) if(!deg[i]) {
            dfs(i);
        }
        for(int i=1;i<=n;i++) if(!deg[i]) {
            for(int j=1;j<=32;j++) for(int k=j;k<=32;k++) {
                f[j][k] = min(f[j][k],c[i][j][k]);
            }
        }
        ans[0] = 0;
        for(int i=1;i<=32;i++){
            int tp = f[1][i];
            for(int j=1;j<i;j++) tp = min(tp,ans[j]+f[j+1][i]);
            ans[i] = tp;
        }
        printf("%d\n",ans[32]);
    }
}