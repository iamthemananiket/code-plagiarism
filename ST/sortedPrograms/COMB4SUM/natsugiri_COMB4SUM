#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
using namespace std;

typedef long long LL;
typedef vector<int> VI;

#define REP(i,n) for(int i=0, i##_len=(n); i<i##_len; ++i)
#define EACH(i,c) for(__typeof((c).begin()) i=(c).begin(),i##_end=(c).end();i!=i##_end;++i)
#define eprintf(s...) fprintf(stderr, s)

template<class T> inline void amin(T &a, const T &b) { if (b<a) a=b; }
template<class T> inline void amax(T &a, const T &b) { if (a<b) a=b; }


int T;
int N, A[1111];
LL B[1000011], S[1000011];

int main() {

    scanf("%d", &T);
    REP ($, T) {
	scanf("%d", &N);
	
	REP (i, N) scanf("%d", A+i);
	int t = 0;
	REP (i, N) REP (j, i) {
	    B[t++] = A[i]+A[j];
	}
	sort(B, B+t);
	REP (i, t) S[i+1] = S[i] + B[i];

	LL ans = 0;
	REP (i, N) REP (j, i) {
	    ans -= (LL)abs(A[i]-A[j]) * (N-2) * 2;
	}
	
	REP (i, t) {
	    ans += B[i] * i - S[i];
	    ans += (S[t] - S[i+1]) - B[i] * (t-i-1);
	}

	printf("%lld\n", ans);
    }
    return 0;
}
