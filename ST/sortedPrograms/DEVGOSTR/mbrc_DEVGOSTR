#include <bits/stdc++.h>
#define rep(i,x,y) for (int i = (x); i<=(y); i++)
#define repe(i,x,y) for (int i = (x); i < (y);i++)
#define drep(i,x,y) for (int i = (x); i >= (y); i--)
#define mp make_pair
#define pb emplace_back
#define mt make_tuple
#define gcd __gcd
#define sf(n) scanf("%Lf",&n)
#define prf(n) printf("%Lf",n)
#define	s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define pr(n) printf("%d",n)
#define prl(n) printf("%lld",n)
#define endc printf("\n")
#define psp printf(" ")

using namespace std;
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;

const int maxn = 5e5 + 7;


vector<string> A[3][31];

vector<string> B;

vector<pii> ap[maxn];

int lims[4];

int n,C;

bool mode;

inline void generate(string s, int pos) {

	if (mode) {
		if (pos >= lims[C]) return;
	} else {
		if (pos >= n) {
			B.pb(s);
			return;
		}
	}

	//cout<<pos<<endl;

	A[C][pos].pb(s);

	bool Z[3] = {true,true,true};

	for (pii z : ap[pos]) {
		if (s[z.first] == s[z.second]) {
			Z[s[z.first] - 'a'] = false;
		}
	}

	repe(i,0,C) {
		if (!Z[i]) continue;
		generate(s + (char)(i + 'a'), pos+1);
	}
}

void solve () {
	
	int K;


	cin>>C>>K; 

	string s; cin>>s; n = s.size();
	
	//cin>>n;

	/*if (C == 1) {
		int ans = 0;
		repe(i,0,n) {
			ans += (s[i] != 'a')?1:0;
		}
		cout<<(ans <= K)<<endl;
		return;
	}*/



	//if (n < 30) { generate("",0); }

	int ans = 0;

	if (C == 3) {

		repe(i,0,A[C][n].size()) {

			int hamm = 0;

			repe(j,0,n) {
				if (A[C][n][i][j] != s[j]) {
					hamm++;
				}
			}

			if (hamm <= K) {
				ans ++;
			}
		}
	} else {
		B.clear();
		generate("",0);
		repe(i,0,B.size()) {

			int hamm = 0;

			repe(j,0,n) {
				if (B[i][j] != s[j]) {
					hamm++;
				}
			}

			if (hamm <= K) {
				ans ++;
			}
		}
	}


	cout<<ans<<endl;


}


int main() {
	ios::sync_with_stdio(false); cin.tie(0);

	lims[1] = 51; lims[2] = 11; lims[3] = 27;

	rep(i,0,50) ap[i].clear();

	repe(i,0,50) {
		repe(j,i+1,50) {
			int k = j+j-i;
			if (k < 50) {
				ap[k].pb(mp(i,j));
			}
		}
	}

	/*repe(j,0,31) {
		N[j] = 0;
	}*/

	mode = true;

	C = 3;

	generate("",0);

	mode = false;

	/*rep(i,1,31) {
		cout<<A[i].size()<<endl;
	}*/

	/*C = 2;

	generate("",0);

	C = 1;

	generate("",0);*/

	int t; cin>>t; while (t--) solve();
}
