#include <bits/stdc++.h>

using namespace std;

#define X first
#define Y second
#define INPUT freopen("sanskar.inp","r",stdin)
#define OUTPUT freopen("sanskar.out","w",stdout)
#define FOR(i,l,r) for(int i=l;i<=r;i++)
#define REP(i,l,r) for(int i=l;i<r;i++)
#define FORD(i,l,r) for(int i=l;i>=r;i--)
#define REPD(i,l,r) for(int i=l;i>r;i--)
#define ENDL printf("\n")
#define debug 1

typedef long long ll;
typedef pair<int,int> ii;

const int inf=2e9;
const int MOD=1e9+7;
const int N=21;

int n,m,k,test,h[1<<N],r[1<<N],c=0;
ll sum,f[1<<N],a[N];
vector <int> b;
void prepare(){
    scanf("%d%d",&n,&m);
    k=n;
    REP(i,0,n) {
        scanf("%lld",a+i);
        if (a[i]==0) n--,i--;
    }
    sum=0;
    REP(i,0,n) sum+=a[i];
}
int DP(int x){
    if (x==0) return 1;
    if (h[x]==c) return r[x];
    h[x]=c;
    r[x]=0;
    for(auto &i:b) if (i<=x&&!r[x]){
        if ((x&i)==i) r[x]=DP(x^i);
    }else break;
    return r[x];
}
bool solve(){
    if (m>k) return false;
    b.clear();
    REP(i,0,n) f[1<<i]=a[i];
    REP(i,1,1<<n){
        int x=i^(i&-i);
        if (x) f[i]=f[x]+f[i&-i];
        if (f[i]*m==sum) b.push_back(i);
    }
    c++;
    if (sum%m) return false;
    return DP((1<<n)-1);
}
int main(){
    //INPUT;
    scanf("%d",&test);
    while (test--){
        prepare();
        printf("%s\n",(solve()?"yes":"no"));
    }
}
