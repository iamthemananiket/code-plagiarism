#include <string>
#include <vector>
#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<stack>
#include<queue>
#include<cmath>
#include<algorithm>
#include<functional>
#include<list>
#include<deque>
#include<bitset>
#include<set>
#include<map>
#include<cstring>
#include<sstream>
#include<complex>
#include<iomanip>
#include<numeric>
#define X first
#define Y second
#define pb push_back
#define rep(X,Y) for (int (X) = 0;(X) < int(Y);++(X))
#define rrep(X,Y) for (int (X) = int(Y-1);(X) >=0;--(X))
#define repe(X,Y) for ((X) = 0;(X) < int(Y);++(X))
#define peat(X,Y) for (;(X) < int(Y);++(X))
#define all(X) (X).begin(),(X).end()
#define rall(X) (X).rbegin(),(X).rend()

using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
template<class T> ostream& operator<<(ostream &os, const vector<T> &t) {
os<<"{"; rep(i,t.size()) {os<<t[i]<<",";} os<<"}"<<endl; return os;}
template<class S, class T> ostream& operator<<(ostream &os, const pair<S,T> &t) { return os<<"("<<t.first<<","<<t.second<<")";}

ll ave,n,t;
ll memo[1<<22],a[30];

ll solve(ll s,ll sum){
  if(memo[s]>=0)return memo[s];
  if(sum==0)
    return 1;
  ll re=0;
  rep(i,n){
    if(s&(1<<i)){
      if(sum%ave==0 && a[i]<=ave || sum/ave == (sum-a[i])/ave){
        re|=solve(s-(1<<i),sum-a[i]);
      }else{
  //      break;
      }
      if(re)return memo[s]=1;
    }
  }
  return memo[s]=re;
}

int main(){
  ios_base::sync_with_stdio(false);
  cout<<fixed<<setprecision(0);
  ll i,j,k;
  ll T;
  cin>>T;
  while(T--){
    cin>>n>>t;
    ave=0;
    rep(i,n){
      cin>>a[i];
      ave+=a[i];
    }
    if(t==1){
      cout<<"yes"<<endl;
      continue;
    }
    if(ave%t){
      cout<<"no"<<endl;
      continue;
    }
    ave/=t;
    if(ave==0){
      cout<<"yes"<<endl;
      continue;
    }
//    cout<<ave<<endl;
    sort(a,a+n);
    fill(memo,memo+(1<<n),-1);
    cout<<(solve((1<<n)-1,ave*t)?"yes":"no")<<endl;
  }
  return 0;
}