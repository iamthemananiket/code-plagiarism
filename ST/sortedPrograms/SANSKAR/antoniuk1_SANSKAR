#include <iostream>
#include <stdio.h>
#include <vector>
#include <math.h>
#include <cassert>
#include <memory.h>
#include <algorithm>
#include <deque>
#include <set>
#include <map>

using namespace std;

long long a[23];
bool was[1<<23];

bool findd(vector< pair<long long,int> > v, long long s, int k) {
    if (k == 1) return 1;
    
    int mx = 1 << v.size();
    for(int mask = 0; mask < mx; ++mask) {
        long long sm = 0;
        int M = 0;
        for(int i = 0; i < v.size(); ++i)
            if (mask & (1<<i)) {
                sm += v[i].first;
                M += (1 << v[i].second);
            }
        
        
        if (sm == s && !was[M]) {
            vector< pair<long long,int> > vv;
            for(int i = 0; i < v.size(); ++i)
                if ((mask & (1<<i)) == 0)
                    vv.push_back(v[i]);
            
            was[M] = 1;
            if (findd(vv, s, k-1))
                return true;
        }
    }
    return false;
}

int main()
{
    ios::sync_with_stdio(0);
    int t;
    cin >> t;
    while(t --> 0) {
        int n, k;
        cin >> n >> k;
        long long s = 0;
        vector< pair<long long,int> > v;
        memset(was, 0, sizeof was);
        for(int i = 0; i < n; ++i) {
            cin >> a[i];
            s += a[i];
            v.push_back(make_pair(a[i], i));
        }
        if (s % k != 0 || n < k) {
            cout << "no\n";
            continue;
        }
        s /= k;
        
        if (findd(v, s, k))
            cout << "yes\n";
        else
            cout << "no\n";
    }
    return 0;
}