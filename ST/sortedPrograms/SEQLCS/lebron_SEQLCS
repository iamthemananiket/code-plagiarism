/*
*/
 
//#pragma comment(linker, "/STACK:16777216")
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>  
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
#include <memory.h>
#include <ctime> 
#include <unordered_set>
#include <unordered_map>

#define y0 sdkfaslhagaklsldk
#define y1 aasdfasdfasdf
#define yn askfhwqriuperikldjk
#define j1 assdgsdgasghsf
#define tm sdfjahlfasfh
#define lr asgasgash

#define eps 1e-9
#define M_PI 3.141592653589793
#define bs 1000000007
#define bsize 512
#define time asdfasdfasfd

using namespace std;

int tests,n,k,l,ar[1000];
vector<int> v;
unordered_set<long long> was;
unordered_map<long long, int> memo;
int fe[1000];
int nxt[20][20];
int calc;

long long gh(vector<int> &v)
{
    long long res=0;
    for (int i=0;i<v.size();i++)
        res=res*173+v[i]+13;
    return res;
}

int dfs(vector<int>v,int dep)
{
    ++calc;   
    long long R=0;
    if (l<v.size()&&v[l]<=n)
        return 0;
    
    if (dep==n)
    {
        int res=(v[l-1]<=n);
        return res;
    }
    
    if (n-dep<l&&v[l-(n-dep)-1]>n)
        return 0;
    for (int i=0;i<v.size()&&i<l;i++)
        if (i+(n-dep+1)>=l)
            R=R*173+v[i]+1;
    
    R=R*377+dep;
/*    cout<<"!"<<dep<<endl;
    for (int i=0;i<v.size();i++)
        cout<<v[i]<<" ";
    cout<<endl;
    
    cout<<"@"<<R<<endl;
*/
    long long tval=R;
    
    if (was.find(tval)!=was.end())
        return memo[tval];
    was.insert(tval);
    
    int ret=0;
    
    for (int val=1;val<=k;val++)
    {
        vector<int> tv=v;
        int change=0;
        if (v[l-1]<=n&&nxt[v[l-1]][val]<=n)
            continue;
        
        for (int i=0;i+1<v.size();i++)
        {
            int q=v[i];
            if (q>n)
                continue;
            int ps=nxt[q][val];
            if (ps<=n)
                    tv[i+1]=min(tv[i+1],ps);
        }
        if (fe[val]<tv[0]&&fe[val]<=n)
            change=1;
        tv[0]=min(tv[0],fe[val]);
        ret+=dfs(tv,dep+1);
        
        if (ret>=bs)
            ret-=bs;
    }
    memo[tval]=ret;
    return ret;
}

int main(){
//freopen("input.txt","r",stdin);
//freopen("output.txt","w",stdout);
//freopen("F:/input.txt","r",stdin);
//freopen("F:/output.txt","w",stdout);
ios_base::sync_with_stdio(0);
//cin.tie(0);

cin>>tests;
for (;tests;--tests)
{
    cin>>n>>k>>l;
    
    for (int i=1;i<=n;i++)
    {
        cin>>ar[i];
    }
    
    for (int i=0;i<=k;i++)
        fe[i]=1e9;
    for (int i=1;i<=n;i++)
        fe[ar[i]]=min(fe[ar[i]],i);
    
    for (int i=1;i<=k;i++)
        nxt[n][i]=n+1;
    for (int i=n-1;i;--i)
    {
        for (int j=1;j<=k;j++)
            nxt[i][j]=nxt[i+1][j];
        nxt[i][ar[i+1]]=i+1;
    }
    
    was.clear();
    memo.clear();
    v.clear();
    for (int i=0;i<n;i++)
        v.push_back(n+1);
    
    cout<<dfs(v,0)<<endl;
//    cout<<calc<<endl;   
}

//cin.get();cin.get();
return 0;}
