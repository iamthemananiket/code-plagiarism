#include <cstdio>
#include <cmath>
#include <iostream>
#include <set>
#include <algorithm>
#include <vector>
#include <map>
#include <cassert>
#include <string>
#include <cstring>
#include <queue>

using namespace std;

#define rep(i,a,b) for(int i = a; i < b; i++)
#define S(x) scanf("%d",&x)
#define S2(x,y) scanf("%d%d",&x,&y)
#define P(x) printf("%d\n",x)
#define all(v) v.begin(),v.end()
#define sz size()

typedef long long int LL;
typedef pair<int, int > pii;
typedef vector<int > vi;

string s;

LL p(int x, int type) {
  LL res = 1;
  while(type--) {
    res *= x;
  }
  return res;
}

vi v1,v2;

LL solve(vi &v1, vi &v2, int t) {
  LL res = 0;
  rep(i,0,v1.size()) {
    res += p(abs(v1[i]-v2[i]), t);
  }
  return res;
}

LL swaps(string &s) {

  int b = 0;
  int n = s.size();
  rep(i,0,n) b += (s[i] == 'B');

  int trn = 0;
  if(n & 1) {
    if(b == n/2 + 1) trn = 1;
  }

  LL res = 0;
  int idx = -1;
  rep(i,0,n) {
    if(idx == -1) {
      if(!trn) {
        if(s[i] != 'G') {
          idx = i;
        } else {
          trn ^= 1;
        }
      } else {
        if(s[i] != 'B') {
          idx = i;
        } else {
          trn ^= 1;
        }
      }
      continue;
    }

    if(!trn) {
      if(s[i] == 'B') continue;
      res += i - idx;
      idx += 2;
      if(idx > i) idx = -1;
    } else {
      if(s[i] == 'G') continue;
      res += i - idx;
      idx += 2;
      if(idx > i) idx = -1;
    }
  }

  if(!(n&1)) {
    idx = -1;
    trn = 1;
    LL tmp = 0;
    rep(i,0,n) {
      if(idx == -1) {
        if(!trn) {
          if(s[i] != 'G') {
            idx = i;
          } else {
            trn ^= 1;
          }
        } else {
          if(s[i] != 'B') {
            idx = i;
          } else {
            trn ^= 1;
          }
        }
        continue;
      }

      if(!trn) {
        if(s[i] == 'B') continue;
        tmp += i - idx;
        idx += 2;
        if(idx > i) idx = -1;
      } else {
        if(s[i] == 'G') continue;
        tmp += i - idx;
        idx += 2;
        if(idx > i) idx = -1;
      }
    }
    res = min(res, tmp);
  }

  return res;

}

int main() {
  int t;
  S(t);
  while(t--) {
    int type;
    S(type);
    cin >> s;

    int n = s.size();
    int b = 0;
    rep(i,0,n) b += (s[i] == 'B');

    LL ans = 0;
    v1.clear();v2.clear();
    if(n & 1) {
      if(b == n/2) {
        rep(i,0,n) {
          if(i&1) {
            if(s[i] != 'B') v1.push_back(i);
          } else {
            if(s[i] != 'G') v2.push_back(i);
          }
        }
        ans = min(swaps(s), solve(v1, v2, type));

      } else if(b == n/2+ 1) {
        rep(i,0,n) {
          if(i&1) {
            if(s[i] != 'G') v1.push_back(i);
          } else {
            if(s[i] != 'B') v2.push_back(i);
          }
        }
        ans = min(swaps(s), solve(v1, v2, type));
      } else {
        ans = -1;
      }
    } else {
      if(b != n/2) {
        ans = -1;
      } else {
        rep(i,0,n) {
          if(i&1) {
            if(s[i] != 'G') v1.push_back(i);
          } else {
            if(s[i] != 'B') v2.push_back(i);
          }
        }
        ans = min(swaps(s), solve(v1, v2, type));
        v1.clear();v2.clear();
        rep(i,0,n) {
          if(i&1) {
            if(s[i] != 'B') v1.push_back(i);
          } else {
            if(s[i] != 'G') v2.push_back(i);
          }
        }
        ans = min(ans, solve(v1, v2, type));
      }
    }
    printf("%lld\n",ans);
  }
  return 0;
}