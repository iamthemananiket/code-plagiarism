#include <bits/stdc++.h>
#define rep(i,x,y) for (int i = (x); i<=(y); i++)
#define repe(i,x,y) for (int i = (x); i < (y);i++)
#define drep(i,x,y) for (int i = (x); i >= (y); i--)
#define mp make_pair
#define pb emplace_back
#define mt make_tuple
#define gcd __gcd
#define sf(n) scanf("%Lf",&n)
#define prf(n) printf("%.12Lf",n)
#define	s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define pr(n) printf("%d",n)
#define prl(n) printf("%lld",n)
#define endc printf("\n")
#define psp printf(" ")

using namespace std;
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;

const int maxn = 125700;
const ll md = 111111113;
const ll md2 = 57637451;
const ll p = 257;
const ll pi = 77821013L;
const ll pi2 = 44405507L;
const int chars = 12;
const int inf = 1e9;

ll G[chars][maxn];
ll G2[chars][maxn];
ll H[chars][maxn];
ll H2[chars][maxn];
int ls[chars][maxn];
int lt[chars][maxn];
ll pip[maxn];
ll pp[maxn];
ll pip2[maxn];
ll pp2[maxn];
int n;

inline ll ghs(int c, int x,int y) {
	return ( ((G[c][y] - G[c][x-1] + md)) * pip[x-1] )%md;
}

inline ll ght(int c, int x,int y) {
	return ( ((H[c][y] - H[c][x-1] + md)) * pip[x-1] )%md;
}

inline ll ghs2(int c, int x,int y) {
	return ( ((G2[c][y] - G2[c][x-1] + md2)) * pip2[x-1] )%md2;
}

inline ll ght2(int c, int x,int y) {
	return ( ((H2[c][y] - H2[c][x-1] + md2)) * pip2[x-1] )%md2;
}

inline int match(int a,int x,int b,int y) {
	int l = 0, r = min(n-x+1,n-y+1);
	while (l < r) {
		int mid = (l+r+1)/2;
		if (ghs(a,x,x+mid-1) == ght(b,y,y+mid-1) && ghs2(a,x,x+mid-1) == ght2(b,y,y+mid-1)) {
			l = mid;
		} else {
			r = mid-1;
		}
	}
	return l;
}


void solve() {
	int q; cin>>n>>q;
	
	string s,t; cin>>s>>t;
	
	s = " " + s; t = " " + t;

	repe(c,0,chars) {
		char z = c + 'a';
		G[c][0] = G2[c][0] = 0;
		H[c][0] = H2[c][0] = 0;
		rep(i,1,n) {
			G[c][i] = (G[c][i-1] + (s[i]==z)*pp[i])%md;
			H[c][i] = (H[c][i-1] + (t[i]==z)*pp[i])%md;
			G2[c][i] = (G2[c][i-1] + (s[i]==z)*pp2[i])%md2;
			H2[c][i] = (H2[c][i-1] + (t[i]==z)*pp2[i])%md2;
		}
	}

	drep(i,n,1) {
		repe(j,0,chars) {
			if (i==n) {
				ls[j][i] = -1;
				lt[j][i] = -1;
			} else {
				ls[j][i] = ls[j][i+1];
				lt[j][i] = lt[j][i+1];
			}
		}
		
		ls[s[i]-'a'][i] = i;
		lt[t[i]-'a'][i] = i;
	}

	while (q--) {

		int x,y; cin>>x>>y;
		int ans = inf;
		
		set<int> S; S.clear();

		repe(c,0,chars) {
			char z = c + 'a';
			S.insert(c);
			if (ls[c][x] > 0) {
				int p = ls[c][x]-x+1;

				if (y+p-1 > n) continue;

				char d = t[y+p-1];

				//cout<<p<<" : "<<d<<" "<<(lt[d-'a'][y])<<endl;

				if (ls[c][x]-x+1 != lt[d-'a'][y]-y+1) { 
					ans = min(ans,ls[c][x]-x); continue;
				}

				//cout<<p<<endl;	

				int k = match(c,x,d-'a',y);

				//cout<<(char)z<<" : "<<d<<" : "<<k<<endl;

				ans = min(ans, k);
			}
		}

		

		string mc; mc.resize(chars); repe(c,0,chars) mc[c] = '#';

		repe(c,0,chars) {
			if (ls[c][x] > 0 && ls[c][x] <= x + ans - 1) {
				int p = ls[c][x]-x+1;
				mc[c] = t[y+p-1]; S.erase(t[y+p-1]-'a');
			}
		}

		repe(c,0,chars) {
			if (mc[c] == '#') {
				mc[c] = (*S.begin()) + 'a'; S.erase(S.begin());
			}
		}

		cout<<ans<<" "<<mc.substr(0,10)<<endl;
	}
}

int main() {

	pp[0] = pip[0] = pp2[0] = pip2[0] = 1;

	repe(i,1,maxn) {
		pp[i] = (pp[i-1]*p)%md;
		pip[i] = (pip[i-1]*pi)%md;
		pp2[i] = (pp2[i-1]*p)%md2;
		pip2[i] = (pip2[i-1]*pi2)%md2;
	}

	ios::sync_with_stdio(false); cin.tie(0);

	int t; cin>>t; while(t--) solve();
}
