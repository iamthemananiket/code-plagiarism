/***************************************
    codeforces = topcoder = sahedsohel
    IIT,Jahangirnagar University(42)
****************************************/
#include <bits/stdc++.h>
using namespace std;

#define ll long long int
#define ull unsigned long long int
#define inf (INT_MAX/10)
#define linf (LLONG_MAX/10LL)
#define sc(a) scanf("%d",&a)
#define sc2(a,b) scanf("%d%d",&a,&b)
#define sc3(a,b,c) scanf("%d%d%d",&a,&b,&c)
#define sc4(a,b,c,d) scanf("%d%d%d%d",&a,&b,&c,&d)
#define fl(c,i,n) for(i=c;i<n;i++)
#define f(i,n) for(i=0;i<n;i++)
#define mem(a) memset(a,0,sizeof(a))
#define memn(a) memset(a,-1,sizeof(a))
#define pb push_back
#define aov(a) a.begin(),a.end()
#define mpr make_pair
#define PI (2.0*acos(0.0)) //#define PI acos(-1.0)
#define xx first
#define yy second
#define mxv(a) *max_element(aov(a))
#define mnv(a) *min_element(aov(a))
#define LB(a,x) (lower_bound(aov(a),x)-a.begin())
#define UB(a,x) (upper_bound(aov(a),x)-a.begin())
#define to_c_string(a) a.c_str()
#define strtoint(c) atoi(&c[0])
#define pll pair< ll , ll >
#define pii pair< int , int >
#define pid pair< int , double >
#define pcs(a) printf("Case %d: ", a)
#define nl puts("")
#define endl '\n'
#define dbg(x) cout<<#x<<" : "<<x<<endl

template <class T> inline T bigmod(T p,T e,T M){ll ret = 1;for(; e > 0; e >>= 1){if(e & 1) ret = (ret * p) % M;p = (p * p) % M;}return (T)ret;}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}   // M is prime}
template <class T> inline T bpow(T p,T e){ll ret = 1;for(; e > 0; e >>= 1){if(e & 1) ret = (ret * p);p = (p * p);}return (T)ret;}

int toInt(string s){int sm;stringstream ss(s);ss>>sm;return sm;}
int toLlint(string s){long long int sm;stringstream ss(s);ss>>sm;return sm;}


///int mnth[]={-1,31,28,31,30,31,30,31,31,30,31,30,31};  //Not Leap Year
///int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
///int dx[]={-1,+1,0,1,0,-1}; // Hexagonal Direction   **
///int dy[]={-1,+1,1,0,-1,0}; //                       *#*
///                                                     **
///const double eps=1e-9;
///int dx[]={0,1,0,-1};int dy[]={1,0,-1,0}; //4 Direction

/*****************************************************************/
/// ////////////////////   GET SET GO    ////////////////////// ///
/*****************************************************************/


#define intx(i,j,k,l) ((a[i]*b[j]-b[i]*a[j])*(a[k]-a[l])-(a[i]-a[j])*(a[k]*b[l]-b[k]*a[l]))/((a[i]-a[j])*(b[k]-b[l])-(b[i]-b[j])*(a[k]-a[l]))
#define inty(i,j,k,l) ((a[i]*b[j]-b[i]*a[j])*(b[k]-b[l])-(b[i]-b[j])*(a[k]*b[l]-b[k]*a[l]))/((a[i]-a[j])*(b[k]-b[l])-(b[i]-b[j])*(a[k]-a[l]))
#define dst(u,v,x,y) sqrt((x*1.0-u*1.0)*(x*1.0-u*1.0)+(y*1.0-v*1.0)*(y*1.0-v*1.0))
#define area(p1,p2,p3) (p1.xx*p2.yy+p2.xx*p3.yy+p3.xx*p1.yy-p1.yy*p2.xx-p2.yy*p3.xx-p3.yy*p1.xx)

int ts,kk=1;

#define M 100005
#define MD 1000000007LL
#define MX 1001

int n,a[M];
ll qs[(1<<14)],rs=0;

vector< int >st[(1<<14)];
vector< int >qr[(1<<14)];

int s[(1<<14)],l,r;

void add(int x,int rt,int cnt)
{
    int q=st[x].size();
    int h=a[rt];
    ll &qx=qs[x];
    while(q&&a[st[x][q-1]]<=h)
    {
        cnt+=qr[x][q-1];
        qx-=(ll)qr[x][q-1]*(ll)a[st[x][q-1]];
        qr[x].pop_back();
        st[x].pop_back();
        q--;
    }
    qx+=(ll)cnt*(ll)h;
    st[x].pb(rt);
    qr[x].pb(cnt);
}


void clcl(int x)
{
    int q=st[x].size();
    if(q==0)return ;

    int lo,hi,md,rt=r;
    lo=0;
    hi=r-1;
    while(lo<=hi)
    {
        md=(lo+hi)>>1;
        if( s[md]>st[x][q-1] )rt=md,hi=md-1;
        else lo=md+1;
    }
    ll &qx=qs[x];
    for(;rt<r;rt++)
    {
        int cnt=0;
        int h=a[s[rt]];
        while(q&&a[st[x][q-1]]<=h)
        {
            cnt+=qr[x][q-1];
            qx-=(ll)qr[x][q-1]*(ll)a[st[x][q-1]];
            qr[x].pop_back();
            st[x].pop_back();
            q--;
        }
        if(cnt||rt==r-1)
        {
            qx+=(ll)cnt*(ll)h;
            st[x].pb(s[rt]);
            qr[x].pb(cnt);
            q++;
        }
    }
    rs+=qx;
}

void clcr(int x)
{
    int q=st[x].size();
    if(q==0)return ;

    int lo,hi,md,rt=r;
    lo=0;
    hi=r-1;
    while(lo<=hi)
    {
        md=(lo+hi)>>1;
        if( s[md]<st[x][q-1] )rt=md,hi=md-1;
        else lo=md+1;
    }
    ll &qx=qs[x];
    for(;rt<r;rt++)
    {
        int cnt=0;
        int h=a[s[rt]];
        while(q&&a[st[x][q-1]]<=h)
        {
            cnt+=qr[x][q-1];
            qx-=(ll)qr[x][q-1]*(ll)a[st[x][q-1]];
            qr[x].pop_back();
            st[x].pop_back();
            q--;
        }
        if(cnt||rt==r-1)
        {
            qx+=(ll)cnt*(ll)h;
            st[x].pb(s[rt]);
            qr[x].pb(cnt);
            q++;
        }
    }
    rs+=qx;
}

vector< int >qsk[(1<<14)];
bool on[2][(1<<14)];
vector< int >qsv[(1<<14)];

void chk0l(int x)  /// 1110 -> 1100,1010,0110
{
    if(!on[0][x]){
        int y;
        for ( y = x; y > 0; y = ( x & (y-1) ) )
        {
            qsk[x].pb(y);
            clcl(y);
        }
        on[0][x]=1;
        qsk[x].pb(0);
        clcl(y);
    }
    else
    {
        for(int i=0;i<qsk[x].size();i++)clcl(qsk[x][i]);
    }
}

void chk0r(int x)  /// 1110 -> 1100,1010,0110
{
    if(!on[1][x]){
        int y;
        for ( y = x; y > 0; y = ( x & (y-1) ) )
        {
            qsv[x].pb(y);
            clcr(y);
        }
        on[1][x]=1;
        qsv[x].pb(y);
        clcr(y);
    }
    else
    {
        for(int i=0;i<qsv[x].size();i++)clcr(qsv[x][i]);
    }
}

int main()
{
    int t,i,j;

    sc(n);
    f(i,n)sc(a[i]);

    l=r=0;
    f(i,n)
    {
//        if(a[i]){
            int x=a[i];
            while(r&&a[s[r-1]]<=x)r--;
            s[r++]=i;

//            if( __builtin_popcount(a[i])>2 )
//                chk1l(a[i]);
//            else
                chk0l(a[i]);
            add(a[i],i,1);
//        }
//        else
//            rs+=q0;
//        cout<<i<<" "<<rs<<" "<<q0<<endl;
    }
    f(i,(1<<14))///clr
    {
        st[i].clear();
        qr[i].clear();
        qs[i]=0;
    }
////    cerr<<"--------------"<<endl;
    l=r=0;
    for(i=n-1;i>-1;i--)
    {
//        if(a[i]){
            int x=a[i];
            while(r&&a[s[r-1]]<=x)r--;
            s[r++]=i;

//            if( __builtin_popcount(a[i])>2 )
//                chk1r(a[i]);
//            else
                chk0r(a[i]);
                rs-=qs[a[i]];
            add(a[i],i,1);
//        }
//        else
//            rs+=q0;
//        cout<<i<<" "<<rs<<" "<<q0<<endl;
    }
    printf("%lld\n",rs);

    return 0;
}
