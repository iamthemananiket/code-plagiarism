/*
*/

//#pragma comment(linker, "/STACK:16777216")
#include <fstream>
#include <iostream>
#include <string>
#include <complex>
#include <math.h>
#include <set>
#include <vector>
#include <map>  
#include <queue>
#include <stdio.h>
#include <stack>
#include <algorithm>
#include <list>
#include <ctime>
#include <memory.h>
#include <ctime> 
#include <assert.h>

#define y0 sdkfaslhagaklsldk
#define y1 aasdfasdfasdf
#define yn askfhwqriuperikldjk
#define j1 assdgsdgasghsf
#define tm sdfjahlfasfh
#define lr asgasgash

#define eps 1e-8
#define M_PI 3.141592653589793
#define bs 1000000007
#define bsize 512

const int N = 2000000;

using namespace std;

int dp[N][10],n,k,tests,s;
int Inv[1000];

vector<vector<int> > mult(vector<vector<int> > a,vector<vector<int> >b)
{
	vector<vector<int> > res=a;
	for (int i=0;i<res.size();i++)
		for (int j=0;j<res[0].size();j++)
			res[i][j]=0;
	for (int i=0;i<res.size();i++)
			for (int k=0;k<res.size();k++)	
			if (a[i][k])
				for (int j=0;j<res.size();j++)
				res[i][j]=(res[i][j]+1ll*a[i][k]*b[k][j])%bs;
	return res;
}

vector<vector<int> > pw(vector<vector<int> > a,int b)
{
	if (b==1)
		return a;
	if (b%2)
		return mult(a,pw(a,b-1));
	return pw(mult(a,a),b/2);
}

long long pw(long long a,long long b)
{
	if (b==0)
		return 1;
	if (b%2)	
		return a*pw(a,b-1)%bs;
	return pw(a*a%bs,b/2);
}

void add(int&a,int b)
{
	a+=b;
	if (a>=bs)
		a-=bs;
}

int C(int n,int m)
{
	long long prod=1;
	for (int i=n;i>n-m;i--)
		prod=1ll*prod*i%bs;
	for (int i=1;i<=m;i++)
		prod=1ll*prod*Inv[i]%bs;
	return prod;
}

vector<vector<int> > v;
vector<vector<int> > V[10][45];
int K;

int get_ps(int a,int b)
{
	int k=K;
	return (a-1)*(k-1)+b-1;
}

void show(vector<vector<int> > v)
{
	for (int i=0;i<v.size();i++)
	{
		for (int j=0;j<v[i].size();j++)
			cout<<v[i][j]<<" ";
		cout<< "@@ "<<endl;
	}
}

int main(){
	//freopen("beavers.in","r",stdin);
	//freopen("beavers.out","w",stdout);
//	freopen("F:/in.txt","r",stdin);
//	freopen("F:/output.txt","w",stdout);
	ios_base::sync_with_stdio(0);
	//cin.tie(0);
	
	for (int i=0;i<=20;i++)
		Inv[i]=pw(i,bs-2);
	
	for (int k=3;k<=7;k++)
	{
		K=k;
		int sz=(k-1)*(k-1)+3;
		v.resize(sz);
		for (int i=0;i<v.size();i++)
			v[i].resize(sz);
		for (int i=0;i<sz;i++)
			for (int j=0;j<sz;j++)
				v[i][j]=0;
		
		for (int i=1;i<k;i++)
			for (int j=1;j<k;j++)
			{
				int ps=get_ps(i,j);
				if (i+1<k)
					v[ps][get_ps(i+1,j)]++;
				if (j==i)
					v[ps][get_ps(1,j)]++;
				if (j==i&&j>1)
					v[ps][get_ps(1,j-1)]++;	
				if (j==1&&i==1)
					v[ps][sz-2]++;
			}
		
		v[sz-2][sz-1]++;
		
		v[sz-2][sz-2]=v[sz-1][sz-1]=1;
		
		V[k][0]=v;
		for (int i=1;i<=30;i++)
			V[k][i]=mult(V[k][i-1],V[k][i-1]);
		
		V[k][31]=V[k][30];
		for (int i=0;i<V[k][31].size();i++)
			for (int j=0;j<V[k][31][i].size();j++)
				V[k][31][i][j]=(i==j);
	}
	
	cin>>tests;
	for (;tests;--tests)
	{
		//int ans=0;
		cin>>n>>k;
	
		vector<vector<int> > v=V[k][31];
		
		for (int i=30;i>=0;--i)
			 if (n&(1<<i))
			 	v=mult(v,V[k][i]);
		
		//show(v);
		// dp[i][1..k-1]
		//..
		// dp[i-k+1][1..k-1]
		// ans
		
		int ans=v[k*2-3][v.size()-1];
		/*
		for (int i=0;i<=n;i++)
		{
			for (int j=1;j<k;j++)
			{
				if (dp[i][j]==0)
					continue;
				add(dp[i+j][j-1],dp[i][j]);
				add(dp[i+j][j],dp[i][j]);
			}
			add(s,dp[i][0]);
			add(ans,s);
		}
		*/
		int res=C(n,k);
		//cout<<"@"<<res<<endl;
		//cout<<"@"<<ans<<" "<<ans2<<endl;
		add(res,bs-ans);
		cout<<res<<endl;
	}
	
	return 0;
}