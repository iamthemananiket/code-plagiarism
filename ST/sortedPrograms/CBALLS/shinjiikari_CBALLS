#include <stdio.h>
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pdd pair<double,double>
#define FILL(a,x) memset(a,x,sizeof(a))
#define	foreach( gg,ii ) for( typeof(gg.begin()) ii=gg.begin();ii!=gg.end();ii++)
#define	mp make_pair
#define	pb push_back
#define	X first
#define	Y second
#define sz(a) int((a).size())
#define N 10001
#define MAX 30
#define mod 1000000007
#define REP(i,a) for(int i=0;i<a;++i)
#define REPP(i,a,b) for(int i=a;i<b;++i)
#define all(a) a.begin(),a.end()
const ll INF = 1e18+1;

inline ll input(void)
{
	char t;
	ll x=0;
	int neg=0;
	t=getchar();
	while((t<48 || t>57) && t!='-')
		t=getchar();
	if(t=='-')
		{neg=1; t=getchar();}
	while(t>=48 && t<=57)
	{
		x=(x<<3)+(x<<1)+t-48;
		t=getchar();
	}
	if (neg) x=-x;
	return x;
}

inline void output(ll x)
{
	char a[20];
	int i=0,j;
	a[0]='0';
	if (x<0) {putchar('-'); x=-x;}
	if (x==0) putchar('0');
	while(x)
	{
		a[i++]=x%10+48;
		x/=10;
	}
	for(j=i-1;j>=0;j--)
	{
		putchar(a[j]);
	}
	putchar('\n');
}

int primes[N],a[N];

void make()
{
	int i,j,k,cnt;
	FILL(primes,0);
	primes[0]=1;
	primes[1]=1;
	for(i=2;i<N;i++)
	{
		if (primes[i]) continue;
		for(j=2*i;j<N;j+=i) primes[j]=1;
	}
}

int main()
{
	make();
	int t,n,prev,x;
	ll sum,ans;
	t=input();
	while(t--)
	{
		n=input();
		REP(i,n) a[i]=input();
		sum=INF;
		REPP(i,2,N)
		{
			if (primes[i]) continue;
			prev=0;
			ans=0;
			REP(j,n)
			{
				x=a[j]%i;
				if ((x==0&&a[j]<prev)||(x!=0&&a[j]-x+i<prev))
					ans+=prev-a[j];
				else
				{
					prev=a[j];
					if (x!=0) prev+=(i-x);
					ans+=(prev-a[j]);
				}
			}
			sum=min(sum,ans);
		}
		output(sum);
	}
return 0;
}
