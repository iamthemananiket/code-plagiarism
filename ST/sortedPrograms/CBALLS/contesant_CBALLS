#include <bits/stdc++.h>

#define pb push_back
#define all(x) (x).begin(), (x).end()

#ifdef KAZAR
  #define eprintf(...) fprintf(stderr,__VA_ARGS__)
#else
  #define eprintf(...) 0
#endif

using namespace std;

template<class T> inline void umax(T &a,T b){if(a < b) a = b;}
template<class T> inline void umin(T &a,T b){if(a > b) a = b;}
template<class T> inline T abs(T a){return a > 0 ? a : -a;}

typedef long long ll;
typedef pair<int, int> ii;
typedef vector<int> vi;

const int inf = 1e9 + 143;
const ll longinf = 1e18 + 143;

inline int read(){int x;scanf(" %d",&x);return x;}

const int mod = 1e9 + 7;

const int N = 3e4 + 100;

ll sum[N];
int cnt[N];

int main(){

#ifdef KAZAR
  freopen("f.input", "r", stdin);
  freopen("f.output", "w", stdout);
  freopen("error", "w", stderr);
#endif // KAZAR

  int t = read();
  while (t--) {
    int n = read();
    int pv = 0;
    int res = 0;
    memset(cnt, 0, sizeof cnt);
    for (int i = 0; i < n; i++) {
      int x = read();
      if (x < pv) {
        res += pv - x;
        x = pv;
      }
      cnt[x] += 1;
      pv = x;
    }
    pv *= 2;
    for (int i = 1; i <= pv; i++) {
      sum[i] = sum[i - 1] + ll(cnt[i]) * i;
      cnt[i] += cnt[i - 1];
    }
    ll best = longinf;
    for (int d = 2; d <= pv; d++) {
      ll cur = 0;
      for (int i = d; i <= pv; i += d) {
        cur += ll(i) * (cnt[i] - cnt[i - d]) - (sum[i] - sum[i - d]);
      }
      umin(best, cur);
    }
    cout << res + best << endl;
  }

  return 0;
}
