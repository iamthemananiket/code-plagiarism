#include <string>
#include <vector>
#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<stack>
#include<queue>
#include<cmath>
#include<algorithm>
#include<functional>
#include<list>
#include<deque>
#include<bitset>
#include<set>
#include<map>
#include<unordered_map>
#include<cstring>
#include<sstream>
#include<complex>
#include<iomanip>
#include<numeric>
#define X first
#define Y second
#define pb push_back
#define rep(X,Y) for (int (X) = 0;(X) < (Y);++(X))
#define rrep(X,Y) for (int (X) = (Y)-1;(X) >=0;--(X))
#define repe(X,Y) for ((X) = 0;(X) < (Y);++(X))
#define peat(X,Y) for (;(X) < (Y);++(X))
#define all(X) (X).begin(),(X).end()
#define rall(X) (X).rbegin(),(X).rend()
#define eb emplace_back
#define UNIQUE(X) (X).erase(unique(all(X)),(X).end())

using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
template<class T> using vv=vector<vector<T>>;
template<class T> ostream& operator<<(ostream &os, const vector<T> &t) {
os<<"{"; rep(i,t.size()) {os<<t[i]<<",";} os<<"}"<<endl; return os;}
template<class S, class T> ostream& operator<<(ostream &os, const pair<S,T> &t) { return os<<"("<<t.first<<","<<t.second<<")";}
const ll MOD=1e9+7;

int main(){
  ios_base::sync_with_stdio(false);
  cout<<fixed<<setprecision(0);
  int T;
  cin>>T;
  while(T--){
    string str;
    cin>>str;
    int n=str.size();
    vector<int> lsum(n+1),csum(n+1),rsum(n+1);
    rep(i,n){
      csum[i+1]= str[i]!=str[n-1-i];
      if(i)
	lsum[i+1]= str[i]!=str[n-i];
      if(n-2-i>=0)
	rsum[i+1]= str[i]!=str[n-2-i];
      lsum[i+1]+=lsum[i]; csum[i+1]+=csum[i]; rsum[i+1]+=rsum[i];
    }
    //cout<<lsum<<csum<<rsum;

    int re=0;
    rep(i,n+1){
      int l=i,r=n-i,ng=0;
      if(l<r){
	if(csum[l]) ng=1;
	if(r-l>=2 && rsum[r-1]-rsum[l+1]) ng=1;
	//cout<<i<<":"<<ng<<endl;
	if(r<n && csum[n]-csum[r+1]) ng=1;
      }else{
	if(csum[r]) ng=1;
	if(l>r && lsum[l]-lsum[r+1]) ng=1;
	//cout<<i<<":"<<ng<<endl;
	if(l<n && csum[n]-csum[l+1]) ng=1;
      }
      //cout<<i<<":"<<ng<<endl;
      if(!ng){
	//cout<<pii(l,r)<<endl;
	//if(l!=r && str[min(l,r)] != str[max(l,r)-1])continue;
	++re;
      }
    }
    cout<<re<<endl;
  }
  return 0;
}
