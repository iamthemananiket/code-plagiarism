#include <stdio.h>
#include <bits/stdc++.h>
using namespace std;
#define mod 1000000007
typedef long long ll;
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pdd pair<double,double>
#define FILL(a,x) memset(a,x,sizeof(a))
#define	foreach( gg,ii ) for( typeof(gg.begin()) ii=gg.begin();ii!=gg.end();ii++)
#define	mp make_pair
#define	pb push_back
#define sz(a) int((a).size())
#define	debug(ccc)	cout << #ccc << " = " << ccc << endl;
typedef long double ld;

inline ll input(void)
{
	char t;
	ll x=0;
	int neg=0;
	t=getchar();
	while((t<48 || t>57) && t!='-')
		t=getchar();
	if(t=='-')
		{neg=1; t=getchar();}
    while(t>=48 && t<=57)
    {
        x=(x<<3)+(x<<1)+t-48;
        t=getchar();
    }
	if(neg)
		x=-x;
	return x;
}

inline void output(ll x)
{
	char a[20];
	int i=0,j;
	a[0]='0';
	if (x<0) {putchar('-'); x=-x;}
	if (x==0) putchar('0');
	while(x)
	{
		a[i++]=x%10+48;
		x/=10;
	}
	for(j=i-1;j>=0;j--)
	{
		putchar(a[j]);
	}
	putchar('\n');
}

ll t,i,n,ending[100001],c1[100001],c2[100001],centres[2],dis,ans;

int main()
{
char a[100001];
t=input();
while(t--)
{
	ans=0;
	FILL(ending,0);
	FILL(c1,0);
	FILL(c2,0);
	scanf("%s",a);
	n=strlen(a);
	if (n==1) {output(2); continue;}
	if (n==2) {if (a[0]==a[1]) output(3); else output(2); continue;}
	if (a[0]==a[n-1]) ending[0]=1;
	for(i=1;i<n/2;i++) 
	{
		if (a[i]==a[n-1-i]&&ending[i-1]==1) ending[i]=1;
		else ending[i]=0;
	}
	centres[0]=(n-3)/2;
	centres[1]=(n-1)/2;
	if (a[centres[0]]==a[centres[0]+2-n%2]) c1[centres[0]]=1;
	else c1[centres[0]]=0;
	if (a[centres[1]]==a[centres[1]+2-n%2]) c2[centres[1]+2-n%2]=1;
	else c2[centres[1]+2-n%2]=0;
	dis=4-n%2;
	//printf("%lld %lld\n",centres[0],centres[1]);
	for(i=centres[0]-1;i>=0&&i+dis<n;i--)
	{
		if (a[i]==a[i+dis]&&c1[i+1]==1) c1[i]=1;
		else c1[i]=0;
		//printf("%lld %lld\n",i,c1[i]);
		dis+=2;
	}
	dis=4-n%2;
	for(i=centres[1]+3-n%2;i<n&&i-dis>=0;i++)
	{
		if (a[i]==a[i-dis]&&c2[i-1]==1) c2[i]=1;
		else c2[i]=0;
		//printf("%lld %lld\n",i,c2[i]);
		dis+=2;
	}
	if (c1[0]==1) 
	{
		ans++;
		//printf("-1 and 0\n");
	}
	for(i=1;i<=centres[0];i++)
		if (ending[i-1]&&c1[i])
		{
			ans++;
			//printf("%lld less %lld\n",i-1,i);
		}
	if (ending[centres[0]])
	{
		ans++;
		//printf("%lld and %lld\n",i-1,i);
	}
	if (c2[n-1]==1)
	{
		ans++;
		//printf("%lld end %lld\n",n-1,n);
	}
	for(i=1;n-1-i>=centres[1];i++) 
		if (ending[i-1]&&(c2[n-1-i]||n-1-i<centres[1]+2-n%2))
		{
			ans++;
			//printf("%lld more %lld\n",n-1-i,n-i);
		}
	output(ans);
}
return 0;
}
