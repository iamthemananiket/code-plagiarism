#include <stdio.h>
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pdd pair<double,double>
#define FILL(a,x) memset(a,x,sizeof(a))
#define	foreach( gg,ii ) for( typeof(gg.begin()) ii=gg.begin();ii!=gg.end();ii++)
#define	mp make_pair
#define	pb push_back
#define	X first
#define	Y second
#define sz(a) int((a).size())
#define mod 1000000007
#define REP(i,a) for(int i=0;i<a;++i)
#define REPP(i,a,b) for(int i=a;i<b;++i)
const ll INF = 1e18+1;

inline ll input(void)
{
	char t;
	ll x=0;
	int neg=0;
	t=getchar();
	while((t<48 || t>57) && t!='-')
		t=getchar();
	if(t=='-')
		{neg=1; t=getchar();}
    while(t>=48 && t<=57)
    {
        x=(x<<3)+(x<<1)+t-48;
        t=getchar();
    }
	if(neg)
		x=-x;
	return x;
}

inline void output(ll x)
{
	char a[20];
	int i=0,j;
	a[0]='0';
	if (x<0) {putchar('-'); x=-x;}
	if (x==0) putchar('0');
	while(x)
	{
		a[i++]=x%10+48;
		x/=10;
	}
	for(j=i-1;j>=0;j--)
	{
		putchar(a[j]);
	}
	putchar('\n');
}

int main()
{
	ll n,m,k,ans;
	double N,M,K,np,n2p,mp,m2p,a,b,c,curr;
	n=input();
	m=input();
	k=input();
	N=n;
	M=m;
	K=k;
	if (k==1)
	{
		curr=N*(N+1)/2*M*(M+1)/2+0.001;
		printf("%.0lf\n",round(curr));
		return 0;
	}
	np=1.0;
	REP(i,n) np*=1/K;
	n2p=np;
	REP(i,n) n2p*=1/K;
	mp=1.0;
	REP(i,m) mp*=1/K;
	m2p=mp;
	REP(i,m) m2p*=1/K;
	a=((N/(K*K)-N+1-n2p)*(M/(K*K)-M+1-m2p)*K*K*K*K*K)/((K*K-1)*(K*K-1)*(K*K-1)*(K*K-1));
	b=(N*K-N-1+np)*K/((K-1)*(K-1));
	c=(M*K-M-1+mp)*K/((K-1)*(K-1));
	curr=a+M*b+c*N-N*M;
	//printf("%.0lf\n",a);
	//printf("%.0lf\n",b);
	//printf("%.0lf\n",c);
	printf("%.0lf\n",round(curr));
	//printf("%lf\n",curr);
	//ans=(ll)(curr+0.5);
	//output(ans);
return 0;
}
