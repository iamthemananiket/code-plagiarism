#include<bits/stdc++.h>
using namespace std;
#define pc putchar_unlocked
#define gc getchar_unlocked
typedef long long ll;
typedef unsigned long long llu;
#define mp make_pair
#define pb push_back
#define sc(x) scanf("%d",&x)
#define sc2(x,y) scanf("%d%d",&x,&y)
#define sc3(x,y,z) scanf("%d%d%d",&x,&y,&z)
#define scl(x) scanf("%lld",&x)
#define scl2(x,y) scanf("%lld%lld",&x,&y)
#define scl3(x,y,z) scanf("%lld%lld%lld",&x,&y,&z)
#define scstr(x) scanf("%s",x)
#define pd(x) printf("%d",x)
#define pstr(x) printf("%s",x)
#define newl() printf("\n")
#define fl(i,n) for (i=0;i<n;i++)
#define fle(i,n) for (i=1;i<=n;i++)
#define fla(i,a,n) for (i=a;i<n;i++)
#define mem(a,i) memset(a,i,sizeof(a))
#define fi first
#define se second
typedef pair<int,int> pii;
typedef pair<int,pair<int,int> > piii ;
typedef pair<ll,ll> pll;
typedef pair<ll,int> pli;
#define gcd __gcd
#define wl(n) while (n--)
#define debug(x) cout<<"debug->"<<#x<<"::"<<x<<endl
#define debug2(x,y) cout<<#x<<" :: "<<x<<"\t"<<#y<<" :: "<<y<<"\n"
#define debug3(x,y,z) cout<<#x<<" :: "<<x<<"\t"<<#y<<" :: "<<y<<"\t"<<#z<<" :: "<<z<<"\n"
#define tr(container, it)  for(typeof(container.begin()) it = container.begin(); it != container.end(); it++) 
#define all(v) v.begin(),v.end()
const double eps=0.000000000000001 ;
#define MOD 1000000007
typedef long double LF;
typedef double lF;
//-------------
int ans[100010];
int B[100010];
void rev(int st,int en,int x)
{
	int i,j;
	
	for (i=st;i<=en;i++)
	{
	/**/
		B[((i-st-x)%(en-st+1)+(en-st+1))%(en-st+1)+st]=ans[i];
	}
	for (i=st;i<=en;i++)
		ans[i]=B[i];
}
int main()
{
	int t;
	sc(t);
	wl(t)
	{
		int n,k;
		sc2(n,k);
		int i,j,p=1;
		if (n<2*k)
		{
			printf("-1\n");
			continue;
		}
		if (k==0)
		{
			for (i=1;i<=n;i++)
				printf("%d ",i);
			printf("\n");
			continue;
		}
		for (i=1;i<=(n/(2*k));i++)
		{
			for (j=1;j<=k;j++)
				ans[p++]=(2*k*(i-1)+k+j);
			for (j=1;j<=k;j++)
				ans[p++]=(2*k*(i-1)+j);
		}
		if (n%(2*k)!=0)
		{
			for (i=n%(2*k);i>=1;i--)
				ans[p++]=n-i+1;
			if (n%(2*k)<k)
				rev(n-(n%(2*k)+k)+1,n,k);
			else
			{
				rev(n-2*k+1,n,k);
			}
			
		}
		for (i=1;i<=n;i++)
			printf("%d ",ans[i]);
		printf("\n");

	}		

	return 0;

}