#include<bits/stdc++.h>
using namespace std;

// Numeric Constants
#define N 1000000007
#define maxs 200005
#define mins 1005
#define eps 0.000000000001
#define imax 2000000200
#define llmax 1000000002000000000ll
#define pi 3.141592653589793

// Others
#define ll long long
#define pb push_back
#define gc getchar_unlocked
#define iosbase ios_base::sync_with_stdio(false)
#define pii pair<int,int>
#define pll pair<ll,ll>
#define ppi pair<pair<int,int>,int>
#define ppl pair<pll,ll>
#define vi vector<int>
#define sc scanf
#define pr printf
#define lld I64d
#define F first
#define S second
#define siter set<int>::iterator
#define p_pq priority_queue
#define ub upper_bound
#define lb lower_bound

ll mat[1005][1005],dp1[1005][1005][2],dp[1005][1005][2],dp3[1005][1005];
ll n,m,P;
ll fun(ll i,ll j){
	if(i>n || j>m){
		return -llmax;
	}
	if(dp3[i][j]!=-llmax){
		return dp3[i][j];
	}
	if(i==n && j==m){
		dp[i][j][0]=mat[i][j];
		dp[i][j][1]=mat[i][j];
		dp3[i][j]=mat[i][j];
		return mat[i][j];
	}
	dp[i][j][0]=fun(i,j+1)+mat[i][j];
	dp[i][j][1]=fun(i+1,j)+mat[i][j];
	dp3[i][j]=max(dp[i][j][0],dp[i][j][1]);
	return max(dp[i][j][0],dp[i][j][1]);
}

int main()
{
	ll i,j,k,ans;
	sc("%lld %lld %lld",&n,&m,&P);
	for(i=1;i<=n;i++){
		for(j=1;j<=m;j++){
			sc("%lld",&mat[i][j]);
		}
	}
	for(i=0;i<=(n+1);i++){
		for(j=0;j<=(m+1);j++){
			dp3[i][j]=-llmax;
		}
	}
	fun(1,1);
	for(i=0;i<=n;i++){
		for(j=0;j<=m;j++){
			for(k=0;k<2;k++){
				dp1[i][j][k]=-llmax;
			//	dp
			}
		}
	}
	dp1[0][1][0]=0;
	dp1[1][0][0]=0;
	for(i=1;i<=n;i++){
		for(j=1;j<=m;j++){
			dp1[i][j][0]=max(dp1[i][j-1][0],dp1[i][j-1][1])+mat[i][j];
			dp1[i][j][1]=max(dp1[i-1][j][0],dp1[i-1][j][1])+mat[i][j];
		//	cout<<dp3[i][j]<<" ";
		}
	}
	ans=max(dp1[n][m][0],dp1[n][m][1]);
	for(i=1;i<=n;i++){
		for(j=1;j<=m;j++){
			ll temp,temp2;
			if(i<n){
				temp=dp1[i+1][j][1]-P+dp3[i][j+1];
				temp=max(temp,dp1[i+1][j][0]-P+mat[i][j]+max(dp3[i][j+1],dp3[i+1][j]-mat[i+1][j]));
				ans=max(ans,temp);
			}
			if(j<m){
				temp2=dp1[i][j+1][0]-P+dp3[i+1][j];
				temp2=max(temp2,dp1[i][j+1][1]-P+mat[i][j]+max(dp3[i+1][j],dp3[i][j+1]-mat[i][j+1]));
				ans=max(ans,temp2);
			}
		}
	}
	pr("%lld\n",ans);
	return 0;
}