#include <bits/stdc++.h>
 using namespace std;
#define pb push_back
#define m_p make_pair
#define F first
#define S second
#define For(i,a,b) for(int i=a;i<b;i++)
#define Fore(i,a,b) for(int i=a;i<=b;i++)
#define rFor(i,a,b) for(int i=a;i>b;i--)
#define rFore(i,a,b) for(int i=a;i>=b;i--)
#define tr(it,a) for(__typeof((a).begin()) it=(a).begin();it!=(a).end();it++)
#define all(a) a.begin(),a.end()
#define mem(a,b) memset(a,b,sizeof(a))
typedef long long int lli;
typedef pair<int,int> pii;
typedef pair<int,pii> pi3;
typedef pair<pii,pii> pi4;
typedef vector<int> vi;
typedef vector<pii> vpii;
void sc(int& a){scanf("%d",&a);}
void sc(lli& a){scanf("%lld",&a);}
void sc(int& a,int& b){sc(a);sc(b);}
void sc(lli& a,lli& b){sc(a);sc(b);}
void sc(int& a,int& b,int& c){sc(a,b);sc(c);}
void sc(lli& a,lli& b,lli& c){sc(a,b);sc(c);}
void prl(int a){printf("%d\n",a);}
void prl(lli a){printf("%lld\n",a);}
void prl(){printf("\n");}
void prs(int a){printf("%d ",a);}
void prs(lli a){printf("%lld ",a);}
void prl(lli a, lli b){cout<<a<<" "<<b<<" "<<endl;}
void prl(lli a, lli b, lli c){cout<<a<<" "<<b<<" "<<c<<" "<<endl;}
void prl(lli a, lli b, lli c, lli d){cout<<a<<" "<<b<<" "<<c<<" "<<d<<endl;}
void prl(lli a, lli b, lli c, lli d, lli e){cout<<a<<" "<<b<<" "<<c<<" "<<d<<" "<<e<<endl;}
void prl(lli a, lli b, lli c, lli d, lli e, lli f){cout<<a<<" "<<b<<" "<<c<<" "<<d<<" "<<e<<" "<<f<<endl;}
int mod =1000000007;
lli modpow(lli a, lli b, lli mod){lli res=1;while(b>0){if(b&1)res=(res*a)%mod;a=(a*a)%mod;b=b/2;}return res%mod;}
lli pow(lli a, lli b){lli res=1;while(b>0){if(b&1)res=(res*a);a=(a*a);b=b/2;}return res;}
#define inf INT_MAX
#define linf LLONG_MAX
lli a[1000][1000],ans[1000][1000],bns[1000][1000];
int  main() {
  lli n,m,p,maxm,k;
  sc(n,m);
  sc(p);
  For(i,0,n)
  For(j,0,m){
  sc(a[i][j]);
}
  for(int i=0;i<n;i++){
   for(int j=0;j<m;j++){
    ans[i][j]=a[i][j];
    if(i-1>=0&&j-1>=0){
      ans[i][j]=ans[i][j]+max(ans[i-1][j],ans[i][j-1]);
    }
    else if(i-1>=0)
      ans[i][j]=ans[i][j]+ans[i-1][j];
     else if(j-1>=0)
       ans[i][j]=ans[i][j]+ans[i][j-1];
    //. prs(ans[i][j]);
   }
   //prl();
}
   maxm=ans[n-1][m-1];
   for(int i=n-1;i>=0;i--){
   for(int j=m-1;j>=0;j--){
    bns[i][j]=a[i][j];
    if(i+1<n&&j+1<m){
      bns[i][j]=bns[i][j]+max(bns[i+1][j],bns[i][j+1]);
    }
    else if(i+1<n)
      bns[i][j]=bns[i][j]+bns[i+1][j];
     else if(j+1<m)
       bns[i][j]=bns[i][j]+bns[i][j+1];
     
   }

 }


   For(i,0,n)
   For(j,0,m){
     if(i-1>=0){
      if(j+1<m){
      k=ans[i-1][j]+a[i][j]-p+bns[i-1][j+1];
      if(k>maxm)
        maxm=k;
       }
      if(j-1>=0){
        if(j+1<m){
        k=ans[i][j-1]+a[i][j]+a[i-1][j]-p+bns[i-1][j+1];
         if(k>maxm)
        maxm=k;
      }
          k=ans[i][j-1]+a[i-1][j]-p+bns[i][j];
          if(k>maxm)
         maxm=k;

      }
     }
      if(j-1>=0){
      if(i+1<n){
      k=ans[i][j-1]+a[i][j]-p+bns[i+1][j-1];
      if(k>maxm)
        maxm=k;
       }
      if(i-1>=0){
        if(i+1<n){
        k=ans[i-1][j]+a[i][j]+a[i][j-1]-p+bns[i+1][j-1];
         if(k>maxm)
        maxm=k;
      }
          k=ans[i-1][j]+a[i][j-1]-p+bns[i][j];
          if(k>maxm)
         maxm=k;

      }

     }
     // prl(maxm);
   }
   prl(maxm);
  return 0;
}