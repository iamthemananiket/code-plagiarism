#include <string>
#include <vector>
#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<stack>
#include<queue>
#include<cmath>
#include<algorithm>
#include<functional>
#include<list>
#include<deque>
#include<bitset>
#include<set>
#include<map>
#include<unordered_map>
#include<cstring>
#include<sstream>
#include<complex>
#include<iomanip>
#include<numeric>
#define X first
#define Y second
#define pb push_back
#define rep(X,Y) for (int (X) = 0;(X) < (Y);++(X))
#define rrep(X,Y) for (int (X) = (Y)-1;(X) >=0;--(X))
#define repe(X,Y) for ((X) = 0;(X) < (Y);++(X))
#define peat(X,Y) for (;(X) < (Y);++(X))
#define all(X) (X).begin(),(X).end()
#define rall(X) (X).rbegin(),(X).rend()
#define eb emplace_back
#define UNIQUE(X) (X).erase(unique(all(X)),(X).end())

using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
template<class T> using vv=vector<vector<T>>;
template<class T> ostream& operator<<(ostream &os, const vector<T> &t) {
os<<"{"; rep(i,t.size()) {os<<t[i]<<",";} os<<"}"<<endl; return os;}
template<class S, class T> ostream& operator<<(ostream &os, const pair<S,T> &t) { return os<<"("<<t.first<<","<<t.second<<")";}
const ll MOD=1e9+7;

int memo[512][21234];
int n,m;
int dfs(vector<int> g[],int v,int p,int t=m){
  if(memo[v][t]>=0) return memo[v][t];
  if(t==1) return 1;
  ll re=0,pre; int prev=-1;
  rep(j,t+1)if(j){
    if(t/j==prev){
      re+=pre;
      continue;
    }
    ll prod=1;
    for(int w:g[v])
      if(w!=p)
	(prod*=dfs(g,w,v,t/j))%=MOD;
    re+=prod;
    pre=prod;
    prev=t/j;
  }
  return memo[v][t]=re%MOD;
}

int main(){
  ios_base::sync_with_stdio(false);
  cout<<fixed<<setprecision(0);
  int T;
  scanf("%d",&T);
  while(T--){
    fill(memo[0],memo[0]+512*21234,-1);
    scanf("%d%d",&n,&m);
    vector<int> g[n];
    int x,y;
    rep(i,n-1){
      scanf("%d%d",&x,&y); --x; --y;
      g[x].pb(y);
      g[y].pb(x);
    }
    printf("%d\n",dfs(g,0,-1));
    //rep(i,n){rep(j,m+1)cout<<memo[i][j]<<",";cout<<endl;}
  }
  return 0;
}
