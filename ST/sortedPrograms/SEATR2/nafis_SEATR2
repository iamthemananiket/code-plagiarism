/*********************************************************************\
   |--\        ---       /\        |-----------| -----   /-------|    |
   |   \        |       /  \       |               |    /             |
   |    \       |      /    \      |               |   |              |
   |     \      |     /      \     |               |   |----|         |
   |      \     |    / ------ \    |-------|       |        |-----|   |
   |       \    |   /          \   |               |              |   |
   |        \   |  /            \  |               |              /   |
  ---        -------            ------           ----- |---------/    |
                                                                      |
    codeforces = nfssdq  ||  topcoder = nafis007                      |
    mail = nafis_sadique@yahoo.com || nfssdq@gmail.com                |
    IIT,Jahangirnagar University(41)                                  |
                                                                      |
**********************************************************************/

#include <bits/stdc++.h>

using namespace std;

#define xx         first
#define yy         second
#define pb         push_back
#define mp         make_pair
#define LL         long long
#define inf        INT_MAX/3
#define mod        1000000007ll
#define PI         acos(-1.0)
#define linf       (1ll<<60)-1
#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     ((A).begin(), (A).end())
#define set0(ar)   memset(ar,0,sizeof ar)
#define vsort(v)   sort(v.begin(),v.end())
#define setinf(ar) memset(ar,126,sizeof ar)

//cout << fixed << setprecision(20) << p << endl;

template <class T> inline T bigmod(T p,T e,T M){
    LL ret = 1;
    for(; e > 0; e >>= 1){
        if(e & 1) ret = (ret * p) % M;
        p = (p * p) % M;
    } return (T)ret;
}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}

vector < int > vc[505];

LL dp[501][20001];
LL sum[501][20001];
int m;
void dfs(int c, int p){
    REP(i, vc[c].size()){
        if(vc[c][i] != p) dfs(vc[c][i], c);
    }

    for(int i = m; i >= 1; i--){
        dp[c][i] = 1;
        REP(j, vc[c].size()){
            if(vc[c][j] != p){
                dp[c][i] = (dp[c][i] * sum[ vc[c][j] ][i]) % mod;
            }
        }
        sum[c][i] = 0;
        for(int j = i; j <= m; j += i) sum[c][i] += dp[c][j];
        sum[c][i] %= mod;
    }

}
int main() {
    ios_base::sync_with_stdio(0); cin.tie(0);
    int T = 10; cin >> T;
    while(T--){
        int n = 500; m = 20000; cin >> n >> m;
        FOR(i, 1, n+1) vc[i].clear();
        REP(i, n-1){
            int x, y; cin >> x >> y;
            vc[x].pb(y);
            vc[y].pb(x);
        }
//        FOR(i, 2, n+1){
//            int c = rand() % (i-1);
//            c++;
//            vc[c].pb(i); vc[i].pb(c);
//        }

        dfs(1, 0);


        cout << sum[1][1] << "\n";
    }
}
