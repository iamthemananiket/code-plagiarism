#include <iostream>
#include <iosfwd>
#include <iomanip>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <ctime>
#include <cmath>
#include <cassert>
#include <cctype>
#include <climits>
#include <vector>
#include <bitset>
#include <set>
#include <queue>
#include <stack>
#include <map>
#include <deque>
#include <string>
#include <list>
#include <iterator>
#include <sstream>
#include <complex>
#include <fstream>
#include <functional>
#include <numeric>
#include <utility>
#include <algorithm>
#include <assert.h>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef double ld;
typedef vector < long long > vll;
typedef pair < long long, long long > pll;
typedef pair < int, int > pii;
typedef vector < int > vii;

#define csl ios_base::sync_with_stdio(false); cin.tie(NULL)
#define mp make_pair
#define fst first
#define snd second
ll t, n, u, v, m, q, r, ql, qr, k, l, s, x, y, w, h, c, z, d, b;
const int N = 1e5 + 500;
const long long mod = 1e9 + 7;
const long long INF = 1LL << 62LL;
const bool JUDGE = false;
vii adj[N];
ll dp[502][20005];
void dfs(int v, int p) {
    bool x = false;
    for (int i = 0; i < adj[v].size(); ++i) {
        int u = adj[v][i];
        if (u == p) continue;
        x = true;
        dfs(u, v);
    }
    if (x) {
        ll k = 1;
        for (int i = 1; i <= m; ++i) {
            k = 1;
            for (int j = 0; j < adj[v].size(); ++j) {
                int u = adj[v][j];
                if (u == p) continue;
                k *= dp[u][i];
                k %= mod;
            }
            dp[v][i] = k;
        }
        for (int j = 1; j <= m; ++j) {
            for (int i = 2 * j; i <= m; i += j) {
                dp[v][j] += dp[v][i];
                if (dp[v][j] >= mod) dp[v][j] -= mod;
            }
        }
    }
    else {
        for (int i = 1; i <= m; ++i) dp[v][i] = 1;
        for (int j = 1; j <= m; ++j) {
            for (int i = 2 * j; i <= m; i += j) {
                dp[v][j] += dp[v][i];
                if (dp[v][j] >= mod) dp[v][j] -= mod;
            }
        }
        return;
    }
}
int main() {
    csl;
    if (JUDGE) {
        freopen("cricket.in", "r", stdin);
        freopen("cricket.out", "w", stdout);
    }
    cin >> t;
    while (t--) {
        cin >> n >> m;
        for (int i = 0; i <= n; ++i) adj[i].clear();
        for (int i = 0; i < n - 1; ++i) {
            cin >> u >> v;
            adj[u].push_back(v);
            adj[v].push_back(u);
        }
        for (int i = 0; i <= n; ++i) for (int j = 0; j <= m; ++j) dp[i][j] = 0;
        dfs(1, 0);
        cout << dp[1][1] << '\n';
    }
    return 0;
}



















