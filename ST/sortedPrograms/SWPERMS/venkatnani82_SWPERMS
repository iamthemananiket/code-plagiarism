#include <bits/stdc++.h>
using namespace std;
vector<int> g[100010];
bool visited[100010];
long long fact[100010];
long long mod = 1e9 + 7;
int tot;
void dfs(int root) {
	visited[root] = true;
	tot++;
	for(int i = 0; i < g[root].size(); i++) {
		int child = g[root][i];
		if(visited[child]) continue;
		dfs(child);
	}
}
int main() {
	fact[0] = 1;
	for(int i = 1; i < 100010; i++) fact[i] = fact[i - 1] * i, fact[i] %= mod;
	int n, m;
	cin >> n >> m;
	int x, y;
	for(int i = 0; i < m; i++) {
		scanf("%d %d", &x, &y);
		g[x].push_back(y);
		g[y].push_back(x);
	}
	long long ans = 1;
	for(int i = 1; i <= n; i++) {
		if(visited[i]) continue;
		tot = 0;
		dfs(i);
		ans *= fact[tot];
		ans %= mod;
	}
	cout << ans << endl;
}