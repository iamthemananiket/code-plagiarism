/***************************************
    codeforces = topcoder = sahedsohel
    IIT,Jahangirnagar University(42)
****************************************/
#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <sstream>
#include <iomanip>
#include <string>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <algorithm>
#include <iterator>
#include <utility>
using namespace std;

#define ll long long int
#define ull unsigned long long int
#define inf (INT_MAX/10)
#define linf (LLONG_MAX/10LL)
#define sc(a) scanf("%d",&a)
#define sc2(a,b) scanf("%d%d",&a,&b)
#define sc3(a,b,c) scanf("%d%d%d",&a,&b,&c)
#define sc4(a,b,c,d) scanf("%d%d%d%d",&a,&b,&c,&d)
#define fl(c,i,n) for(i=c;i<n;i++)
#define f(i,n) for(i=0;i<n;i++)
#define mem(a) memset(a,0,sizeof(a))
#define memn(a) memset(a,-1,sizeof(a))
#define pb push_back
#define pp pop_back()
#define aov(a) a.begin(),a.end()
#define mpr make_pair
#define PI (2.0*acos(0.0)) //#define PI acos(-1.0)
#define xx first
#define yy second
#define mxv(a) *max_element(aov(a))
#define mnv(a) *min_element(aov(a))
#define LB(a,x) (lower_bound(aov(a),x)-a.begin())
#define UB(a,x) (upper_bound(aov(a),x)-a.begin())
#define to_c_string(a) a.c_str()
#define strtoint(c) atoi(&c[0])
#define pii pair< int , int >
#define pll pair< ll , ll >
#define pcs(a) printf("Case %d: ", a)
#define nl puts("")
#define dbg(x) cout<<#x<<" : "<<x<<endl

template <class T> inline T bigmod(T p,T e,T M){ll ret = 1;for(; e > 0; e >>= 1){if(e & 1) ret = (ret * p) % M;p = (p * p) % M;}return (T)ret;}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}   // M is prime}
template <class T> inline T bpow(T p,T e){ll ret = 1;for(; e > 0; e >>= 1){if(e & 1) ret = (ret * p);p = (p * p);}return (T)ret;}

int toInt(string s){int sm;stringstream ss(s);ss>>sm;return sm;}
int toLlint(string s){long long int sm;stringstream ss(s);ss>>sm;return sm;}


///int mnth[]={-1,31,28,31,30,31,30,31,31,30,31,30,31};  //Not Leap Year
///int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
///int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
///int dx[]={-1,-1,+0,+1,+1,+0};int dy[]={-1,+1,+2,+1,-1,-2}; //Hexagonal Direction
///const double eps=1e-6;
///int dx[]={0,1,0,-1};int dy[]={1,0,-1,0}; //4 Direction

/*****************************************************************/
/// ////////////////////   GET SET GO    ////////////////////// ///
/*****************************************************************/

#define M 100005
#define MD 1000000007LL
#define MX 2000012LL

int n,x,y;
int l[M],r[M];

int trd[2][MX],tru[2][MX],blx[2][MX],bly[2][MX],cs;


void add(int a[],int bl[],int i)
{
    for(;i<MX;i+=(i&-i))
    {
        if(bl[i]!=cs)
        {
            bl[i]=cs;
            a[i]=0;
        }
        a[i]++;
    }
}

int qry(int a[],int bl[],int i)
{
    int q=0;
    for(;i>0;i-=(i&-i))
    {
        if(bl[i]==cs)
            q+=a[i];
    }
    return q;
}

int main()
{
    int t,i,j,k;
    int a,b,mn;
    bool fl;
    ll rs;
    cs=-1;
    sc(t);
    while(t--)
    {
        cs++;
        sc2(n,k);
        a=b=0;
        while(k--)
        {
            sc2(x,y);
            mn=min(x-1,y-1);
            i=x-mn;
            j=y-mn;
            if(i==n||j==n){}
            else if(i==1)
            {
                l[a++]=-j;
            }
            else
            {
                l[a++]=i;
            }

            mn=min(n-x,y-1);
            x+=mn;
            y-=mn;
            if(x==1&&y==1)continue;

            if(y==1)
            {
                r[b++]=-x;
            }
            else
            {
                r[b++]=y;
            }
        }

        sort(l,l+a);
        sort(r,r+b);
        rs=(ll)n*n;

        int lst=-inf;
        for(i=0;i<a;i++)
        {
            if(l[i]==lst)continue;
            lst=l[i];

            if(l[i]<0)
            {
                x=1;
                y=-l[i];
            }
            else
            {
                x=l[i];
                y=1;
            }

            mn=min(n-y,n-x);
            rs-=mn+1;

            fl=max(x-1,y-1)%2;
            add(trd[fl],blx[fl],l[i]+n+5);


            x+=mn;
            y+=mn;
            if(x==1&&y==n)continue;
            if(x==n&&y==1)continue;

            fl=max(n-x,n-y)%2;
            if(y==n)
                add(tru[fl],bly[fl],x);
            else
                add(tru[fl],bly[fl],n+n-y);
        }


        lst=-inf;
        for(i=0;i<b;i++)
        {
            if(lst==r[i])continue;
            lst=r[i];
//            cout<<rs<<endl;

            if(r[i]<0)
            {
                x=-r[i];
                y=1;
            }
            else
            {
                x=n;
                y=r[i];
            }

            mn=min(n-y,x-1);
            rs-=mn+1;

            if(y==1)
            {
                fl=max(x-1,y-1)%2;
                rs+=qry(trd[fl],blx[fl],x+n+5);
                x-=mn;
                y+=mn;

                if(x==1)
                {
                    y++;
                }
                else
                {
                    x--;
                }
                if(x==1)
                    rs-=qry(trd[fl],blx[fl],-y+n+5);
                else
                    rs-=qry(trd[fl],blx[fl],x+n+5);
            }
            else
            {
                fl=max(n-x,n-y)%2;
                rs+=qry(tru[fl],bly[fl],n+n-y);
                x-=mn;
                y+=mn;

                if(y==n)
                    x--;
                else
                    y++;

                if(y==n)
                    rs-=qry(tru[fl],bly[fl],x);
                else
                    rs-=qry(tru[fl],bly[fl],n+n-y);
            }
        }
        printf("%lld\n",rs);
    }

    return 0;
}
/*
3
2
1 1
1 2
*/
