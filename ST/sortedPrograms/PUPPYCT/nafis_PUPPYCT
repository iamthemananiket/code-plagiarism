/*********************************************************************\
   |--\        ---       /\        |-----------| -----   /-------|    |
   |   \        |       /  \       |               |    /             |
   |    \       |      /    \      |               |   |              |
   |     \      |     /      \     |               |   |----|         |
   |      \     |    / ------ \    |-------|       |        |-----|   |
   |       \    |   /          \   |               |              |   |
   |        \   |  /            \  |               |              /   |
  ---        -------            ------           ----- |---------/    |
                                                                      |
    codeforces = nfssdq  ||  topcoder = nafis007                      |
    mail = nafis_sadique@yahoo.com || nfssdq@gmail.com                |
    IIT,Jahangirnagar University(41)                                  |
                                                                      |
**********************************************************************/

#include<cstdio>
#include<cstring>
#include<cassert>
#include<vector>
#include<list>
#include<queue>
#include<map>
#include<set>
#include<deque>
#include<stack>
#include<bitset>
#include<algorithm>
#include<functional>
#include<numeric>
#include<utility>
#include<sstream>
#include<iostream>
#include<iomanip>
#include<cmath>
#include<cstdlib>
#include<ctime>
#include<fstream>
#include<typeinfo>
#include<locale>
#include<iterator>
#include<valarray>
#include<complex>
#include<climits>
using namespace std;

#define xx         first
#define yy         second
#define pb         push_back
#define mp         make_pair
#define LL         long long
#define inf        INT_MAX/3
#define mod        1000000007ll
#define PI         acos(-1.0)
#define linf       (1ll<<60)-1
#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     ((A).begin(), (A).end())
#define set0(ar)   memset(ar,0,sizeof ar)
#define vsort(v)   sort(v.begin(),v.end())
#define setinf(ar) memset(ar,126,sizeof ar)

//cout << fixed << setprecision(20) << p << endl;

template <class T> inline T bigmod(T p,T e,T M){
    LL ret = 1;
    for(; e > 0; e >>= 1){
        if(e & 1) ret = (ret * p) % M;
        p = (p * p) % M;
    } return (T)ret;
}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}

int ar[2000001], sz[2000001], sz1[2000001], tar[2000001];
pair < int, int > dump[100001];
int main() {
    ios_base::sync_with_stdio(0); cin.tie(0);
    int T; cin >> T;
    while(T--){
        int n, k; cin >> n >> k;
        REP(i, k) cin >> dump[i].xx >> dump[i].yy;
        if(n == 1){
            cout << n-k << endl;
            continue;
        }

        int len = 1;
        for(int i = 0; i < n; i++){
            sz1[i] = len;
            len++;
        }
        len--;
        for(int i = n; i < n+n - 1; i++){
            len--;
            sz1[i] = len;
        }

        len = 1;
        for(int i = n-1; i >= 0; i--){
            sz[i + 1000000] = len;
            len++;
        }
        len--;
        for(int i = -1; i > -n; i--){
            len--;
            sz[i + 1000000] = len;
        }

        set0(ar); set0(tar);
        LL res = (LL)n * (LL)n;
        REP(i, k){
            dump[i].xx--; dump[i].yy--;
            ar[dump[i].xx+dump[i].yy] = 1;
            tar[dump[i].xx-dump[i].yy+1000000] = 1;
//            cout << sz[dump[i].xx-dump[i].yy+1000000] << " " << sz1[dump[i].xx+dump[i].yy] << endl;
//            res -= sz[dump[i].xx-dump[i].yy+1000000] + sz1[dump[i].xx + dump[i].yy];
        }
        REP(i, n+n-1) {
            if(ar[i]) res -= sz1[i];
        }
//        cout << res << endl;
        for(int i = -(n-1); i < n; i++) {
            if(tar[i + 1000000]) res -= sz[i + 1000000];
        }
        FOR(i, 2, n+n-1) ar[i] += ar[i-2];
//        cout << res << endl;
        int l = n-1, r = n-1;
        for(int i = -(n-1); i <= -1; i++){
            if(tar[i+1000000] == 0) {
                l--; r++;
                continue;
            }
            res += ar[r];
            if(l > 1) res -= ar[l-2];
//            cout << i << " " << l << " " << r << " " << res << endl;
            l--; r++;
        }
        for(int i = 0; i < n; i++){
            if(tar[i+1000000] == 0) {
                l++; r--;
                continue;
            }
            res += ar[r];
            if(l > 1) res -= ar[l-2];
//            cout << i << " " << res << " " << l << " " << r << endl;
            l++; r--;
        }

        cout << res << endl;
    }
}
/*
1
5 9
1 1
1 2
1 3
1 4
1 5
2 1
3 1
4 1
5 1
*/
