#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <string>
#include <utility>
#include <vector>
using namespace std;

#define fi first
#define se second
#define pb push_back
#define all(x) (x).begin(), (x).end()
#define sz(x) (int((x).size()))
#define bit(x) (1 << (x))
#define cnt1(x) (__builtin_popcount(x))

template<class T>
inline void chkmax(T& x, T y) {
	if (x < y) x = y;
}

template<class T>
inline void chkmin(T& x, T y) {
	if (y < x) x = y;
}

typedef long long LL;
typedef double DB;
typedef pair<int, int> PII;
typedef vector<int> VI;
const int MX = 100005;
const int M = 1000000007;
int n;
VI adj[MX];
char s[MX];
LL cnt[MX], ans;

void calc(int u, int p) {
	int i, v;
	
	cnt[u] = 1;
	for (i = sz(adj[u]) - 1; i >= 0; i--) {
		v = adj[u][i];
		if (v == p) continue;
		calc(v, u);
		if (s[u] == s[v]) continue;
		cnt[u] += cnt[v];
	}
	for (i = sz(adj[u]) - 1; i >= 0; i--) {
		v = adj[u][i];
		if (v == p || s[u] == s[v]) continue;
		ans += (cnt[u] - cnt[v]) * cnt[v];
	}
	ans += cnt[u] + 1;
}

int main() {
//	freopen("in.txt", "r", stdin);
//	freopen("out.txt", "w", stdout);
	
	int i, j, k;
	
	scanf("%d", &n);
	for (k = 1; k < n; k++) {
		scanf("%d%d", &i, &j);
		adj[i].pb(j);
		adj[j].pb(i);
	}
	for (i = 1; i <= n; i++) scanf("%s", s + i);
	
	calc(1, 0);
	ans /= 2;
	printf("%lld\n", ans % M);
	return 0;
}
