#include <cstdio>
#include <iostream>
#include <vector>
#include <map>
#include <set>
#include <string>
#include <algorithm>
#include <cmath>
#include <functional>
#define MAX(a,b) (((a)>(b))?(a):(b))
#define MIN(a,b) (((a)<(b))?(a):(b))

using namespace std;
string best;
long occ;
int m,n;
vector<string> V(100);

void start(string s,int x)
{
//	cout<<x<<" "<<s<<endl;
	if (x>=n)
	{
		long ans=0;
		for (int i=0;i<m;i++)
		{
			int l=V[i].size();
			// find #times V[i] occurs in s
			for (int j=0;j<=n-l;j++)
			{
				bool o=true;
				for (int k=0;k<l;k++)
				{
					if (s[j+k]!=V[i][k])
					{
						o=false;
						break;
					}
				}
				if (o) ans++;
			}
		}
		if (ans>occ)
		{
			occ=ans;
			best=s;
		}
		return;
	}
	if (s[x]!='?')
	{
		start(s,x+1);
		return;
	}
	else
	{
		s[x]='a';
		start(s,x+1);
		s[x]='b';
		start(s,x+1);
		s[x]='c';
		start(s,x+1);
		return;
	}
}
void solve()
{
	cin>>n>>m;
	best="";
	occ=-1;
	string s;
	cin>>s;
	for (int i=0;i<m;i++)
	{
		cin>>V[i];
	}
	start(s,0);
	cout<<occ<<endl;
	cout<<best<<endl;
}

int main()
{
	int t;
	cin>>t;
	for (int i=0;i<t;i++)
	{
		solve();
	}
}
