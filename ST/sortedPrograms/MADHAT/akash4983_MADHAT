#include <cstdio>
#include <cmath>
#include <iostream>
#include <set>
#include <algorithm>
#include <vector>
#include <map>
#include <cassert>
#include <string>
#include <cstring>
#include <queue>

using namespace std;

#define rep(i,a,b) for(int i = a; i < b; i++)
#define S(x) scanf("%d",&x)
#define S2(x,y) scanf("%d%d",&x,&y)
#define P(x) printf("%d\n",x)
#define all(v) v.begin(),v.end()
#define FF first
#define SS second

typedef long long int LL;
typedef pair<int, int > pii;
typedef vector<int > vi;

const int mod = 1000000007;
const int N = 100005;

vector<pii > v;
set<int > s;
set<int >::iterator it;
LL F[N], IF[N];

LL _pow(LL a, LL b) {
  if(!b) return 1;
  if(b == 1) return a;
  if(b == 2) return a * a % mod;
  if(b & 1) {
    return a * _pow(a,b-1) % mod;
  }
  return _pow(_pow(a,b/2),2);
}

void pre() {
  F[0] = 1;
  rep(i,1,N) {
    F[i] = F[i-1] * i % mod;
  }
  IF[N-1] = _pow(F[N-1], mod-2);
  for(int i = N - 2; i >= 0; i--) {
    IF[i] = IF[i+1] * (i + 1) % mod;
  }
}

LL nCr(int n, int r) {
  if(n < r) return 0;
  return F[n] * (IF[n-r] * IF[r] % mod) % mod;
}

int main() {
  pre();
  int t;
  S(t);
  while(t--) {
    int n;
    S(n);
    v.clear();
    rep(i,1,n+1) {
      int x;
      S(x);
      v.push_back(make_pair(-(i+1+x), i));
    }
    sort(all(v));
    s.clear();
    s.insert(0);
    s.insert(n+1);
    LL ans = 1;
    rep(i,0,n) {
      int idx = v[i].SS;
      int nxt = -v[i].FF;
      it = s.lower_bound(idx);
      int r = *it;
      it--;
      int l = *it;
      if(r != nxt) {
        ans = 0;
        break;
      }
      ans = ans * nCr(r-l-2, idx-l-1) % mod;
      s.insert(idx);
    }
    P((int)ans);
  }
  return 0;
}