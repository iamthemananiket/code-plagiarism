#include<bits/stdc++.h>

using namespace std;

#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define sz(x) ((int)x.size())
#define eps 1e-9

const int MOD = 1e9+7;

typedef long long ll;
typedef pair<int,int> pii;

ll POWER[65];
ll power(ll a, ll b) {ll ret=1;while(b) {if(b&1) ret*=a;a*=a;if(ret>=MOD) ret%=MOD;if(a>=MOD) a%=MOD;b>>=1;}return ret;}
ll inv(ll x) {return power(x,MOD-2);}

void precompute() {
	POWER[0]=1;
	for(int i=1;i<63;i++) POWER[i]=POWER[i-1]<<1LL;
}
const int MAXN = 1e5+5;
vector<int> v[MAXN];
int bs(int f, int t) {
	int lo=0,hi=sz(v[t])-1;
	int ret=-1;
	while(lo<=hi) {
		int mid=lo+(hi-lo+1)/2;
		if(v[t][mid]>=f) ret=v[t][mid],hi=mid-1;
		else lo=mid+1;
	}
	return ret;
}
int ar[MAXN];
ll f[MAXN];
ll C(ll a, ll b) {
	ll ret=f[a];
	ret*=inv(f[b]);
	ret%=MOD;
	ret*=inv(f[a-b]);
	ret%=MOD;
	return ret;
}
ll go(int s, int e) {
	if(s>e) return 1;
	int pos=bs(s,e+1);
	if(pos==-1) return 0;
	ll ret=go(s,pos-1)*go(pos+1,e);
	if(ret>=MOD) ret%=MOD;
	int len=e-s;
	ret*=C(len,pos-s);
	if(ret>=MOD) ret%=MOD;
	return ret;
}
int main() {
//	freopen("TASK.in","r",stdin);freopen("TASK.out","w",stdout);
	precompute();
	f[0]=1;
	for(int i=1;i<MAXN;i++) f[i]=(f[i-1]*1LL*i)%MOD;
	int t;
	cin>>t;
	while(t--) {
		int n;
		scanf("%d",&n);
		for(int i=0;i<=n+1;i++) v[i].clear();
		for(int i=1;i<=n;i++) {
			scanf("%d",&ar[i]);
			v[i+ar[i]+1].pb(i);
		}
		printf("%lld\n",go(1,n));
	}
	return 0;
}
