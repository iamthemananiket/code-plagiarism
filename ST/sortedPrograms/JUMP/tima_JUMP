#include <iostream>
#include <cstdio>
#include <algorithm>
#include <cmath>
#include <string>
#include <vector>
#include <stack>
#include <queue>
#include <set>
#include <cstring>
#include <map>
#include <cstdlib>
#include <ctime>
#define f first
#define s second
#define ll long long
#define ull unsigned long long
#define mp make_pair
#define pb push_back
#define vi vector <int>
#define pii pair<int, int>
#define pll pair<ll,ll>
using namespace std;          
const int N = int(3e5) + 23; 
const ll inf = (ll)(1e18);
int n,p[N];
ll h[N],a[N];
ll d[N];
int sz;
pll line[N];
double x1,x2;

void add(pll p){
	while(sz > 1){
	    x1 = (line[sz].s - line[sz-1].s + 0.0) / (line[sz-1].f - line[sz].f);
	    x2 = (line[sz].s - p.s + 0.0) / (p.f - line[sz].f);
	    if(x1 < x2) break;
	    sz--;
	}
	line[++sz] = p;
}
void addd(pll p){
	line[++sz] = p;
}

ll find_ans(int x){
	ll res = inf;
	for(int i=1;i<=sz;i++){
	    res = min(res,line[i].f * x + line[i].s);
	}
	return res;
}

int main () {
	scanf("%d",&n);
	for(int i=1;i<=n;i++) scanf("%d",&p[i]);
	for(int i=1;i<=n;i++) scanf("%lld",&a[i]);
	for(int i=1;i<=n;i++) scanf("%lld",&h[i]);
	if(n <= 5000){
		d[1] = a[1];
		for(int i=2;i<=n;i++){
			d[i] = inf;
			for(int j=1;j<i;j++) if(p[j] < p[i]){
				d[i] = min(d[i],d[j] + h[j] * h[j] - 2*h[i]*h[j]);
			}
			d[i] += h[i]*h[i] + a[i];
		}
		cout << d[n] << endl;
		return 0;
	}
	d[1] = a[1];
	add(mp(-2*h[1],d[1] + h[1] * h[1]));
	int k = 1;
	for(int i=2;i<=n;i++){
		while(k < sz){
			x1 = (line[k].s - line[k+1].s +0.0) / (line[k+1].f - line[k].f);
			if(x1 > h[i]) break;
			k++;
		}
		d[i] = line[k].f * h[i] + line[k].s + h[i] * h[i] + a[i];
		add(mp(-2*h[i],d[i] + h[i] * h[i]));
	}
	cout << d[n];


return 0;
}
