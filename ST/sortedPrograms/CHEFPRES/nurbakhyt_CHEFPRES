#include <bits/stdc++.h>

#define pb push_back

const int N = (int)1e4 + 123;
const int inf = (int)1e9 + 123;

using namespace std;

int n, k, q;
int root;
int u, v;
vector < int > g[N];
int f[N];
int pr[N];
int d[N][102];

void dfs(int v, int p = 0) {
	pr[v] = p;
	for (int i = 1; i <= k; i++)
		d[v][i] = inf;
	d[v][f[v]] = v;
	for (auto to : g[v]) {
		if (to == p)
			continue;
		dfs(to, v);
		for (int i = 1; i <= k; i++)
			d[v][i] = min(d[v][i], d[to][i]);
	}
}

int main() {
	scanf("%d%d%d", &n, &k, &root);
	for (int i = 0; i + 1 < n; i++) {
		scanf("%d%d", &u, &v);
		g[u].pb(v), g[v].pb(u);
	}
	for (int i = 1; i <= n; i++)
		scanf("%d", &f[i]);
	dfs(root);	
	scanf("%d", &q);
	for (int i = 1; i <= q; i++) {
		scanf("%d%d", &u, &v);
		bool ok = 0;
		while(u) {
			if (d[u][v] != inf) {
				ok = 1;
				printf("%d\n", d[u][v]);
				break;
			}
			u = pr[u];
		}
		if (!ok)
			printf("-1\n");
	}
	return 0;
}
