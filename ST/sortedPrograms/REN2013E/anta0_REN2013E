#define _CRT_SECURE_NO_WARNINGS
#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <cctype>
#include <list>
#include <cassert>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define rer(i,l,u) for(int (i)=(int)(l);(i)<=(int)(u);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#if defined(_MSC_VER) || __cplusplus > 199711L
#define aut(r,v) auto r = (v)
#else
#define aut(r,v) typeof(v) r = (v)
#endif
#define each(it,o) for(aut(it, (o).begin()); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define pb(x) push_back(x)
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
#define EPS 1e-9
using namespace std;
typedef vector<int> vi; typedef pair<int,int> pii; typedef vector<pair<int,int> > vpii;
typedef long long ll; typedef vector<long long> vl; typedef pair<long long,long long> pll; typedef vector<pair<long long,long long> > vpll;
typedef vector<string> vs; typedef long double ld;

static const int dy[4] = {0,1,0,-1}, dx[4] = {1,0,-1,0};
int x[1000], y[1000];
int main() {
	int N;
	scanf("%d", &N);
	rep(i, N)
		scanf("%d%d", &x[i], &y[i]);
	double X = 0, Y = 0, lasttotal = 0;
	rep(i, N) lasttotal += hypot(x[i]-X, y[i]-Y);
	double step = 100;
	rep(ii, 1000) {
		bool done = false;
		double mintotal = lasttotal, minX = X, minY = Y;
		rep(d, 4) {
			double XX = X + dx[d] * step, YY = Y + dy[d] * step, total = 0;
			rep(i, N)
				total += hypot(x[i]-XX, y[i]-YY);
			if(mintotal > total) {
				mintotal = total;
				minX = XX;
				minY = YY;
				done = true;
			}
		}
		lasttotal = mintotal;
		X = minX;
		Y = minY;
//		cerr << ii << ": " << mintotal << endl;
		if(!done) step /= 2;
	}
	printf("%.2f\n", lasttotal);
	return 0;
}
