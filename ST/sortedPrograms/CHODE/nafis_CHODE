/*********************************************************************\
   |--\        ---       /\        |-----------| -----   /-------|    |
   |   \        |       /  \       |               |    /             |
   |    \       |      /    \      |               |   |              |
   |     \      |     /      \     |               |   |----|         |
   |      \     |    / ------ \    |-------|       |        |-----|   |
   |       \    |   /          \   |               |              |   |
   |        \   |  /            \  |               |              /   |
  ---        -------            ------           ----- |---------/    |
                                                                      |
    codeforces = nfssdq  ||  topcoder = nafis007                      |
    mail = nafis_sadique@yahoo.com || nfssdq@gmail.com                |
    IIT,Jahangirnagar University(41)                                  |
                                                                      |
**********************************************************************/

#include <bits/stdc++.h>
using namespace std;

#define xx         first
#define yy         second
#define pb         push_back
#define mp         make_pair
#define LL         long long
#define inf        INT_MAX/3
#define mod        1000000007ll
#define PI         2.0*acos(0.0)
#define linf       (1ll<<62)-1
#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     (A).begin(), (A).end()
#define set0(ar)   memset(ar,0,sizeof ar)
#define vsort(v)   sort(v.begin(),v.end())
#define setinf(ar) memset(ar,126,sizeof ar)

//cout << fixed << setprecision(20) << p << endl;

template <class T> inline T bigmod(T p,T e,T M) {
    if(e==0)return 1;
    if(e%2==0){LL t=bigmod(p,e/2,M);return (T)((t*t)%M);}
    return (T)(((LL)bigmod(p,e-1,M)*(LL)(p))%M);
}
template <class T> inline T gcd(T a,T b) {if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M) {return bigmod(a,M-2,M);}

pair < int, char > pp[27];
string s, cypher;
map < char, char > mm;
main()
{
    ios_base::sync_with_stdio(0); cin.tie(0);
    LL a,b,c,d,e = 0,f,g,h = 0,x = 1,y,z;
    cin >> a;
    REP(l, a){
        cin >> s;
        getline(cin, cypher);
        getline(cin, cypher);
        set0(pp);
        REP(i, 26)pp[i].yy = i + 'a';
        reverse(s.begin(), s.end());
        REP(i, cypher.size()){
            if(cypher[i] >= 'A' && cypher[i] <= 'Z')pp[cypher[i] - 'A'].xx++;
            if(cypher[i] >= 'a' && cypher[i] <= 'z')pp[cypher[i] - 'a'].xx++;
        }
        sort(pp, pp + 26);
        reverse(pp, pp + 26);
        mm.clear();
        REP(i, 26){
            mm[pp[i].yy] = s[i];
            mm[pp[i].yy - 'a' + 'A'] = s[i] - 'a' + 'A';
        }
        REP(i, cypher.size()){
            if(cypher[i] >= 'A' && cypher[i] <= 'Z')cout << mm[cypher[i]];
            else if(cypher[i] >= 'a' && cypher[i] <= 'z')cout << mm[cypher[i]];
            else cout << cypher[i];
        }
        cout << endl;
    }
}

