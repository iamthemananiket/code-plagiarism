// Program and program template by vvneagleone

#include<cstdio>
#include<iostream>
#include<iomanip>
#include<algorithm>
#include<cmath>
#include<string>
#include<cstring>
#include<climits>
#include<vector>
#include<utility>
#include<queue>
#include<set>
#include<map>
using namespace std;
typedef long long LL;
#define MOD 1000000007LL

#ifdef __GNUC__
    #if ( __GNUC__ >= 4 && __GNUC_MINOR__ >= 7 && __cplusplus > 201100L )
        #include<unordered_set>
        #include<unordered_map>
    #endif
#endif // __GNUC__

#ifdef __WIN32
    #define gx getchar
    #define px putchar
    #define ps putchar(' ')
    #define pn putchar('\n')
#else
    #define gx getchar_unlocked
    #define px putchar_unlocked
    #define ps putchar_unlocked(' ')
    #define pn putchar_unlocked('\n')
#endif // __WIN32

void scan(int &n){int sign=1;n=0;char c=gx();while(c<'0'||c>'9'){if(c=='-')sign=-1;c=gx();}while(c>='0'&&c<='9')n=(n<<3)+(n<<1)+c-'0',c=gx();n=n*sign;}
void lscan(LL &n){int sign=1;n=0;char c=gx();while(c<'0'||c>'9'){if(c=='-')sign=-1;c=gx();}while(c>='0'&&c<='9')n=(n<<3)+(n<<1)+c-'0',c=gx();n=n*(LL)(sign);}
int sscan(char a[]){char c=gx();while(c==' '||c=='\n')c=gx();int i=0;while(c!='\n')a[i++]=c,c=gx();a[i]=0;return i;}
int wscan(char a[]){char c=gx();while(c==' '||c=='\n')c=gx();int i=0;while(c!='\n'&&c!=' ')a[i++]=c,c=gx();a[i]=0;return i;}
void print(int n){if(n<0){n=-n;px('-');}int i=10;char o[10];do{o[--i]=(n%10)+'0';n/=10;}while(n);do{px(o[i]);}while(++i<10);}
void lprint(LL n){if(n<0LL){n=-n;px('-');}int i=21;char o[21];do{o[--i]=(n%10LL)+'0';n/=10LL;}while(n);do{px(o[i]);}while(++i<21);}
void sprint(const char*a){const char*p=a;while(*p)px(*p++);}
LL power(LL b,LL e,LL m=MOD){LL r=1;while(e){if(e&1)r=(r*b)%m;b=(b*b)%m;e>>=1;}return r;}
LL minv(LL a,LL m=MOD){LL c,t,q,x,y;c=m;x=0;y=1;while(a>1){q=a/c;t=c;c=a%c;a=t;t=x;x=y-q*x;y=t;}if(y<0)y+=m;return y;}
LL mmul(LL a,LL b,LL m=MOD){LL x=0,y=a%m;while(b){if(b&1)x=(x+y)%m;y=(y<<1)%m;b>>=1;}return x%m;}
LL absll(LL x){if(x<0)return -x;return x;}

LL a[1002], b[1002];

LL dista( LL& i, LL& j ) {
    return abs( a[i] - a[j] ) + abs( b[i] - b[j] );
}

int main() {
    LL n, q, i, j, k, x, y, ans, d1, d2, d3, d4, i1, i2, i3, i4, p1, p2, p3, p4;
    lscan(n);
    for( i = 0; i < n; ++i ) {
        lscan(a[i]);
        lscan(b[i]);
    }
    lscan(q);
    char type;
    while( q-- ) {
        cin >> type;
        if( type == 'U' ) {
            lscan(i);
            lscan(a[i]);
            lscan(b[i]);
        }
        else {
            ans = 0;
            d1 = d2 = d3 = d4 = INT_MAX;
            lscan(x); lscan(y);
            for( i = x; i <= y; ++i ) {
                //closest to 0,0, MOD,MOD and to 0,MOD, MOD,0
                p1 = a[i] + b[i];
                if( p1 < d1 ) {
                    d1 = p1;
                    i1 = i;
                }

                p2 = (MOD-a[i]) + (MOD-b[i]);
                if( p2 < d2 ) {
                    d2 = p2;
                    i2 = i;
                }

                p3 = a[i] + (MOD-b[i]);
                if( p3 < d3 ) {
                    d3 = p3;
                    i3 = i;
                }

                p4 = (MOD-a[i]) + b[i];
                if( p4 < d4 ) {
                    d4 = p4;
                    i4 = i;
                }

            }
            ans = max( dista(i1,i2), dista(i3,i4) );
            lprint(ans); pn;
        }
    }
    return 0;
}
