#include <bits/stdc++.h>

using namespace std;

const int N = 1e5 + 6;
const int INF = 1e9 + 9;

int a[N];
int pre[N];
int suf[N];
int n;

int main() {
    ios::sync_with_stdio(false);
    int ntest;
    cin >> ntest;
    while (ntest--) {
        cin >> n;
        for (int i = 1; i <= n; ++i) cin >> a[i];
        if (n <= 2) {
            cout << *min_element(a + 1, a + 1 + n) << endl;
            continue;
        }
        pre[1] = suf[n] = 0;
        for (int i = 2; i <= n; ++i) {
            if (i == 2) {
                pre[i] = a[i] - a[i - 1];
            } else {
                if (a[i] - a[i - 1] != pre[i - 1]) {
                    pre[i] = INF;
                } else {
                    pre[i] = pre[i - 1];
                }
            }
        }
        for (int i = n - 1; i >= 1; --i) {
            if (i == n - 1) {
                suf[i] = a[i + 1] - a[i];
            } else {
                if (a[i + 1] - a[i] != suf[i + 1]) {
                    suf[i] = INF;
                } else {
                    suf[i] = suf[i + 1];
                }
            }
        }
        int ans = INF;
        for (int i = 1; i <= n; ++i) {
            if (i == 1) {
                if (suf[i + 1] != INF) {
                    ans = min(ans, a[i]);
                }
            } else if (i == n) {
                if (pre[i - 1] != INF) {
                    ans = min(ans, a[i]);
                }
            } else {
                bool L = pre[i - 1] != INF;
                bool R = suf[i + 1] != INF;
                L |= i <= 2;
                R |= i >= n - 1;

                int d = a[i + 1] - a[i - 1];
                bool ok = L && R;
                if (i > 2)
                    ok &= pre[i - 1] == d;
                if (i < n - 1)
                    ok &= suf[i + 1] == d;

                if (ok) {
                    ans = min(ans, a[i]);
                }
            }
        }
        if (ans == INF) {
            ans = -1;
        }
        cout << ans << endl;
    }
    return 0;
}