#include<bits/stdc++.h>
using namespace std;
 
#define sd(mark) scanf("%d",&mark)
#define ss(mark) scanf("%s",&mark)
#define sl(mark) scanf("%lld",&mark)
#define debug(mark) printf("check%d\n",mark)
#define clr(mark) memset(mark,0,sizeof(mark))
#define F first
#define S second
#define MP make_pair
#define PB push_back
#define ll long long
#define N 100010
#define INF 2000000000
bool isAP(vector<int> v)
{
	int i,n=(int)v.size();
	if(n == 1)
		return 1;
	int d=v[1]-v[0];
	for(i=2;i<n;++i)
		if(v[i]-v[i-1]!=d)
			return 0;
	return 1;
}
vector<int> v;
int a[N];
int main()
{
	int t,n,i;
	sd(t);
	while(t--)
	{
		int ans=INF;
		sd(n);
		v.clear();
		for(i=0;i<n;++i)
		{
			sd(a[i]);
			v.PB(a[i]);
		}
		if(n==2)
		{
			printf("%d\n",min(a[0],a[1]));
			continue;
		}
		if(n==3)
		{
			printf("%d\n",min({a[0],a[1],a[2]}));
			continue;
		}

		if(isAP(v))
			ans=min(v[0],v[n-1]);
		v.clear();
		for(i=1;i<n;++i)
			v.PB(a[i]);
		if(isAP(v))
			ans=min(ans,a[0]);
		v.clear();
		for(i=0;i<n-1;++i)
			v.PB(a[i]);
		if(isAP(v))
			ans=min(ans,a[n-1]);

		int d=v[1]-v[0];
		for(i=2;i<n;++i)
			if(a[i]-a[i-1]!=d)
				break;
		if(i<n)
		{
			int pos=i;
			for(i=pos+2;i<n;++i)
				if(a[i]-a[i-1]!=d)
					break;
			if(i>=n && a[pos+1]-a[pos-1]==d)
				ans=min(ans,a[pos]);
		}
		if(ans==INF)
			ans=-1;
		printf("%d\n",ans);
	}
}