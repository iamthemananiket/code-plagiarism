#include<stdio.h>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<string.h>
using namespace std;

typedef long long LL;
typedef vector<int> VI;

#define REP(i,n) for(int i=0, i##_len=(n); i<i##_len; ++i)
#define EACH(i,c) for(__typeof((c).begin()) i=(c).begin(),i##_end=(c).end();i!=i##_end;++i)
#define eprintf(s...)  fprintf(stderr, s)

template<class T> inline void amin(T &x, const T &y) { if (y<x) x=y; }
template<class T> inline void amax(T &x, const T &y) { if (x<y) x=y; }

int N, A[100111];
void MAIN() {
    scanf("%d", &N);
    REP (i, N) scanf("%d", A+i);

    VI ans;

    bool yes = true;
    int pos = -1;
    int pre = A[1];
    LL D = A[1] - A[0];
    for (int i=2; i<N; i++) {
	if (A[i] - pre != D) {
	    if (pos == -1) {
		pos = i;
	    } else {
		yes = false;
		break;
	    }
	} else {
	    pre = A[i];
	}
    }

    if (yes) {
	if (pos == -1) {
	    ans.push_back(A[0]);
	    ans.push_back(A[N-1]);
	} else {
	    ans.push_back(A[pos]);
	}
    }

    if (N > 2) {
	yes = true;
	pos = 1;
	pre = A[2];
	D = A[2] - A[0];
	for (int i=3; i<N; i++) {
	    if (A[i] - pre != D) {
		yes = false;
		break;
	    } else {
		pre = A[i];
	    }
	}

	if (yes) {
	    ans.push_back(A[1]);
	}
    }

    if (N > 2) {
	yes = true;
	pos = 0;
	pre = A[2];
	D = A[2] - A[1];
	for (int i=3; i<N; i++) {
	    if (A[i] - pre != D) {
		yes = false;
		break;
	    } else {
		pre = A[i];
	    }
	}

	if (yes) {
	    ans.push_back(A[0]);
	}
    }



    if (ans.size()) printf("%d\n", *min_element(ans.begin(), ans.end()));
    else puts("-1");
}

int main() {
    int T;
    scanf("%d", &T);
    REP (i, T) MAIN();


    return 0;
}

