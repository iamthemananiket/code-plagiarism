#include <stdio.h>
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pdd pair<double,double>
#define FILL(a,x) memset(a,x,sizeof(a))
#define foreach( gg,ii ) for( typeof(gg.begin()) ii=gg.begin();ii!=gg.end();ii++)
#define mp make_pair
#define pb push_back
#define X first
#define Y second
#define sz(a) int((a).size())
#define N 100010
#define MAX 30
#define mod 1000000007
#define REP(i,a) for(int i=0;i<a;++i)
#define REPP(i,a,b) for(int i=a;i<b;++i)
#define all(a) a.begin(),a.end()
const ll INF = 1e18+1;

ll a[N];

int main()
{
	ll t,n,ans,x,d,flag;
	scanf("%lld",&t);
	REP(kase,t)
	{
		scanf("%lld",&n);
		REP(i,n)
		{
			scanf("%lld",&a[i]);
			//printf("-1\n");
		}
		if (n<=3)
		{
			if (n==2) printf("%lld\n",min(a[0],a[1]));
			else printf("%lld\n",min(a[0],min(a[1],a[2])));
		}
		else
		{
			x=a[1];
			d=a[2]-a[1];
			flag=0;
			x+=2*d;
			ans=mod;
			REPP(i,3,n)
			{
				if (a[i]!=x) {flag=1; break;}
				x+=d;
			}
			if (!flag) ans=min(ans,a[0]);
			x=a[0];
			d=a[2]-a[0];
			flag=0;
			x+=2*d;
			REPP(i,3,n)
			{
				if (a[i]!=x) {flag=1; break;}
				x+=d;
			}
			if (!flag) ans=min(ans,a[1]);
			x=a[0];
			d=a[1]-a[0];
			x+=2*d;
			flag=0;
			REPP(i,2,n)
			{
				if (a[i]!=x)
				{
					if (!flag)
						flag=i;
					else
					{
						flag=-1;
						break;
					}
				}
				else x+=d;
			}
			if (!flag) ans=min(ans,a[n-1]);
			else if (flag!=-1) ans=min(ans,a[flag]);
			if (ans==mod) printf("-1\n");
			else printf("%lld\n",ans);
		}
	}
return 0;
}
