#include<bits/stdc++.h>

using namespace std;

#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define sz(x) ((int)x.size())
#define eps 1e-9
#define fast_cin ios_base::sync_with_stdio(false)

const int MOD = 1e9+7;

typedef long long ll;
typedef pair<int,int> pii;

ll POWER[65];
ll power(ll a, ll b) {ll ret=1;while(b) {if(b&1) ret*=a;a*=a;if(ret>=MOD) ret%=MOD;if(a>=MOD) a%=MOD;b>>=1;}return ret;}
ll inv(ll x) {return power(x,MOD-2);}

void precompute() {
	POWER[0]=1;
	for(int i=1;i<63;i++) POWER[i]=POWER[i-1]<<1LL;
}
const int MAXN = 1e5+5;
int is[MAXN],isr[MAXN],ar[MAXN];
int main() {
	// freopen("TASK.in","r",stdin);freopen("TASK.out","w",stdout);
	precompute();
	int t;
	cin>>t;
	while(t--) {
		int n;
		scanf("%d",&n);
		for(int i=1;i<=n;i++) scanf("%d",&ar[i]);
		if(n==3) {
			int ans=2e9+5;
			for(int i=1;i<=n;i++) ans=min(ans,ar[i]);
			printf("%d\n",ans);
			continue;
		}
		int dif=ar[2]-ar[1];
		int differ2,differ1=dif;
		is[2]=is[1]=true;
		for(int i=3;i<=n;i++) {
			if(ar[i]-ar[i-1]==dif) {
				is[i]=true;
				is[i] &= is[i-1];
			}
			else is[i]=false;
		}
		isr[n-1]=isr[n]=true;
		dif=ar[n-1]-ar[n];
		differ2=dif;
		for(int i=n-2;i>=1;i--) {
			if(ar[i]-ar[i+1]==dif) {
				isr[i]=true;
				isr[i] &= isr[i+1];
			}
			else isr[i]=false;
		}
		int ans=2e9+5;
		if(isr[2]) ans=min(ans,ar[1]);
		if(is[n-1]) ans=min(ans,ar[n]);
		for(int i=2;i<n;i++) {
			if(i==2) {
				if(isr[i+1] and ar[i-1]-ar[i+1]==differ2) ans=min(ans,ar[i]);
			}
			else if(i==n-1) {
				if(is[i-1] and ar[i+1]-ar[i-1]==differ1) ans=min(ans,ar[i]);
			}
			else if(is[i-1] and isr[i+1] and ar[i+1]-ar[i-1]==differ1 and ar[i-1]-ar[i+1]==differ2) ans=min(ans,ar[i]);
		}
		if(ans>=2000000000) ans=-1;
		printf("%d\n",ans);
	}
	return 0;
}
