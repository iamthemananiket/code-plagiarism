#include <cstdio>
#include <cstdlib>
#include <algorithm>
#include <vector>
#include <cstring>
#include <queue>
#include <stack>
#include <set>
#include <functional>
#include <cmath>
#define SIZE 5005
#define MX 32

using namespace std;
typedef long long int ll;
typedef pair <int,int> P;

int A[SIZE];
ll dp[SIZE][SIZE],mx[SIZE];
P to[SIZE][MX];
int gt[SIZE];

int main()
{
	int T;
	scanf("%d",&T);
	while(T--)
	{
		int n,k;
		scanf("%d %d",&n,&k);
		for(int i=0;i<n;i++)
		{
			scanf("%d",&A[i]);
			gt[i]=0;
		}
		memset(mx,-1,sizeof(mx));
		for(int i=n-1;i>=0;i--)
		{
			int now=0;
			for(int j=i;j<n;j++)
			{
				bool up=false;
				if((now|A[j])!=now)
				{
					now|=A[j];
					up=true;
				}
				if(now>mx[j])
				{
					mx[j]=now;
					if(up) to[i][gt[i]++]=P(now,j+1);
				}
			}
		}
		for(int i=0;i<=n;i++)
		{
			for(int j=0;j<=k;j++)
			{
				dp[i][j]=-1;
			}
		}
		dp[0][0]=0;
		for(int i=0;i<n;i++)
		{
			if(i>0)
			{
				for(int j=0;j<=k;j++) dp[i][j]=max(dp[i][j],dp[i-1][j]);
			}
			for(int j=0;j<gt[i];j++)
			{
				P q=to[i][j];
				for(int p=0;p<=min(k-1,i);p++)
				{
					dp[q.second][p+1]=max(dp[q.second][p+1],dp[i][p]+(ll) q.first);
				}
			}
		}
		printf("%lld\n",max(dp[n-1][k],dp[n][k]));
	}
	return 0;
}
