#define _USE_MATH_DEFINES
#include <algorithm>
#include <cstdio>
#include <functional>
#include <iostream>
#include <cfloat>
#include <climits>
#include <cstring>
#include <cmath>
#include <map>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <time.h>
#include <vector>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef pair<int, int> i_i;
typedef pair<ll, int> ll_i;
typedef pair<double, int> d_i;
typedef pair<ll, ll> ll_ll;
typedef pair<double, double> d_d;
struct edge { int u, v; ll w; };

int INF = INT_MAX / 3;
ll MOD = 1000000007;
ll _MOD = 1000000009;
double EPS = 1e-10;

ll gcd(ll a, ll b) {
	if (b == 0) return abs(a);
	else return gcd(b, a % b);
}

int main() {
	int T; cin >> T;
	while (T--) {
		int N; cin >> N;
		vector<int> fav(N);
		for (int i = 0; i < N; i++)
			cin >> fav[i];
		vector<int> h(N);
		for (int t = 0; t < 1010; t++)
			for (int i = 0; i < N; i++) {
				if (i - 1 >= 0 && fav[i - 1] < fav[i])
					h[i] = max(h[i], h[i - 1] + 1);
				if (i + 1 < N && fav[i] > fav[i + 1])
					h[i] = max(h[i], h[i + 1] + 1);
			}
		int K; cin >> K;
		vector<int> a(K);
		for (int i = 0; i < K; i++)
			cin >> a[i];
		sort(a.begin(), a.end());
		unique(a.begin(), a.end());
		K = a.size();
		int d = 0;
		for (int i = 0; i < K; i++)
			d = gcd(d, a[i]);
		for (int i = 0; i < K; i++)
			a[i] /= d;
		vector<bool> pos(1000000);
		pos[0] = true;
		for (int i = 0; i < K; i++)
			for (int j = 0; j + a[i] < 1000000; j++)
				if (pos[j])
					pos[j + a[i]] = true;
		vector<ll> b(1, 0);
		for (int i = 0; b[i] < LLONG_MAX / 2; i++) {
			ll x;
			for (x = b[i] * 2 + 1; x < 1000000 && !pos[x]; x++);
			b.push_back(x);
		}
		double sum = 0;
		for (int i = 0; i < N; i++)
			sum += (double)b[h[i]] * d;
		printf("%.10f\n", sum / N);
	}
}