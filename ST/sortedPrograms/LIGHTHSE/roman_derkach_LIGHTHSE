#include<bits/stdc++.h>
#define mkp(x,y) make_pair(x,y)

 using namespace std;

 const int N = 1e5 + 121;
 const int inf = 1e9 + 10;

 struct my
 {
     int x,y,num;
 };

 bool cmp(my a,my b)
 {
     return((a.x<b.x) || (a.x==b.x && a.y<b.y));
 }

 map<pair<int,int>,int> mp;

 my a[N];
 int t,n,i,j,xmin,xmax,ymin,ymax;

  int main()
  {

      ios_base::sync_with_stdio(false);
      cin.tie(NULL);
      cout.tie(NULL);

       //freopen("input.txt","r",stdin);
       //freopen("output.txt","w",stdout);

        cin>>t;
         while(t--)
         {
             mp.clear();
             cin>>n;
             xmin=inf;
             xmax=-inf;
             ymin=inf;
             ymax=-inf;
              for(i=1;i<=n;++i)
              {
                  cin>>a[i].x>>a[i].y;
                  xmin=min(xmin,a[i].x);
                  xmax=max(xmax,a[i].x);
                  ymin=min(ymin,a[i].y);
                  ymax=max(ymax,a[i].y);
                  mp[mkp(a[i].x,a[i].y)]=i;
                  a[i].num=i;
              }

              int z;

              z=mp[mkp(xmin,ymin)];
               if(z)
               {
                cout<<1<<endl;
                cout<<z<<" NE"<<endl;
               } else
               {
                z=mp[mkp(xmin,ymax)];
                 if(z)
                 {
                    cout<<1<<endl;
                    cout<<z<<" SE"<<endl;
                 } else
                 {
                    z=mp[mkp(xmax,ymin)];
                    if(z)
                    {
                      cout<<1<<endl;
                      cout<<z<<" NW"<<endl;
                    } else
                    {
                        z=mp[mkp(xmax,ymax)];
                        if(z)
                        {
                            cout<<1<<endl;
                            cout<<z<<" SW"<<endl;
                        } else
                        {
                            sort(a+1,a+n+1,cmp);
                            cout<<2<<endl;
                            if(a[1].y<a[n].y)
                            {
                            cout<<a[n].num<<" SW"<<endl;
                            cout<<a[1].num<<" NE"<<endl;
                            }
                            else
                            {
                            cout<<a[n].num<<" NW"<<endl;
                            cout<<a[1].num<<" SE"<<endl;
                            }
                        }
                    }
                 }
               }
         }

      return 0;
  }
