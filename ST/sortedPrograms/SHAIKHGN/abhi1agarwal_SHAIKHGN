/*
._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._
	ABHINANDAN AGARWAL
	MNNIT ALLAHABAD
	CSE
._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._
*/
#include<bits/stdc++.h>
using namespace std;
#define pc putchar_unlocked
#define gc getchar_unlocked
typedef long long ll;
typedef unsigned long long llu;
#define mp make_pair
#define pb push_back
#define sc(x) scanf("%d",&x);
#define fl(i,n) for (i=0;i<n;i++)
#define fle(i,n) for (i=1;i<=n;i++)
#define fla(i,a,n) for (i=a;i<n;i++)
#define mem(a,i) memset(a,i,sizeof(a))
#define fi first
#define se second
#define pii pair<int,int> 
#define piii pair<int,pair<int,int> >
#define wl(n) while (n--)

int fs()
{
	int x=0;
	char c;
	c=getchar_unlocked();
	while (c<'0'||c>'9')
		c=getchar_unlocked();
	while ('0'<=c&&c<='9')
	{
		x=(x<<3)+(x<<1)+c-'0';
		c=getchar_unlocked();
	}
	return x; 
}
void pps(const char *s)
{
	int i;
	for (i=0;s[i]!='\0';i++)
	{
		putchar_unlocked(s[i]);
	}
}
void _ppd(int a)
{
	if (a==0)
		return ;
	_ppd(a/10);
	putchar_unlocked(a%10+'0');
}
void ppd(int a) // Printing integer using utchar unlocked!
{
	if (a==0)
	{
		pc('0');
		return;
	}
	if (a<0)
	{
		pc('-');
		a=-a;
	}
	_ppd(a);
}
void _pplld(ll a)
{
	if (a==0)
		return ;
	_pplld(a/10);
	pc(a%10+'0');
}
void pplld(ll a)
{
	if (a==0)
	{
		pc('0');
		return ;
	}
	if (a<0)
	{
		pc('-');
		a=-a;
	}
	_pplld(a);
}
int ggs(char *s) // String inputting
{
	int x=0;
	char c=gc();
	while (!('a'<=c&&c<='z')&&c!=-1) // change conditions to whatever strings can input !
		c=gc();
	while ('a'<=c&&c<='z')
	{
		s[x++]=c;
		c=gc();
	}
	s[x]='\0';
	return x;
}

int fsn()
{
	int x=0;
	char c;
	c=getchar_unlocked();
	while (!('0'<=c&&c<='9'||c=='-'))
		c=getchar_unlocked();
	int neg=0;
	if (c=='-'){
		neg=1;
		c=getchar_unlocked();
	}
	while ('0'<=c&&c<='9')
	{
		x=(x<<3)+(x<<1)+c-'0';
		c=getchar_unlocked();
	}
	return (neg==0?x:-x); 
}
//------------------------------------------------------------------------------------

//-------------
int n,m;
int A[510][510];
bitset<501> dp[31][510];
int lgk;
void pre(int lol)
{	
	
	int i,j,k;
	for(i=1;i<=n;i++)
	{
		for(j=1;j<=n;j++)
			if (A[i][j])
				dp[0][i].set(j,1);
	/*	for (j=1;j<=n;j++)
			if (dp[0][i][j]=0)
			*/	
	}
	for (j=1;j<=lgk;j++)
	{
		for (i=1;i<=n;i++)
		{
			for (k=1;k<=n;k++)
			{
				if (dp[j-1][i].test(k))
				{
					dp[j][i]=(dp[j][i]|dp[j-1][k]);
				}
			}
		}
	}

}

bitset<501>w1,tem;
void gans(int x,int k)
{
	int i,j,a;
	w1[x]=1;
	for (a=lgk;a>=0;a--)
	{
		if(k-(1LL<<a)>=0)
		{
			for (i=1;i<=n;i++)
			{
				if (!w1.test(i))continue;
				tem=tem|(dp[a][i]);
			}
			k-=(1LL<<a);
			w1=tem;
			tem.reset();
		}
	}
	assert(k==0);
}
int main()
{
	n=fs();
	int i,j;
	for (i=1;i<=n;i++)
		for(j=1;j<=n;j++)
			A[i][j]=fs();
	m=fs();
	for (lgk=0;(1LL<<lgk)<(1e9)+1;lgk++);
	pre(1e9+1);
	//assert(false);
	wl(m)
	{
		int k,x;
		k=fs();
		x=fs();
		
		w1.reset();
		tem.reset();
		
		gans(x,k);
		int ans=0;
		for (i=1;i<=n;i++)
		{
			if (w1.test(i))
				ans++;
		}
		if(ans==0)
		{
			pps("0\n-1\n");continue;
		}
		ppd(ans);pc('\n');
		for (i=1;i<=n;i++)
		{
			if (w1.test(i))
			{
				ppd(i);
				pc(' ');
			}

		}
		pc('\n');
	}

	return 0;

}