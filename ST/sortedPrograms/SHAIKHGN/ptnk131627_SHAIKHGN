#include <bits/stdc++.h>

using namespace std;

#define X first 
#define Y second 
#define FOR(i,L,R) for(auto i=(L);i<=(R);i++)
#define REP(i,L,R) for(auto i=(L);i<(R);i++)

typedef pair<int,int> ii;
typedef long long ll;

const int MOD=1e9+7;
const int N=5e2;

int n;
struct matrix{
	bitset <N> a[N];
	matrix (){
		REP(i,0,n) a[i].reset();
	}
};
matrix base[30];
matrix operator *(matrix a,matrix b){
	matrix ans;
	for(int i=0;i<n;i++)
		for(int j=0;j<n;j++) if (a.a[i][j]) 
			ans.a[i]=ans.a[i]|b.a[j];
	return ans;
}
bitset<N> h,tmp;
void solve(int k,int x){
	h.reset();
	h[x-1]=1;
	for(int i=0;k;i++,k>>=1) if (k&1){
		tmp.reset();
		for(int j=0;j<n;j++) if (h[j])
			tmp=tmp|base[i].a[j];
		h=tmp;
	}
	int ans=h.count();
	printf("%d\n",ans);
	for(int i=1;i<=n;i++) if (h[i-1]) printf("%d ",i);
	if (!ans) printf("-1");
	printf("\n");
}
void prepare(){
	scanf("%d",&n);
	for(int i=0;i<n;i++)
		for(int j=0;j<n;j++) {
			int val;
			scanf("%d",&val);
			base[0].a[i][j]=val;
		}
	for(int i=1;i<30;i++)
		base[i]=base[i-1]*base[i-1];
	int test;
	scanf("%d",&test);
	while (test--){
		int k,x;
		scanf("%d%d",&k,&x);
		solve(k,x);
	}
}
int main(){
	prepare();
}