#pragma comment(linker, "/STACK:500000000")
#include <algorithm>
#include <functional>
#include <iostream>
#include <list>
#include <map>
#include <math.h>
#include <set>
#include <stdio.h>
#include <stdlib.h>
#include <string>
#include <string.h>
#include <time.h>
#include <queue>
#include <utility>
#include <vector>
using namespace std;

#define y0 y123
#define y1 y1234
#define ll unsigned long long
#define PI 3.1415926535897932384626433832795
#define INF 2147483647
#define N 10005

int gcd(int a, int b) { return (!b) ? a : gcd(b, a % b); }
int lcm(int a, int b) { return a / gcd(a,b) * b; }

multiset<int> a;
multiset<int> :: iterator it;
int res[15];
bool used[(1 << 15)];

int main() {
	int t;
	scanf("%d", &t);
	while (t--) {
		int n;
		scanf("%d", &n);
		a.clear();
		for (int i = 0; i < (1 << n); ++i) {
			used[i] = false;
		}
		for (int i = 0; i < (1 << n); ++i) {
			int v;
			scanf("%d", &v);
			a.insert(v);
		}
		for (int i = 0; i < n; ++i) {
			for (int mask = 0; mask < (1 << i); ++mask) {
				if (!used[mask]) {
					int sum = 0;
					for (int j = 0; j < i; ++j) {
						if (mask & (1 << j)) {
							sum += res[j];
						}
					}
					it = a.find(sum);
					if (it != a.end()) {
						a.erase(it);
					}
					used[mask] = true;
				}				
			}
			it = a.begin();
			res[i] = *it;
		}
		for (int i = 0; i < n; ++i) {
			printf("%d", res[i]);
			if (i == n - 1) {
				printf("\n");
			} else {
				printf(" ");
			}
		}
	}
	return 0;
}