#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <cmath>
#include <complex>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <iostream>
#include <map>
#include <queue>
#include <set>
#include <string>
#include <utility>
#include <vector>
using namespace std;

#define fi first
#define se second
#define pb push_back
#define all(x) (x).begin(), (x).end()
#define sz(x) (int((x).size()))
#define bit(x) (1 << (x))
#define cnt1(x) (__builtin_popcount(x))

template<class T>
inline void chkmax(T& x, T y) {
	if (x < y) x = y;
}

template<class T>
inline void chkmin(T& x, T y) {
	if (y < x) x = y;
}

typedef long long LL;
typedef double DB;
typedef pair<int, int> PII;
typedef vector<int> VI;
const int MN = 305;
const int MX = 100005;
const int M = 1000000007;
LL f[MN];
int dp[MN][MX];

void init() {
	int i, j, tp;
	
	f[0] = 1;
	for (i = 1; i < MN; i++) f[i] = f[i - 1] * i % M;
	
	dp[0][0] = 1;
	for (i = 1; i < MN; i++) {
		for (j = i; j < MX; j++) {
			tp = dp[i][j - i] + dp[i - 1][j - i];
			if (tp >= M) tp -= M;
			dp[i][j] = tp;
		}
	}
}

int main() {
//	freopen("in.txt", "r", stdin);
//	freopen("out.txt", "w", stdout);
	
	int tc, n, m;
	
	init();
	for (scanf("%d", &tc); tc--; ) {
		scanf("%d%d", &n, &m);
		printf("%lld\n", dp[n][m] * f[n] % M);
	}
	return 0;
}
