#include <bits/stdc++.h>

using namespace std;

#define X first
#define Y second
#define INPUT freopen("C.inp","r",stdin)
#define OUTPUT freopen("C.out","w",stdout)
#define FOR(i,l,r) for(auto i=l;i<=r;i++)
#define REP(i,l,r) for(auto i=l;i<r;i++)
#define FORD(i,l,r) for(auto i=l;i>=r;i--)
#define REPD(i,l,r) for(auto i=l;i>r;i--)
#define ENDL printf("\n")
#define debug 1

typedef long long ll;
typedef pair<int,int> ii;

const int inf=1e9;
const int MOD=1e9+7;
const int N=1e5+10;

int n,k,h[N];
ll a[N][2],p[N<<1];
ll power(ll x,ll y){
    ll ans=1;
    while (y){
        if (y&1) ans=ans*x%MOD;
        x=x*x%MOD;
        y>>=1;
    }
    return ans;
}
void prepare(){
    scanf("%d%d",&n,&k);
    int x,y;
    FOR(i,1,n){
        scanf("%d%d",&x,&y);
        FOR(j,0,1){
            a[i][j]=1LL*x*(y+j);
            p[j*n+i]=a[i][j];
        }
    }
    sort(p+1,p+n*2+1);
}
int solve(){
    if (k==n) return (power(10,100)+1)%MOD;
    int n1=unique(p+1,p+2*n+1)-p-1;
    memset(h,0,sizeof(h));
    FOR(i,1,n)
        FOR(j,0,1){
            int idx=lower_bound(p+1,p+n1+1,a[i][j])-p;
            h[idx]+=(j?-1:1);
        }
    FOR(i,1,n1) h[i]+=h[i-1];
    ll ans=0;
    REP(i,1,n1) if (h[i]>=n-k) ans=(ans+p[i+1]-p[i])%MOD;
    return ans;
}
int main(){
    int test;
    scanf("%d",&test);
    while (test--){
        prepare();
        cout<<solve()<<'\n';
    }
}
