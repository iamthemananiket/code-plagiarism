#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cctype>
#include<cstdlib>
#include<algorithm>
#include<bitset>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<map>
#include<set>
#include<stack>
#include<cmath>
#include<sstream>
#include<fstream>
#include<iomanip>
#include<ctime>
#include<complex>
#include<functional>
#include<climits>
#include<cassert>
#include<iterator>
#include<unordered_map>
#include<unordered_set>
using namespace std;
vector<long long int> v;
int t;
vector<pair<long long int, long long int> > vv;
#define MOD 1000000007LL
vector<int> imos;
int main() {
	scanf("%d", &t);
	while (t--) {
		v.clear();
		int n;
		int k;
		scanf("%d%d", &n, &k);
		vv.clear();
		for (int i = 0;i < n;i++) {
			long long int a, b;
			scanf("%lld%lld", &a, &b);
			vv.push_back(make_pair(a, b));
			v.push_back(a*b);
			v.push_back(a*(b + 1LL));
			v.push_back(a*(b + 1LL) - 1LL);
		}
		v.push_back(0);
		sort(v.begin(), v.end());
		if (n == k) {
			long long int ans = 1LL;
			for (int i = 0;i < 100;i++) {
				ans *= 10LL;
				if (ans >= MOD) {
					ans %= MOD;
				}
			}
			ans++;
			ans %= MOD;
			printf("%lld\n", ans);
			continue;
		}
		v.erase(unique(v.begin(), v.end()), v.end());
		imos.clear();
		imos.assign(v.size() + 1, 0);
		for (int i = 0;i < n;i++) {
			long long int a = vv[i].first;
			long long int b = vv[i].second;
			long long int k = a*b;
			long long int kk = a*(b + 1LL);
			int ind = lower_bound(v.begin(), v.end(), k) - v.begin();
			imos[ind]++;
			ind = lower_bound(v.begin(), v.end(), kk) - v.begin();
			imos[ind]--;
		}
		int s = 0;
		long long int ans = 0;
		for (int i = 0;i < imos.size();i++) {
			s += imos[i];
			imos[i] = s;
			if (imos[i] >= n - k) {
				ans += v[i + 1] - v[i];
				if (ans >= MOD) {
					ans %= MOD;
				}
			}
		}
		printf("%lld\n", ans);
	}
	return 0;
}