/*********************************************************************\
   |--\        ---       /\        |-----------| -----   /-------|    |
   |   \        |       /  \       |               |    /             |
   |    \       |      /    \      |               |   |              |
   |     \      |     /      \     |               |   |----|         |
   |      \     |    / ------ \    |-------|       |        |-----|   |
   |       \    |   /          \   |               |              |   |
   |        \   |  /            \  |               |              /   |
  ---        -------            ------           ----- |---------/    |
                                                                      |
    codeforces = nfssdq  ||  topcoder = nafis007                      |
    mail = nafis_sadique@yahoo.com || nfssdq@gmail.com                |
    IIT,Jahangirnagar University(41)                                  |
                                                                      |
**********************************************************************/

#include <bits/stdc++.h>
using namespace std;

#define xx         first
#define yy         second
#define pb         push_back
#define mp         make_pair
#define LL         long long
#define inf        INT_MAX/3
#define mod        1000000007ll
#define PI         acos(-1.0)
#define linf       (1ll<<60)-1
#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     ((A).begin(), (A).end())
#define set0(ar)   memset(ar,0,sizeof ar)
#define vsort(v)   sort(v.begin(),v.end())
#define setinf(ar) memset(ar,126,sizeof ar)

//cout << fixed << setprecision(20) << p << endl;

template <class T> inline T bigmod(T p,T e,T M){
    LL ret = 1;
    for(; e > 0; e >>= 1){
        if(e & 1) ret = (ret * p) % M;
        p = (p * p) % M;
    } return (T)ret;
}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}


LL base[2] = {33, 37};
LL md[2] = {mod, mod+2};
LL pp[2][100001];
int isp[1000001], ar[100001], id[1000001];
vector < int > vc[1000001], primes;
int divisor[1000001], cnt[100001];
map < pair < int, int >, int > mm;
int main(){
    ios_base::sync_with_stdio(0); cin.tie(0);
    for(int i = 1; i <= 1000000; i++){
        for(int j = i; j <= 1000000; j += i) divisor[j]++;
    }
    for(int i = 2; i <= 1000000; i++){
        if(isp[i] == 0){
            primes.pb(i);
            id[i] = primes.size()-1;
            for(int j = i; j <= 1000000; j += i){
                isp[j] = 1;
                vc[j].pb(i);
            }
        }
    }

    REP(i, 2){
        pp[i][0] = 1;
        for(int j = 1; j <= 100000; j++) pp[i][j] = (pp[i][j-1] * base[i]) % md[i];
    }


    int T; cin >> T;
    while(T--){
        mm.clear(); set0(cnt);

        int n; cin >> n;
        mm[mp(0,0)] = 1;
        pair<int,int> P = mp(0,0);
        LL res = 0;
        for(int i = 1; i <= n; i++){
            cin >> ar[i];

            if(divisor[ar[i]] % 4 == 0) ar[i] = 1;
            else if(divisor[ar[i]] % 2 == 1) ar[i] = sqrt(ar[i]);

            int x = ar[i];
            REP(j, vc[ar[i]].size()){
                int f = 0;
                while(x % vc[ar[i]][j] == 0){
                    x /= vc[ar[i]][j];
                    f ^= 1;
                }
                if(f == 0) continue;
                int v = id[vc[ar[i]][j]];
                if(cnt[v] == 0){
                    P.xx = (P.xx + pp[0][v]) % md[0];
                    P.yy = (P.yy + pp[1][v]) % md[1];
                } else {
                    P.xx = (P.xx + md[0] - pp[0][v]) % md[0];
                    P.yy = (P.yy + md[1] - pp[1][v]) % md[1];
                }
                cnt[v] ^= 1;
            }
//            cout << P.xx << " " << P.yy << " " << ar[i] << endl;
            res += mm[P];
            mm[P]++;
        }

        cout << res << endl;
    }
}
