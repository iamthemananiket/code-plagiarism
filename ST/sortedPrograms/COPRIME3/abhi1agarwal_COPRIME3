#include<bits/stdc++.h>
using namespace std;
#define pc putchar_unlocked
#define gc getchar_unlocked
typedef long long ll;
typedef unsigned long long llu;
#define mp make_pair
#define pb push_back
#define sc(x) scanf("%d",&x)
#define sc2(x,y) scanf("%d%d",&x,&y)
#define sc3(x,y,z) scanf("%d%d%d",&x,&y,&z)
#define scl(x) scanf("%lld",&x)
#define scl2(x,y) scanf("%lld%lld",&x,&y)
#define scl3(x,y,z) scanf("%lld%lld%lld",&x,&y,&z)
#define scstr(x) scanf("%s",x)
#define pd(x) printf("%d",x)
#define pstr(x) printf("%s",x)
#define newl() printf("\n")
#define fl(i,n) for (i=0;i<n;i++)
#define fle(i,n) for (i=1;i<=n;i++)
#define fla(i,a,n) for (i=a;i<n;i++)
#define mem(a,i) memset(a,i,sizeof(a))
#define fi first
#define se second
typedef pair<int,int> pii;
typedef pair<int,pair<int,int> > piii ;
typedef pair<ll,ll> pll;
typedef pair<ll,int> pli;
#define gcd __gcd
#define wl(n) while (n--)
#define debug(x) cout<<"debug->"<<#x<<"::"<<x<<endl
#define debug2(x,y) cout<<#x<<" :: "<<x<<"\t"<<#y<<" :: "<<y<<"\n"
#define debug3(x,y,z) cout<<#x<<" :: "<<x<<"\t"<<#y<<" :: "<<y<<"\t"<<#z<<" :: "<<z<<"\n"
#define tr(container, it)  for(typeof(container.begin()) it = container.begin(); it != container.end(); it++) 
#define all(v) v.begin(),v.end()
const double eps=0.000000000000001 ;
#define MOD 1000000007
typedef long double LF;
typedef double lF;
//-------------
#define lim 1000000
int A[100010],n;
int fre[1000010]={0};
int divs[1000010];
int mob[1000010];
bool chk[1000010];
void doit()
{
	int i,j;
	for(i=1;i<=lim;i++)
	{

		for (j=i;j<=lim;j+=i)
		{
			divs[i]+=fre[j];
		}
	}

}
void pre()
{
	int i;
	//mob[1]=1;
	for (i=1;i<=lim;i++)mob[i]=1;
	for (i=2;i<=lim;i++)
	{
		if (chk[i])
			continue;
		int j;
		for(j=i;j<=lim;j+=i)
		{
			chk[j]=true;
			mob[j]=-mob[j];
			if ((ll)j%((ll)i*i)==0)
				mob[j]=0;

		}
		chk[i]=false;
	}
}
ll C(ll n)
{
	return (n*(n-1)*(n-2)/6LL);
}
int main()
{
	sc(n);
	int i,j;
	for(i=0;i<n;i++)
	{
		sc(A[i]);
		fre[A[i]]++;
	}
	ll ans=0;
	doit();
	pre();
	for (i=1;i<=lim;i++)
	{
		ans+=(ll)mob[i]*C(divs[i]);
	}
	printf("%lld\n",ans);

	return 0;

}