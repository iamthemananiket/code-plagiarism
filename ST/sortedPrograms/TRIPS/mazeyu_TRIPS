#include<bits/stdc++.h>
#define N 200010
using namespace std;
int i,m,dad[20][N],cs[N],l,t,cf,sd[N],ln,dfn[N],s,an[N],ux;
int n,x,y,z,fs,v[N],ne[N],head[N],len[N],j,f[20][N],cc,u,ans;
struct mjj{int x,y,z,num,c;}a[N];
bool cmp(mjj x,mjj y){return x.z<y.z;}
void add(int x,int y,int z)
{
	v[++l]=y;ne[l]=head[x];
	head[x]=l;len[l]=z;
}
int lca(int x,int y)
{
	if(cs[x]>cs[y])swap(x,y);
	for(t=cf;t>=0;t--)if(cs[dad[t][y]]>=cs[x])y=dad[t][y];
	if(x==y)return x;
	for(t=cf;t>=0;t--)if(dad[t][x]!=dad[t][y])x=dad[t][x],y=dad[t][y];
	return dad[0][x];
}
void dfs(int x)
{
	dfn[++ln]=x;
	for(t=0;dad[t][x];t++)
		dad[t+1][x]=dad[t][dad[t][x]];
	if(t>cf)cf=t-1;
	for(int i=head[x];i;i=ne[i])
	if(v[i]!=dad[0][x])
	{
		dad[0][v[i]]=x;
		cs[v[i]]=cs[x]+1;
		sd[v[i]]=sd[x]+len[i];
		dfs(v[i]);
	}
}
int main()
{
	scanf("%d",&n);fs=sqrt(n);
	for(i=1;i<n;i++)
	{
		scanf("%d%d%d",&x,&y,&z);
		add(x,y,z);add(y,x,z);
	}
	cs[1]=sd[1]=1;dfs(1);
	scanf("%d",&m);
	for(i=1;i<=m;i++)
	{
		scanf("%d%d%d",&a[i].x,&a[i].y,&a[i].z);
		a[i].c=lca(a[i].x,a[i].y);a[i].num=i;
	}
	sort(a+1,a+m+1,cmp);j=1;
	for(i=1;i<=n;i++)f[0][i]=sd[dad[0][i]]-sd[i]>1?i:dad[0][i];
	for(s=2;s<=fs;s++)
	{
		cc=0;
		for(i=1;i<=n;i++)
		{
			u=dfn[i];
			if(sd[u]-sd[dad[0][f[0][u]]]<=s)
				f[0][u]=dad[0][f[0][u]];
			for(t=0;f[t][u];t++)
				f[t+1][u]=f[t][f[t][u]];
			if(t>cc)cc=t-1;
		}
		for(;a[j].z==s;j++)
		{
			x=a[j].x;y=a[j].y;z=a[j].c;ans=0;
			for(t=cc;t>=0;t--)if(cs[f[t][x]]>cs[z])x=f[t][x],ans+=1<<t;
			for(t=cc;t>=0;t--)if(cs[f[t][y]]>cs[z])y=f[t][y],ans+=1<<t;
			ans+=(sd[x]+sd[y]-sd[z]*2+s-1)/s;an[a[j].num]=ans;
		}
	}
	for(;j<=m;j++)
	{
		x=a[j].x;y=a[j].y;
		z=a[j].c;s=a[j].z;ans=0;
		for(;sd[x]-sd[z]>s;)
		{
			ux=x;
			for(t=cf;t>=0;t--)
				if(sd[x]-sd[dad[t][ux]]<=s)ux=dad[t][ux];
			x=ux;ans++;
		}
		for(;sd[y]-sd[z]>s;)
		{
			ux=y;
			for(t=cf;t>=0;t--)
				if(sd[y]-sd[dad[t][ux]]<=s)ux=dad[t][ux];
			y=ux;ans++;
		}
		ans+=(sd[x]+sd[y]-sd[z]*2+s-1)/s;
		an[a[j].num]=ans;
	}
	for(i=1;i<=m;i++)printf("%d\n",an[i]);
}