#include <stdio.h>
#include <ctime>
#include <algorithm>
#include <cstring>
#include <map>
#include <vector>
using namespace std;

inline int fast_input(void)
{
	char t;
	int x=0;
	int neg=0;
	t=getchar();
	while((t<48 || t>57) && t!='-')
		t=getchar();
	if(t=='-')
		{neg=1; t=getchar();}
    while(t>=48 && t<=57)
    {
        x=(x<<3)+(x<<1)+t-48;
        t=getchar();
    }
	if(neg)
		x=-x;
	return x;
}

inline void fast_output(int x)
{
	char a[20];
	int i=0,j;
	a[0]='0';
	if (x<0) {putchar('-'); x=-x;}
	if (x==0) putchar('0');
	while(x)
	{
		a[i++]=x%10+48;
		x/=10;
	}
	for(j=i-1;j>=0;j--)
	{
		putchar(a[j]);
	}
	putchar('\n');
}

int main()
{
int t,b[101],i,n,modb[101],len,j,precomp[1001][101],s1,s2,c1,c2,val,curr;
char a[1001],ans[1001],temp;
t=fast_input();
while(t--)
{
    map <int, vector <int> > m;
    scanf("%s",ans);
    n=fast_input();
    i=0;
    while(i<n)
    {
        b[i]=fast_input();
        i++;
    }
    len=strlen(ans);
    for(i=0;i<=len;i++) a[i]=ans[i];
    i=0;
    memset(precomp,0,sizeof(precomp));
    while(i<1001)
    {
        j=0;
        while(j<n)
        {
            if (i==0) precomp[i][j]=1;
            else precomp[i][j]=10*precomp[i-1][j];
            if (precomp[i][j]>=b[j]) precomp[i][j]%=b[j];
            j++;
        }
        i++;
    }
    i=0;
    while(i<len)
    {
        m[ans[i]-'0'].push_back(i);
        i++;
    }
    srand(t);
    i=0;
    while(i<len)
    {
        j=0;
        while(j<n)
        {
            if (i==0) modb[j]=a[i]-'0';
            else modb[j]=10*modb[j]+a[i]-'0';
            if (modb[j]>=b[j]) modb[j]%=b[j];
            j++;
        }
        i++;
    }
    val=0;
    for(i=0;i<n;i++) val+=modb[i];
    for(j=0;j<25000;j++)
    {
        c1=0;
        while(m[c1].size()==0)
            c1=rand()%9+1;
        c2=0;
        while(m[c2].size()==0)
        {
            c2=rand()%8+1;
            if (c2==c1) c2++;
        }
        c1=m[c1][rand()%m[c1].size()];
        c2=m[c2][rand()%m[c2].size()];
        temp=a[c1];
        a[c1]=a[c2];
        a[c2]=temp;
        curr=0;
        for(i=0;i<n;i++)
        {
            modb[i]=(modb[i]-((a[c1]-'0')*precomp[len-c2-1][i])%b[i]-((a[c2]-'0')*precomp[len-c1-1][i])%b[i]+((a[c2]-'0')*precomp[len-c2-1][i])%b[i]+((a[c1]-'0')*precomp[len-c1-1][i])+2*b[i])%b[i];
            curr+=modb[i];
        }
        if (curr<val)
        {
            for(i=0;i<=len;i++) ans[i]=a[i];
			val=curr;
		}
    }
    printf("%s\n",ans);
}
return 0;
}
