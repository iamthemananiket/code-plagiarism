/*********************************************************************\
   |--\        ---       /\        |-----------| -----   /-------|    |
   |   \        |       /  \       |               |    /             |
   |    \       |      /    \      |               |   |              |
   |     \      |     /      \     |               |   |----|         |
   |      \     |    / ------ \    |-------|       |        |-----|   |
   |       \    |   /          \   |               |              |   |
   |        \   |  /            \  |               |              /   |
  ---        -------            ------           ----- |---------/    |
                                                                      |
    codeforces = nfssdq  ||  topcoder = nafis007                      |
    mail = nafis_sadique@yahoo.com || nfssdq@gmail.com                |
    IIT,Jahangirnagar University(41)                                  |
                                                                      |
**********************************************************************/

#include <bits/stdc++.h>
using namespace std;

#define xx         first
#define yy         second
#define pb         push_back
#define mp         make_pair
#define LL         long long
#define inf        INT_MAX/3
#define mod        1000000007ll
#define PI         2.0*acos(0.0)
#define linf       (1ll<<62)-1
#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     (A).begin(), (A).end()
#define set0(ar)   memset(ar,0,sizeof ar)
#define vsort(v)   sort(v.begin(),v.end())
#define setinf(ar) memset(ar,126,sizeof ar)

//cout << fixed << setprecision(20) << p << endl;

template <class T> inline T bigmod(T p,T e,T M) {
    if(e==0)return 1;
    if(e%2==0){LL t=bigmod(p,e/2,M);return (T)((t*t)%M);}
    return (T)(((LL)bigmod(p,e-1,M)*(LL)(p))%M);
}
template <class T> inline T gcd(T a,T b) {if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M) {return bigmod(a,M-2,M);}

int ar[41][41][41];
char p1[41 * 41 * 41], p2[41 * 41 * 41];
main()
{
    //ios_base::sync_with_stdio(0); cin.tie(0);
    int a,b,c,d,e = 0,f,g,h = 0,x = 1,y,z;
    scanf("%d", &a);
    REP(l, a){
        scanf("%d %d", &b, &c);
        scanf("%s %s", p1, p2);
        set0(ar);
        e = 0;
        for(int i = 1; i <= b; i++){
            for(int j = 1; j <= b; j++){
                for(int k = 1; k <= b; k++){
                    if(p1[e] == p2[e])ar[i][j][k] = 1;
                    e++;
                    ar[i][j][k] += ar[i][j - 1][k] + ar[i][j][k - 1] - ar[i][j - 1][k - 1];
                }
            }
        }
        h = 0;
        for(int i = b; i >= 1; i--){
            e = 0;
            f = c * i * i * i;
            for(int j = 1; j <= b - i + 1; j++){
                for(int k = 1; k <= b - i + 1; k++){
                    g = 0;
                    for(int x = 1; x <= i; x++){
                        g += ar[x][j + i - 1][k + i - 1] - ar[x][j - 1][k + i - 1] - ar[x][j + i - 1][k - 1] + ar[x][j - 1][k - 1];
                    }
                    if(g * 100 >= f)e++;
                    for(int x = 2; x <= b - i + 1; x++){
                        g -= ar[x - 1][j + i - 1][k + i - 1] - ar[x - 1][j - 1][k + i - 1] - ar[x - 1][j + i - 1][k - 1] + ar[x - 1][j - 1][k - 1];
                        g += ar[x + i - 1][j + i - 1][k + i - 1] - ar[x + i - 1][j - 1][k + i - 1] - ar[x + i - 1][j + i - 1][k - 1] + ar[x + i - 1][j - 1][k - 1];
                        if(g * 100 >= f)e++;
                    }
                }
            }
            if(e > 0){
                printf("%d %d\n", i, e);
                h = 1;
                break;
            }
        }
        if(h == 0)puts("-1");
    }
}

