/*
 *
 * File: stuff.cpp
 * Author: Andy Y.F. Huang (azneye)
 * Created on Aug 23, 2014, 11:50:25 PM
 */

#include <bits/stdc++.h>

using namespace std;

namespace stuff {
typedef long long ll;
const int MOD = 1000000007;

void solve(int test_num) {
  int N;
  cin >> N;
  vector<int> x(N);
  for (int i = 0; i < N; i++)
    cin >> x[i];
  int res = 0;
  for (int b = 29; b >= 0; b--) {
    int cnt = 0;
    for (int i = 0; i < (int) x.size(); i++)
      if (x[i] >> b & 1)
        cnt++;
    if (cnt < 2) {
      for (int i = 0; i < (int) x.size(); i++)
        if (x[i] >> b & 1)
          x[i] ^= 1 << b;
    } else {
      vector<int> nx;
      res |= 1 << b;
      for (int i = 0; i < (int) x.size(); i++)
        if (x[i] >> b & 1)
          nx.push_back(x[i]);
      x = nx;
    }
  }
  cout << res << endl;
}

void solve() {
#ifdef AZN
  double start_t = clock();
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
//freopen("azn.txt", "w", stderr);
#endif
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  int T = 1;
  cin >> T;
  for (int t = 1; t <= T; t++)
    solve(t);
#ifdef AZN
  cerr << "Took: " << ((clock() - start_t) / CLOCKS_PER_SEC);
#endif
}
}

int main() {
  stuff::solve();
  return 0;
}
