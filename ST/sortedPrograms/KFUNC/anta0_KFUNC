#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <cctype>
#include <cassert>
#include <limits>
#include <functional>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define rer(i,l,u) for(int (i)=(int)(l);(i)<=(int)(u);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#if defined(_MSC_VER) || __cplusplus > 199711L
#define aut(r,v) auto r = (v)
#else
#define aut(r,v) __typeof(v) r = (v)
#endif
#define each(it,o) for(aut(it, (o).begin()); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define pb(x) push_back(x)
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
using namespace std;
typedef vector<int> vi; typedef pair<int,int> pii; typedef vector<pair<int,int> > vpii; typedef long long ll;
template<typename T, typename U> inline void amin(T &x, U y) { if(y < x) x = y; }
template<typename T, typename U> inline void amax(T &x, U y) { if(x < y) x = y; }

int F(long long x) {
	int t = x % 9;
	return t == 0 ? 9 : t;
}

long long solve(int A, int D, long long N) {
	vector<int> idx(10, -1);
	ll x = A;
	ll total = 0;
	bool last = false;
	for(ll i = 0; i < N; ++ i) {
		int f = F(x);
		if(!last && idx[f] != -1) {
			int len = (int)(i - idx[f]), sum = 0;
			rep(j, idx.size()) if(idx[f] <= idx[j])
				sum += j;
			ll cycles = (N - i) / len;
			total += cycles * sum;
			i += cycles * len;

			last = true;
			-- i;
			continue;
		}
		total += f;
		idx[f] = (int)i;
		x += D;
	}
	return total;
}

int main() {
	int T;
	scanf("%d", &T);
	for(int ii = 0; ii < T; ++ ii) {
		int A; int D; long long L; long long R;
		scanf("%d%d%lld%lld", &A, &D, &L, &R), -- L;
		long long ans = 0;
		ans += solve(A, D, R);
		ans -= solve(A, D, L);
		printf("%lld\n", ans);
	}
	return 0;
}
