/***************************************
    codeforces = topcoder = sahedsohel
    IIT,Jahangirnagar University(42)
****************************************/
#include <bits/stdc++.h>
using namespace std;

#define ll long long int
#define ull unsigned long long int
#define inf (INT_MAX/10)
#define linf (LLONG_MAX/10LL)
#define sc(a) scanf("%d",&a)
#define sc2(a,b) scanf("%d%d",&a,&b)
#define sc3(a,b,c) scanf("%d%d%d",&a,&b,&c)
#define sc4(a,b,c,d) scanf("%d%d%d%d",&a,&b,&c,&d)
#define fl(c,i,n) for(i=c;i<n;i++)
#define f(i,n) for(i=0;i<n;i++)
#define mem(a) memset(a,0,sizeof(a))
#define memn(a) memset(a,-1,sizeof(a))
#define pb push_back
#define aov(a) a.begin(),a.end()
#define mpr make_pair
#define PI (2.0*acos(0.0)) //#define PI acos(-1.0)
#define xx first
#define yy second
#define mxv(a) *max_element(aov(a))
#define mnv(a) *min_element(aov(a))
#define LB(a,x) (lower_bound(aov(a),x)-a.begin())
#define UB(a,x) (upper_bound(aov(a),x)-a.begin())
#define to_c_string(a) a.c_str()
#define strtoint(c) atoi(&c[0])
#define pll pair< ll , ll >
#define pii pair< int , int >
#define pid pair< int , double >
#define pcs(a) printf("Case %d: ", a)
#define nl puts("")
#define endl '\n'
#define dbg(x) cout<<#x<<" : "<<x<<endl

template <class T> inline T bigmod(T p,T e,T M){ll ret = 1;for(; e > 0; e >>= 1){if(e & 1) ret = (ret * p) % M;p = (p * p) % M;}return (T)ret;}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}   // M is prime}
template <class T> inline T bpow(T p,T e){ll ret = 1;for(; e > 0; e >>= 1){if(e & 1) ret = (ret * p);p = (p * p);}return (T)ret;}

int toInt(string s){int sm;stringstream ss(s);ss>>sm;return sm;}
int toLlint(string s){long long int sm;stringstream ss(s);ss>>sm;return sm;}


///int mnth[]={-1,31,28,31,30,31,30,31,31,30,31,30,31};  //Not Leap Year
///int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
///int dx[]={-1,+1,0,1,0,-1}; // Hexagonal Direction   **
///int dy[]={-1,+1,1,0,-1,0}; //                       *#*
///                                                     **
///const double eps=1e-9;
///int dx[]={0,1,0,-1};int dy[]={1,0,-1,0}; //4 Direction

/*****************************************************************/
/// ////////////////////   GET SET GO    ////////////////////// ///
/*****************************************************************/


#define intx(i,j,k,l) ((a[i]*b[j]-b[i]*a[j])*(a[k]-a[l])-(a[i]-a[j])*(a[k]*b[l]-b[k]*a[l]))/((a[i]-a[j])*(b[k]-b[l])-(b[i]-b[j])*(a[k]-a[l]))
#define inty(i,j,k,l) ((a[i]*b[j]-b[i]*a[j])*(b[k]-b[l])-(b[i]-b[j])*(a[k]*b[l]-b[k]*a[l]))/((a[i]-a[j])*(b[k]-b[l])-(b[i]-b[j])*(a[k]-a[l]))
#define dst(u,v,x,y) sqrt((x*1.0-u*1.0)*(x*1.0-u*1.0)+(y*1.0-v*1.0)*(y*1.0-v*1.0))
#define area(p1,p2,p3) (p1.xx*p2.yy+p2.xx*p3.yy+p3.xx*p1.yy-p1.yy*p2.xx-p2.yy*p3.xx-p3.yy*p1.xx)

int ts,kk=1;

#define M 100005
#define MD 1000000007LL
#define MX 1000000000000000LL

int n,a[1005];
int rs[1001][1001];

struct item {
	int key, prior,cnt;
	item * l, * r;
	item ():cnt(0),l (NULL), r (NULL) {}
	item (int key, int prior): key (key), prior (prior), l (NULL), r (NULL) {}
};

typedef item* pitem;

int cnt (pitem t) {
	return t? t-> cnt: 0;
}

void upd_cnt (pitem t) {
	if (t)
		t-> cnt = 1 + cnt (t-> l) + cnt (t-> r);
}

void split (pitem t, int key, pitem & l, pitem & r) {
	if (! t)
		l = r = NULL;
	else if (key <t-> key)
		split (t-> l, key, l, t-> l), r = t;
	else
		split (t-> r, key, t-> r, r), l = t;
    upd_cnt (t);
}

void insrt(pitem & t, pitem it) {
	if (! t)
		t = it;
	else if (it-> prior> t-> prior)
		split(t, it-> key, it-> l, it-> r), t = it;
	else
		insrt( it-> key < t-> key? t-> l : t-> r, it);
    upd_cnt (t);
}

void mrg (pitem & t, pitem l, pitem r) {
	if (! l ||! r)
		t = l? l: r;
	else if (l-> prior> r-> prior)
		mrg (l-> r, l-> r, r), t = l;
	else
		mrg (r-> l, l, r-> l), t = r;
    upd_cnt (t);
}

bool find(pitem cr,int x)
{
    while(cr&&cr->key!=x)
    {
        if(x<cr->key)cr=cr->l;
        else cr=cr->r;
    }
    return (cr&&cr->key==x);
}

//void erase (pitem & t, int key) {
//	if (t-> key == key)
//		merge (t, t-> l, t-> r);
//	else
//		erase (key <t-> key? t-> l: t-> r, key);
//}

pitem unite (pitem l, pitem r) {
	if (! l ||! r) return l? l: r;
	if (l-> prior <r-> prior) swap (l, r);
	pitem lt, rt;
	split (r, l-> key, lt, rt);
	l-> l = unite (l-> l, lt);
	l-> r = unite (l-> r, rt);
	return l;
}

void Print(pitem p){
    if (p == NULL)      return ;

    cout << p->cnt << "(" << p->key <<"," <<p->prior << ") [ ";

    Print(p->l);
    cout << " ][ ";
    Print(p->r);
    cout << " ] ";
}

int main()
{
    int t,i,j,k,sz;

    srand(time(NULL));
    pitem tr;
    pitem cr;

    sc(n);
    for(i=1;i<=n;i++)
    {
        sc(a[i]);
    }
    for(i=1;i<=n;i++)
    {
        tr=NULL;
        sz=1;
        for(j=i;j<=n;j++,sz++)
        {
            pitem x=new item(a[j],rand()%MD);
            insrt(tr,x);
            cr=tr;
            k=(sz+1)/2;
//            cout<<sz<<" "<<k<<endl;
            while(1)
            {
                int lt=cnt(cr->l);
                if( k<=lt )cr=cr->l;
                else
                {
                    k-=lt;
                    if(k==1)break;
                    k--;
                    cr=cr->r;
                }
            }
            rs[i][j]=cr->key;
        }
    }

    sc(t);
    while(t--)
    {
        sc2(j,k);
        printf("%d\n",rs[j][k]);
    }

    return 0;
}

/*

*/
