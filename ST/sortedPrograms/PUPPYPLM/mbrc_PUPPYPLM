#include <bits/stdc++.h>
#define rep(i,x,y) for (int i = (x); i<=(y); i++)
#define repe(i,x,y) for (int i = (x); i < (y);i++)
#define drep(i,x,y) for (int i = (x); i >= (y); i--)
#define mp make_pair
#define pb push_back
#define MAX(a,b) (((a)>(b))?(a):(b))
#define MIN(a,b) (((a)<(b))?(a):(b))
#define sf(n) scanf("%Lf",&n)
#define prf(n) printf("%Lf",n)
#define	s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define pr(n) printf("%d",n)
#define prl(n) printf("%lld",n)
#define endc printf("\n")
#define psp printf(" ")

using namespace std;
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;

const int maxn = 1e5 + 7;
const ll p = 257;
const ll md = 1e9 + 7;
const ll pi = 70038911;
string s;
int n,K;

ll hash[maxn][2];
ll pp[maxn];
ll pip[maxn];
int rp[maxn];

ll shash(int x,int y) {
	ll cv = (hash[y][0] - hash[x-1][0] + md)%md;
	cv = (cv * pip[x-1])%md;
	return cv;
}

ll rhash(int x,int y) {
	//cout<<x<<" .. "<<y<<endl;
	int xx = rp[y], yy = rp[x];
	//cout<<xx<<" .. "<<yy<<endl;
	ll cv = (hash[yy][1] - hash[xx-1][1] + md)%md;
	cv = (cv * pip[xx-1])%md;
	return cv;
}

 
int proceed(int x,int y) {
	if (x < 1 or y > n) return 0;
	int l = 0, r = min(x,n-y+1);

	while (l < r) {
		int mid = (l+r+1)/2;
		//cout<<mid<<" : "<<rhash(x-mid+1,x)<<" : "<<shash(y,y+mid-1)<<endl;
		if (rhash(x-mid+1,x) == shash(y,y+mid-1)) {
			l = mid;
		} else {
			r = mid-1;
		}
	}
	return l;
}

int getv(int x,int y) {
	int l = 0;
	rep(j,1,K+1) {
		if (j > 1) { l++; }
		//cout<<x<<" : "<<y<<" -> "<<proceed(x,y)<<endl;
		int z = proceed(x,y);
		l = l + z;
		if (x-z < 1 || y+z > n) return l;
		x = x-z-1; y = y+z+1;
	}
	return l;
}

void solve() {
	cin>>n>>K>>s; s = " " + s;

	hash[0][0] = 0;
	hash[0][1] = 0;
	
	for (int j = 1, k = n; j <= n; j++,k--) {
		hash[j][0] = hash[j-1][0];
		hash[j][1] = hash[j-1][1];
		hash[j][0] = (hash[j][0] + s[j]*pp[j])%md;
		hash[j][1] = (hash[j][1] + s[k]*pp[j])%md;
		rp[k] = j;
	}

	/*while (true) {
	 	int x,y; cin>>x>>y;
	 	cout<<getv(x,y)<<endl;
	}*/

	ll ans = 0;
	rep(i,1,n) {
		ll cur;
		cur = getv(i,i); ans += (cur)*(cur);
		
		if (i < n) {
			cur = getv(i,i+1); ans += cur * (cur + 1);
		}
	}

	cout<<ans<<endl;
}

int main() {
	ios::sync_with_stdio(false);
	pp[0] = 1; pip[0] = 1;
	repe(j,1,maxn) {
		pp[j] = (pp[j-1] * p)%md;
		pip[j] = (pip[j-1] * pi)%md;
		//cout<<((pp[j]*pip[j])%md)<<endl;
	}

	int t; cin>>t; while (t--) solve();

}
