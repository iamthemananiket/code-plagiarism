#include <bits/stdc++.h>
using namespace std;
#define long long long
int rint() {int ret;scanf("%d", &ret);return ret;}
int rlong() {long ret;scanf("%lld", &ret);return ret;}

int a[200][200], f[200][200];
int dp[200];
const int INF = 1000000;

int main()
{
#if _DEBUG
    freopen("input.txt", "r", stdin);
#endif

	for (int tt = rint(); tt > 0; tt--)
	{
		memset (a, 0, sizeof a);
		memset (f, 0, sizeof f);
		memset (dp, 0, sizeof dp);

		int n = rint();
		int m = rint();
		int q = rint();
        for (; m > 0; m--)
        {
            int u = rint() - 1;
            int v = rint() - 1;
            f[u][v] = f[v][u] = 1;
        }

        for (int k = 0; k < n; k++)
        {
            f[k][k] = 1;
            for (int i = 0; i < n; i++)
                for (int j = 0; j < n; j++)
                    if (f[i][k] && f[k][j])
                        f[i][j] = true;
        }

        for (int i = 0; i < n; i++)
        {
            int last = -1;
            for (int j = n - 1; j >= 0; j--)
            {
                if (f[i][j])
                    last = j;
                a[i][j] = last;
            }
        }

        int p = 0;
        for (; q > 0; q--)
        {
			int v = rint() - 1;
            for (int i = n - 1; i >= 0; i--)
                if (dp[i] < INF)
                {
                    int o = dp[i];
                    dp[i] = INF;
                    if (a[v][i] != -1)
                        dp[a[v][i]] = min(dp[a[v][i]], o + 1);
                    if (i <= v)
                        dp[v] = min(dp[v], o);
                }
        }

        int ans = INF;
		for (int i = 0; i < n; i++)
			ans = min(ans, dp[i]);
        printf("%d\n", ans < INF ? ans : -1);
	}

    return 0;
}