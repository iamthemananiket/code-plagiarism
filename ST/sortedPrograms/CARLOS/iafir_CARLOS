#include <bits/stdc++.h>
using namespace std;

int t, n, k, m, a[200005];
bool b[202][202];
int dp[200005][202];

int main() {
	scanf("%d", &t);
	while(t--) {
		scanf("%d%d%d", &m, &k, &n);
		memset(b, false, sizeof b);
		while(k--) {
			int x, y;
			scanf("%d%d",  &x, &y);
			x--;
			y--;
			b[x][y] = true;
			b[y][x] = true;
		}
		for(int i = 0; i<n; i++) {
			scanf("%d", a+i);
			a[i]--;
		}
		for(int i = 0; i<m; i++)
			b[i][i] = true;
		for(int i = 0; i<m; i++)
			for(int j = 0; j<m; j++)
				for(int k = 0; k<m; k++) {
					b[j][k] |= b[j][i] & b[i][k];
				}
		dp[0][0] = n+1;
		for(int i = 0; i<a[0]; i++) {
			if(b[a[0]][i])
				dp[0][i] = 1;
			dp[0][i+1] = dp[0][i];
		}
		for(int j = a[0]; j<m; j++)
			dp[0][j] = 0;
		for(int i =1; i<n; i++) {
			dp[i][0] = n+1;
			for(int j = 0; j < m; j++) {
				if(a[i] == j)
					dp[i][j] = min(dp[i-1][j], dp[i][j]);
				else
					if(b[a[i]][j])
						dp[i][j] = min(dp[i-1][j] + 1, dp[i][j]);
				dp[i][j+1] = dp[i][j];
			}
		}
		printf("%d\n", (dp[n-1][m-1] > n) ? -1 : dp[n-1][m-1]);
	}
	return 0;
}