/*********************************************************************\
   |--\        ---       /\        |-----------| -----   /-------|    |
   |   \        |       /  \       |               |    /             |
   |    \       |      /    \      |               |   |              |
   |     \      |     /      \     |               |   |----|         |
   |      \     |    / ------ \    |-------|       |        |-----|   |
   |       \    |   /          \   |               |              |   |
   |        \   |  /            \  |               |              /   |
  ---        -------            ------           ----- |---------/    |
                                                                      |
    codeforces = nfssdq  ||  topcoder = nafis007                      |
    mail = nafis_sadique@yahoo.com || nfssdq@gmail.com                |
    IIT,Jahangirnagar University(41)                                  |
                                                                      |
**********************************************************************/

#include <bits/stdc++.h>

using namespace std;

#define xx         first
#define yy         second
#define pb         push_back
#define mp         make_pair
#define LL         long long
#define inf        INT_MAX/3
#define mod        1000000007ll
#define PI         acos(-1.0)
#define linf       (1ll<<60)-1
#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     ((A).begin(), (A).end())
#define set0(ar)   memset(ar,0,sizeof ar)
#define vsort(v)   sort(v.begin(),v.end())
#define setinf(ar) memset(ar,126,sizeof ar)

//cout << fixed << setprecision(20) << p << endl;

template <class T> inline T bigmod(T p,T e,T M){
    LL ret = 1;
    for(; e > 0; e >>= 1){
        if(e & 1) ret = (ret * p) % M;
        p = (p * p) % M;
    } return (T)ret;
}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}

string s[10];
int fl[10], n;
LL val[10], dp[300][19][10][2][10][82];
LL go(int bp, int d, int c, int f47, int ld, int cs){
//    cout << bp << " " << d << " " << c << " " << ld << " " << cs << endl;
    if(d < 0){
        if(cs == 4 && ld == 7) f47 = 1;
        return f47 && (bp == 0);
    }
    if(c == n){
        if(ld == 7 && (cs % 10) == 4) f47 = 1;
        return go(bp, d - 1, 0, f47, cs%10, cs/10);
    }

    LL &ret = dp[bp][d][c][f47][ld][cs];
    if(ret != -1) return ret;
    ret = 0;

    REP(i, 10){


        int nbp = bp;
        if(fl[c] == 0 && (bp & 1<<c) && i < s[c][d]-'0') nbp ^= 1<<c;
        else if(fl[c] && (bp & 1<<c) && i > s[c][d]-'0') nbp ^= 1<<c;
        else if(fl[c] == 0 && i > s[c][d]-'0') nbp |= 1<<c;
        else if(fl[c] && i < s[c][d]-'0') nbp |= 1<<c;

        ret = (ret + go(nbp, d, c + 1, f47, ld, cs + i)) % mod;
    }

    return ret;
}
int main() {
    ios_base::sync_with_stdio(0); cin.tie(0);
    cin >> n;
    REP(i, n){
        cin >> fl[i] >> val[i];
        LL p = val[i];
        REP(j, 18){
            s[i] += (p%10) + '0';
            p /= 10;
        }
        reverse(s[i].begin(), s[i].end());
    }

    memset(dp, -1, sizeof dp);

    cout << go(0, 17, 0, 0, 0, 0) << endl;
}
