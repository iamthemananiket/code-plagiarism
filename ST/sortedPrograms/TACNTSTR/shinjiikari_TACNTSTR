#include <stdio.h>
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pdd pair<double,double>
#define FILL(a,x) memset(a,x,sizeof(a))
#define foreach( gg,ii ) for( typeof(gg.begin()) ii=gg.begin();ii!=gg.end();ii++)
#define mp make_pair
#define pb push_back
#define X first
#define Y second
#define sz(a) int((a).size())
#define N 100010
#define MAX 30
#define mod 1000000007
#define REP(i,a) for(int i=0;i<a;++i)
#define REPP(i,a,b) for(int i=a;i<b;++i)
#define all(a) a.begin(),a.end()
const ll INF = 1e18+1;

char s[N];
ll back[N],n;

ll power(ll a, ll b, ll m)
{
	ll ans=1;
	while(b)
	{
		if (b%2) ans*=a;
		b/=2;
		a*=a;
		if (a>=m) a%=m;
		if (ans>=m) ans%=m;
	}
	return ans;
}

int main()
{
	ll t,ans;
	scanf("%s",s);
	n=strlen(s);
	for(int i=n-1;i>=0;i--)
		back[i]=(('Z'-s[i])*power(26,i,mod))%mod;
	for(int i=n-2;i>=0;i--)
		back[i]=(back[i]+back[i+1])%mod;
	ans=0;
	REP(i,n-1)
	{
		ans+=(('Z'-s[i])*((power(power(26,i+1,mod),mod-2,mod)*(back[i+1]))%mod))%mod;
		//printf("%lld\n",ans);
		assert(ans>=0);
	}
	REP(i,n) ans+=('Z'-s[i]);
	ans%=mod;
	printf("%lld\n",ans);
return 0;
}
