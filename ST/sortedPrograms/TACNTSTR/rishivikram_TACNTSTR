#include<bits/stdc++.h>

using namespace std;

#define ff first
#define ss second
#define pb push_back
#define mp make_pair
#define all(x) x.begin(),x.end()
#define sz(x) ((int)x.size())
#define eps 1e-9
#define fast_cin ios_base::sync_with_stdio(false)

const int MOD = 1e9+7;

typedef long long ll;
typedef pair<int,int> pii;

ll POWER[65];
ll power(ll a, ll b) {ll ret=1;while(b) {if(b&1) ret*=a;a*=a;if(ret>=MOD) ret%=MOD;if(a>=MOD) a%=MOD;b>>=1;}return ret;}
ll inv(ll x) {return power(x,MOD-2);}

void precompute() {
	POWER[0]=1;
	for(int i=1;i<63;i++) POWER[i]=POWER[i-1]<<1LL;
}
int len;
const int MAXN = 1e5+5;
ll dp[2][2][MAXN];
char str[MAXN];
ll go(int idx, bool t1, bool t2) {
	if(idx==len+1 and t2) {
		if(t1) return 0;
		return 1;
	}
	else if(idx==len+1) return 0;
	if(dp[t1][t2][idx]!=-1) return dp[t1][t2][idx];
	ll ret=0;
	int start=0;
	if(t1) start=str[idx]-'A';
	if(start<str[idx]-'A') ret+=go(idx+1,t1,false);
	else if(start==str[idx]-'A') ret+=go(idx+1,t1,t2?true:false);
	for(int i=start+1;i<26;i++) {
		if(i<str[idx]-'A') ret+=go(idx+1,false,false);
		else if(i==str[idx]-'A') ret+=go(idx+1,false,t2?true:false);
		else ret+=go(idx+1,false,true);
		if(ret>=MOD) ret-=MOD;
	}
	return dp[t1][t2][idx]=ret;
}
int main() {
	// freopen("TASK.in","r",stdin);freopen("TASK.out","w",stdout);
	precompute();
	scanf("%s",str+1);
	len=strlen(str+1);
	memset(dp,-1,sizeof(dp));
	cout<<go(1, true, true)<<endl;
	return 0;
}
