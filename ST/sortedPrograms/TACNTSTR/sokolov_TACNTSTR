#pragma comment(linker, "/STACK:500000000")
#define _CRT_SECURE_NO_WARNINGS
#include <algorithm>
#include <assert.h>
#include <bitset>
#include <functional>
#include <iostream>
#include <list>
#include <map>
#include <math.h>
#include <set>
#include <stack>
#include <stdio.h>
#include <stdlib.h>
#include <string>
#include <string.h>
#include <time.h>
#include <queue>
#include <unordered_map>
#include <unordered_set>
#include <utility>
#include <vector>
using namespace std;

#define y0 y0ChloeGraceMoretz
#define y1 y1ChloeGraceMoretz
typedef long long ll;
typedef unsigned long long ull;
int nextInt() { int n; scanf("%d", &n); return n; }
ll nextLong() { ll n; scanf("%lld", &n); return n; }
const double PI = acos(-1.0);
const double EPS = 1e-9;
const int INF = (int)2e9;
const int MOD = (int)1e9 + 7;

int binpow(int a, int n) {
	int res = 1;
	while (n) {
		if (n % 2 != 0) {
			res = ((ll)res * a) % MOD;
		}
		a = ((ll)a * a) % MOD;
		n >>= 1;
	}
	return res;
}

char s[(int)1e5 + 9];
int a[(int)1e5 + 9];

int main() {
	//freopen("in.txt", "rt", stdin);
	//freopen("out.txt", "wt", stdout);
	const int divide26 = binpow(26, MOD - 2);
	scanf("%s", s + 1);
	int n = strlen(s + 1);
	int res = 0;
	for (int i = 1; i <= n; ++i) {
		a[i] = (int) ('Z' - s[i]);
		res += a[i];
	}
	int sum = 0;
	int cur = 1;
	for (int i = 2; i <= n; ++i) {
		sum = (sum + (ll)a[i] * cur) % MOD;
		cur = ((ll)cur * 26) % MOD;
	}
	for (int i = 1; i < n; ++i) {
		res = (res + (ll)a[i] * sum) % MOD;
		sum = (sum - a[i + 1] + MOD) % MOD;
		sum = ((ll)sum * divide26) % MOD;
	}
	printf("%d\n", res);
	return 0;
}