#include <bits/stdc++.h>
 
#define pb push_back
#define f first
#define s second
#define mp make_pair
#define sz(a) int((a).size())
#ifdef _WIN32
#  define I64 "%I64d"
#else
#  define I64 "%lld"
#endif
#define fname "."
#define pi pair < int, int >
#define pp pop_back
 
typedef long long ll;
typedef unsigned long long ull;
 
const int MAX_N = (int)2e5 + 123;
const double eps = 1e-9;
const int inf = (int)1e9 + 123;
 
using namespace std;
 
vector < int > g[MAX_N];
int n, m, a[MAX_N];
int cnt[10 * MAX_N];
ll ans[MAX_N];
 
bool u[MAX_N];
vector < int > st;
 
void dfs(int v) {
	st.pb(v);
	cnt[a[v]]++;
	u[v] = 1;
	for (auto to : g[v])
		if (!u[to])
			dfs(to);
}
 
ll coef[MAX_N];
int for_time[10 * MAX_N];
 
int used[MAX_N], timer;
map < int, int > mem;
 
void go(int v) {
	mem[a[v]]++;
	used[v] = timer;
	for (auto to : g[v])
		if (used[to] != timer)
			go(to);
}
 
int main() {
	#ifdef Nick
	freopen("check.in", "r", stdin);
	freopen("fast.out", "w", stdout);
	#endif
	scanf("%d%d", &n, &m);
	for (int i = 1; i <= n; i++)
		scanf("%d", &a[i]);
	for (int i = 1, u, v; i <= m; i++) {
		scanf("%d%d", &u, &v);
		g[u].pb(v), g[v].pb(u);
	}
	ll add_val = 0;
	for (int i = 1; i <= n; i++) 
		if (!u[i]) {
			st.clear();
			dfs(i);
//			assert(sz(st) < 60);
			for (auto j : st)
				for_time[a[j]]++;
			ll val = 0;
			for (auto j : st) {
				val += for_time[a[j]] * 1ll * for_time[a[j]];
				for_time[a[j]] = 0;
			}
			for (auto j : st)
				coef[j] = val;
			add_val += coef[i];
		}
	for (int i = 1; i <= n; i++) {
		used[i] = ++timer;
		ans[i] = add_val - coef[i] + 1;
		for (auto j : g[i])
			if (used[j] != timer) {
				mem.clear();
				go(j);
				for (auto h : mem)
					ans[i] += h.s * 1ll * h.s;
			}
	}
	ll all = 0;		
	for (int i = 1; i <= (int)1e6; i++)
		all += cnt[i] * 1ll * cnt[i];
	for (int i = 1; i <= n; i++) {
		assert((all - ans[i]) % 2 == 0);
		cout << (all - ans[i]) / 2 << "\n";
	}
	return 0;
}
 