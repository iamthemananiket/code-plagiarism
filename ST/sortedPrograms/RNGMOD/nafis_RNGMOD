/*********************************************************************\
   |--\        ---       /\        |-----------| -----   /-------|    |
   |   \        |       /  \       |               |    /             |
   |    \       |      /    \      |               |   |              |
   |     \      |     /      \     |               |   |----|         |
   |      \     |    / ------ \    |-------|       |        |-----|   |
   |       \    |   /          \   |               |              |   |
   |        \   |  /            \  |               |              /   |
  ---        -------            ------           ----- |---------/    |
                                                                      |
    codeforces = nfssdq  ||  topcoder = nafis007                      |
    mail = nafis_sadique@yahoo.com || nfssdq@gmail.com                |
    IIT,Jahangirnagar University(41)                                  |
                                                                      |
**********************************************************************/

#include <bits/stdc++.h>
using namespace std;

#define xx         first
#define yy         second
#define pb         push_back
#define mp         make_pair
#define LL         long long
#define inf        INT_MAX/3
#define mod        1000000009ll
#define PI         acos(-1.0)
#define linf       (1ll<<60)-1
#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     ((A).begin(), (A).end())
#define set0(ar)   memset(ar,0,sizeof ar)
#define vsort(v)   sort(v.begin(),v.end())
#define setinf(ar) memset(ar,126,sizeof ar)

//cout << fixed << setprecision(20) << p << endl;

template <class T> inline T bigmod(T p,T e,T M){
    LL ret = 1;
    for(; e > 0; e >>= 1){
        if(e & 1) ret = (ret * p) % M;
        p = (p * p) % M;
    } return (T)ret;
}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}

int seg[400001];
void insert(int idx, int s, int e, int p, int v){
    if(s == e){
        seg[idx] = v;
        return;
    }
    int mid = (s + e) / 2;
    if(p <= mid) insert(idx * 2 + 1, s, mid, p, v);
    else insert(idx * 2 + 2, mid + 1, e, p, v);
    seg[idx] = max(seg[idx * 2 + 1], seg[idx * 2 + 2]);
}
int query(int idx, int s, int e, int st, int ed){
    if(s == st && e == ed) return seg[idx];
    int mid = (s + e) / 2;
    if(ed <= mid) return query(idx * 2 + 1, s, mid, st, ed);
    else if(st > mid) return query(idx * 2 + 2, mid + 1, e, st, ed);
    return max(query(idx * 2 + 1, s, mid, st, mid), query(idx * 2 + 2, mid + 1, e, mid + 1, ed));
}

vector < int > vc[1000001], vp;
int ar[100001], res[100001];
pair < pair < int, int >, int > pp[100001];

int main() {
    ios_base::sync_with_stdio(0); cin.tie(0);
    int n, m, k; cin >> n >> m >> k;
    FOR(i, 1, n+1){
        cin >> ar[i];
        ar[i] = (ar[i-1] + ar[i]) % k;
    }
    REP(i, m){
        int x, y; cin >> x >> y;
        x--;
        pp[i] = mp(mp(y, x), i);
    }
    sort(pp, pp + m);

    int rgt = 0;
    REP(i, m){
        for(int j = rgt; j <= pp[i].xx.xx; j++){
            vc[ar[j]].pb(j);
            if(vc[ar[j]].size() == 100) vp.pb(ar[j]);
            if(vc[ar[j]].size() < 100){
                for(int l = 0; l < vc[ar[j]].size(); l++){
//                    cout << vc[ar[j]][l] << " " << j << endl;
                    insert(0, 0, n, vc[ar[j]][l], j-vc[ar[j]][l]);
                }
            }
        }
        rgt = pp[i].xx.xx + 1;
        res[pp[i].yy] = query(0, 0, n, pp[i].xx.yy, pp[i].xx.xx);
//        cout << pp[i].xx.yy << " " << pp[i].xx.xx << " " << pp[i].yy << endl;
        for(int j = 0; j < vp.size(); j++){
            int lb = lower_bound(vc[vp[j]].begin(), vc[vp[j]].end(), pp[i].xx.yy) - vc[vp[j]].begin();
            if(lb >= vc[vp[j]].size()) continue;
            res[pp[i].yy] = max(res[pp[i].yy], vc[vp[j]].back() - vc[vp[j]][lb]);
        }
    }

    REP(i, m) cout << res[i] << "\n";

}
