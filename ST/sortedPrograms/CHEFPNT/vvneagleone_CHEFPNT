#include<cstdio>
#include<iostream>
#include<algorithm>
#include<cmath>
#include<string>
#include<cstring>
#include<vector>
#include<utility>
#include<queue>
#include<set>
#include<map>
using namespace std;
typedef long long LL;
#define MOD 1000000007LL

#define gx getchar_unlocked
#define px putchar_unlocked
#define ps putchar_unlocked(' ')
#define pn putchar_unlocked('\n')

void scan(int &n){int sign=1;n=0;char c=gx();while(c<'0'||c>'9'){if(c=='-')sign=-1;c=gx();}while(c>='0'&&c<='9')n=(n<<3)+(n<<1)+c-'0',c=gx();n=n*sign;}
void lscan(LL &n){int sign=1;n=0;char c=gx();while(c<'0'||c>'9'){if(c=='-')sign=-1;c=gx();}while(c>='0'&&c<='9')n=(n<<3)+(n<<1)+c-'0',c=gx();n=n*(LL)(sign);}
int sscan(char a[]){char c=gx();while(c==' '||c=='\n')c=gx();int i=0;while(c!='\n')a[i++]=c,c=gx();a[i]=0;return i;}
int wscan(char a[]){char c=gx();while(c==' '||c=='\n')c=gx();int i=0;while(c!='\n'&&c!=' ')a[i++]=c,c=gx();a[i]=0;return i;}
void print(int n){if(n<0){n=-n;px('-');}int i=10;char o[10];do{o[--i]=(n%10)+'0';n/=10;}while(n);do{px(o[i]);}while(++i<10);}
void lprint(LL n){if(n<0LL){n=-n;px('-');}int i=21;char o[21];do{o[--i]=(n%10LL)+'0';n/=10LL;}while(n);do{px(o[i]);}while(++i<21);}
void sprint(const char*a){const char*p=a;while(*p)px(*p++);}

int a[102][102], b[102][102], c[102][102], ll[102][102], rr[102][102], uu[102][102], dd[102][102];
vector< pair< int, pair<int,int> > > ans1;
vector< pair< int, int > > ans2, ans3;

int main() {
    int n, m, k, i, j;
    scan(n);
    scan(m);
    for( i = 1; i <= n; ++i ) {
        for( j = 1; j <= m; ++j ) {
            a[i][j] = b[i][j] = c[i][j] = 0;
        }
    }
    scan(k);
    while(k--) {
        scan(i); scan(j);
        a[i][j] = b[i][j] = c[i][j] = 1;
    }
    
    int maxi, maxj, orx, maxx = 1;
    while(maxx) {
        for( i = 1; i <= n; ++i ) {
            ll[i][1] = ( a[i][1] == 0 ) ? ( 1 ) : ( 0 );
            for( j = 2; j <= m; ++j ) {
                if( a[i][j] ) ll[i][j] = 0;
                else ll[i][j] = ll[i][j-1] + 1;
            }
            rr[i][m] = ( a[i][m] == 0 ) ? ( 1 ) : ( 0 );
            for( j = m-1; j > 0; --j ) {
                if( a[i][j] ) rr[i][j] = 0;
                else rr[i][j] = rr[i][j+1] + 1;
            }
        }
        
        for( j = 1; j <= m; ++j ) {
            uu[1][j] = ( a[1][j] == 0 ) ? ( 1 ) : ( 0 );
            for( i = 2; i <= n; ++i ) {
                if( a[i][j] ) uu[i][j] = 0;
                else uu[i][j] = uu[i-1][j] + 1;
            }
            dd[n][j] = ( a[n][j] == 0 ) ? ( 1 ) : ( 0 );
            for( i = n-1; i > 0; --i ) {
                if( a[i][j] ) dd[i][j] = 0;
                else dd[i][j] = dd[i+1][j] + 1;
            }
        }
        
        /*for( i = 1; i <= n; ++i ) {
            for( j = 1; j <= m; ++j ) {
                cout << a[i][j];
            }
            cout << endl;
        }
        cout << endl;
        for( i = 1; i <= n; ++i ) {
            for( j = 1; j <= m; ++j ) {
                cout << ll[i][j];
            }
            cout << endl;
        }
        cout << endl;
        for( i = 1; i <= n; ++i ) {
            for( j = 1; j <= m; ++j ) {
                cout << rr[i][j];
            }
            cout << endl;
        }
        cout << endl;
        for( i = 1; i <= n; ++i ) {
            for( j = 1; j <= m; ++j ) {
                cout << uu[i][j];
            }
            cout << endl;
        }
        cout << endl;
        for( i = 1; i <= n; ++i ) {
            for( j = 1; j <= m; ++j ) {
                cout << dd[i][j];
            }
            cout << endl;
        }
        cout << endl;*/
        
        maxx = 0; maxi = 0; maxj = 0; orx = 0;
        for( i = 1; i <= n; ++i ) {
            for( j = 1; j <= m; ++j ) {
                if( ll[i][j] + rr[i][j] > maxx ) {
                    maxx = ll[i][j] + rr[i][j];
                    maxi = i;
                    maxj = j;
                    orx = 0;
                }
                if( uu[i][j] + dd[i][j] > maxx ) {
                    maxx = uu[i][j] + dd[i][j];
                    maxi = i;
                    maxj = j;
                    orx = 1;
                }
            }
        }
        
        if( maxx != 0 ) {
            ans1.push_back( make_pair( orx, make_pair( maxi , maxj ) ) );
            if( orx == 0 ) {
                i = maxi;
                for( j = maxj; j >= 0; --j ) {
                    if( a[i][j] ) break;
                    else a[i][j] = 1;
                }
                for( j = maxj+1; j <= m; ++j ) {
                    if( a[i][j] ) break;
                    else a[i][j] = 1;
                }
            }
            else {
                j = maxj;
                for( i = maxi; i >= 0; --i ) {
                    if( a[i][j] ) break;
                    else a[i][j] = 1;
                }
                for( i = maxi+1; i <= n; ++i ) {
                    if( a[i][j] ) break;
                    else a[i][j] = 1;
                }
            }
        }
    }
    
    maxx = 1;
    while(maxx) {
        for( i = 1; i <= n; ++i ) {
            ll[i][1] = ( b[i][1] == 0 ) ? ( 1 ) : ( 0 );
            for( j = 2; j <= m; ++j ) {
                if( b[i][j] ) ll[i][j] = 0;
                else ll[i][j] = ll[i][j-1] + 1;
            }
            rr[i][m] = ( b[i][m] == 0 ) ? ( 1 ) : ( 0 );
            for( j = m-1; j > 0; --j ) {
                if( b[i][j] ) rr[i][j] = 0;
                else rr[i][j] = rr[i][j+1] + 1;
            }
        }
        
        maxx = 0; maxi = 0; maxj = 0; orx = 0;
        for( i = 1; i <= n; ++i ) {
            for( j = 1; j <= m; ++j ) {
                if( ll[i][j] + rr[i][j] > maxx ) {
                    maxx = ll[i][j] + rr[i][j];
                    maxi = i;
                    maxj = j;
                }
            }
        }
        
        if( maxx != 0 ) {
            ans2.push_back( make_pair( maxi , maxj ) );
            i = maxi;
            for( j = maxj; j >= 0; --j ) {
               if( b[i][j] ) break;
               else b[i][j] = 1;
            }
            for( j = maxj+1; j <= m; ++j ) {
                if( b[i][j] ) break;
                else b[i][j] = 1;
            }
        }
    }
    
    maxx = 1;
    while(maxx) {
        for( j = 1; j <= m; ++j ) {
            uu[1][j] = ( c[1][j] == 0 ) ? ( 1 ) : ( 0 );
            for( i = 2; i <= n; ++i ) {
                if( c[i][j] ) uu[i][j] = 0;
                else uu[i][j] = uu[i-1][j] + 1;
            }
            dd[n][j] = ( c[n][j] == 0 ) ? ( 1 ) : ( 0 );
            for( i = n-1; i > 0; --i ) {
                if( c[i][j] ) dd[i][j] = 0;
                else dd[i][j] = dd[i+1][j] + 1;
            }
        }
        
        maxx = 0; maxi = 0; maxj = 0;
        for( i = 1; i <= n; ++i ) {
            for( j = 1; j <= m; ++j ) {
                if( uu[i][j] + dd[i][j] > maxx ) {
                    maxx = uu[i][j] + dd[i][j];
                    maxi = i;
                    maxj = j;
                }
            }
        }
        
        if( maxx != 0 ) {
            ans3.push_back( make_pair( maxi , maxj ) );
            j = maxj;
            for( i = maxi; i >= 0; --i ) {
                if( c[i][j] ) break;
                else c[i][j] = 1;
            }
            for( i = maxi+1; i <= n; ++i ) {
                if( c[i][j] ) break;
                else c[i][j] = 1;
            }
        }
    }
    
    if( ans1.size() < ans2.size() && ans1.size() < ans3.size() ) {
        print( ans1.size() ); pn;
        for( i = 0; i < ans1.size(); ++i ) {
            print( ans1[i].second.first ); ps; print( ans1[i].second.second ); ps;
            print( ans1[i].first ); pn;
        }
    }
    else if( ans2.size() < ans3.size() ) {
        print( ans2.size() ); pn;
        for( i = 0; i < ans2.size(); ++i ) {
            print( ans2[i].first ); ps; print( ans2[i].second ); ps;
            print( 0 ); pn;
        }
    }
    else {
        print( ans3.size() ); pn;
        for( i = 0; i < ans3.size(); ++i ) {
            print( ans3[i].first ); ps; print( ans3[i].second ); ps;
            print( 1 ); pn;
        }
    }
	return 0;
}