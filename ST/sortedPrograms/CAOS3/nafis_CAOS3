/*********************************************************************\
   |--\        ---       /\        |-----------| -----   /-------|    |
   |   \        |       /  \       |               |    /             |
   |    \       |      /    \      |               |   |              |
   |     \      |     /      \     |               |   |----|         |
   |      \     |    / ------ \    |-------|       |        |-----|   |
   |       \    |   /          \   |               |              |   |
   |        \   |  /            \  |               |              /   |
  ---        -------            ------           ----- |---------/    |
                                                                      |
    codeforces = nfssdq  ||  topcoder = nafis007                      |
    mail = nafis_sadique@yahoo.com || nfssdq@gmail.com                |
    IIT,Jahangirnagar University(41)                                  |
                                                                      |
**********************************************************************/

#include <bits/stdc++.h>
using namespace std;

#define xx         first
#define yy         second
#define pb         push_back
#define mp         make_pair
#define LL         long long
#define inf        INT_MAX/3
#define mod        1000000007ll
#define PI         2.0*acos(0.0)
#define linf       (1ll<<62)-1
#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     (A).begin(), (A).end()
#define set0(ar)   memset(ar,0,sizeof ar)
#define vsort(v)   sort(v.begin(),v.end())
#define setinf(ar) memset(ar,126,sizeof ar)

//cout << fixed << setprecision(20) << p << endl;

template <class T> inline T bigmod(T p,T e,T M){
    if(e==0)return 1;
    if(e%2==0){LL t=bigmod(p,e/2,M);return (T)((t*t)%M);}
    return (T)(((LL)bigmod(p,e-1,M)*(LL)(p))%M);
}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}

int dp[21][21][21][21], grid[21][21];

int go(int x1, int x2, int y1, int y2){
    if(x1 > x2 || y1 > y2)return 0;
    int &ret = dp[x1][y1][x2][y2];
    if(ret != -1)return ret;
    ret = 0;
    set < int > ss;
    for(int i = x1; i <= x2; i++){
        for(int j = y1; j <= y2; j++){
            if(grid[i][j] != 1)continue;
            int a = go(x1, i - 1, y1, j -1);
            a ^= go(x1, i - 1, j + 1, y2);
            a ^= go(i + 1, x2, y1, j - 1);
            a ^= go(i + 1, x2, j + 1, y2);
            ss.insert(a);
        }
    }
    for(set < int > :: iterator it = ss.begin(); it != ss.end(); it++){
        if(ret != *it)break;
        ret++;
    }
    return ret;
}
char pp[21][21];
main(){
    ios_base::sync_with_stdio(0); cin.tie(0);
    LL a,b,c,d,e,f,g,h = 0,x,y,z;
    cin >> a;
    while(a--){
        cin >> b >> c;
        REP(i, b) cin >> pp[i];
        set0(grid);
        memset(dp, -1, sizeof dp);
        REP(i, b){
            REP(j, c){
                d = 0;
                if(pp[i][j] == '#')d = 1;
                if(i < 2 || pp[i - 1][j] == '#' || pp[i - 2][j] == '#')d = 1;
                if(j < 2 || pp[i][j - 1] == '#' || pp[i][j - 2] == '#')d = 1;
                if(i > b - 3 || pp[i + 1][j] == '#' || pp[i + 2][j] == '#')d = 1;
                if(j > c - 3 || pp[i][j + 1] == '#' || pp[i][j + 2] == '#')d = 1;
                if(d == 0)grid[i][j] = 1;
            }
        }
        d = go(0, b - 1, 0, c - 1);
        if(d == 0)cout << "Kirito" << endl;
        else cout << "Asuna" << endl;
    }

}
