#include <bits/stdc++.h>
// iostream is too mainstream
#include <cstdio>
// bitch please
#include <iostream>
#include <algorithm>
#include <cstdlib>
#include <vector>
#include <set>
#include <map>
#include <queue>
#include <stack>
#include <list>
#include <cmath>
#include <iomanip>
#include <time.h>
#define dibs reserve
#define OVER9000 1234567890
#define ALL_THE(CAKE,LIE) for(auto LIE =CAKE.begin(); LIE != CAKE.end(); LIE++)
#define tisic 47
#define soclose 1e-8
#define chocolate win
// so much chocolate
#define patkan 9
#define ff first
#define ss second
#define abs(x) ((x < 0)?-(x):x)
#define uint unsigned int
#define dbl long double
#define pi 3.14159265358979323846
using namespace std;
// mylittledoge

#ifdef DONLINE_JUDGE
	// palindromic tree is better than splay tree!
	#define lld I64d
#endif

int main() {
	cin.sync_with_stdio(0);
	cin.tie(0);
	cout << fixed << setprecision(10);
	int T;
	cin >> T;
	for(int t =0; t < T; t++) {
		int N,S;
		cin >> N >> S;
		vector<int> A(N),B(N),C(N);
		for(int i =0; i < N; i++) cin >> A[i] >> B[i] >> C[i];
		vector< vector<int> > ans(S+1,vector<int>(200*S+2,0));
		ans[S][100*S] =1;
		int mod =1000000007;
		for(int i =0; i < N; i++) {
			int d =C[i]-B[i];
			for(int j =S; j >= A[i]; j--) for(int k =0; k <= 200*S+1; k++) if(ans[j][k] != 0) {
				if(k == 200*S+1) {
					ans[j-A[i]][200*S+1] +=ans[j][k];
					if(ans[j-A[i]][200*S+1] >= mod) ans[j-A[i]][200*S+1] -=mod;}
				else {
					ans[j-A[i]][min(200*S+1,k+d)] +=ans[j][k];
					if(ans[j-A[i]][min(200*S+1,k+d)] >= mod) ans[j-A[i]][min(200*S+1,k+d)] -=mod;}
				}
			}
		int ansF =0;
		for(int i =100*S+1; i <= 200*S+1; i++) for(int j =0; j <= S; j++) {
			ansF +=ans[j][i];
			if(ansF >= mod) ansF -=mod;}
		cout << ansF << "\n";}
	return 0;}

// look at my code
// my code is amazing
