#include <bits/stdc++.h>
#include <boost/multiprecision/cpp_int.hpp> 
#define gc getchar//_unlocked
#define pc putchar//_unlocked
#define ll long long
void sci(int *x) {register char c = gc();*x = 0;for(; (c<48)||(c>57);c = gc());for(; (c>47)&&(c<58);c = gc())*x = (int)((((*x)<<1) + ((*x)<<3)) + c - 48);}
void scll(ll *x)  {register char c = gc();*x = 0;for(; (c<48)||(c>57);c = gc());for(; (c>47)&&(c<58);c = gc())*x =  (ll)((((*x)<<1) + ((*x)<<3)) + c - 48);}
#define fp(a,b,c) {if(b==0)return 1%c; if(b==1)return a%c; ll ret=fp(a,b/2,c); ret=(ret*ret)%c; if(b&2)ret=(ret*a)%c; return ret;}
#define ld long double
#define pb push_back
#define mp make_pair
#define pp pair<int,int>
#define bigint boost::multiprecision::cpp_int
#define finp ios_base::sync_with_stdio(0);cin.tie(0);
#define bc __builtin_popcount
#define afor(i,a,b) for(int i=a;i<=b;++i)
#define bfor(i,a,b) for(int i=a;i>=b;--i)
#define vi vector<int>
#define vpp vector<pp>
#define vll vector<ll>
char putnb[20];
void putn(ll n) {if(!n)pc('0');if(n<0)pc('-'),n=0-n;int pi=0;while(n)putnb[pi++]=(n%10)+'0',n/=10;while(pi)pc(putnb[--pi]);}
using namespace std;
const ll mod=1e9 +7;
const ll mod2=1999999973;
const int infs=1e9;
const ll inf=1e18;
const int N=100000;

bigint dp[51][51][6005]; //index , area, net profit

ll area[101];
ll pr[101];
int t,n,s;

int b,c;

int main()
{
  finp;
  cin>>t;
  while(t--)
  {
    cin>>n>>s;
    assert(n<=50 && s<=50);
    afor(i,1,n)
    {
      cin>>area[i]>>b>>c;
      pr[i]=c-b;

      afor(j,0,s)afor(k,0,6000)dp[i][j][k]=0;
    }
  dp[0][0][3000]=1;

  afor(i,1,n)
  {
    afor(j,0,s)afor(k,0,6000)dp[i][j][k]=dp[i-1][j][k];

    afor(j,area[i],s)
    {
      afor(k,0,6000)
      {
      	
        
        int curr=k+pr[i];
        
        if(curr<0 || curr>6000)continue;
        dp[i][j][curr]+=dp[i][j-area[i]][k];
        
      }
     
    }
    
  }
  

  bigint ans=0;

  afor(j,0,s)afor(k,3001,6000)ans+=dp[n][j][k];
  cout<<ans<<"\n";

  }
  
return 0;
}