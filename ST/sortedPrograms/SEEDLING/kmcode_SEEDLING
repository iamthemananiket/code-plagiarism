#include<iostream>
#include<cstdio>
#include<cstring>
#include<string>
#include<cctype>
#include<cstdlib>
#include<algorithm>
#include<bitset>
#include<vector>
#include<list>
#include<deque>
#include<queue>
#include<map>
#include<set>
#include<stack>
#include<cmath>
#include<sstream>
#include<fstream>
#include<iomanip>
#include<ctime>
#include<complex>
#include<functional>
#include<climits>
#include<cassert>
#include<iterator>
#include<unordered_set>
#include<unordered_map>
using namespace std;
int t;
int n;
int s;

string pluss(string a, string b, bool flag = false){
	if (!flag){
		reverse(a.begin(), a.end());
		reverse(b.begin(), b.end());
	}
	if (a.size() > b.size()){
		swap(a, b);
	}
	string ans;
	ans.clear();
	long long int want = 0;
	for (int i = 0; i < a.size(); i++){
		long long int val = a[i] - '0';
		val += b[i] - '0';
		val += want;
		want = val / 10LL;
		val %= 10LL;
		ans.push_back(val + '0');
	}
	for (int j = a.size(); j < b.size(); j++){
		long long int val = 0;
		val += b[j] - '0';
		val += want;
		want = val / 10LL;
		val %= 10LL;
		ans.push_back(val + '0');
	}
	while (want){
		ans.push_back(want % 10 + '0');
		want /= 10;
	}
	if (!flag){
		reverse(ans.begin(), ans.end());
	}
	return ans;
}
string mult(string a, string b, bool flag = false){
	if (!flag){
		reverse(a.begin(), a.end());
		reverse(b.begin(), b.end());
	}
	string ans = "0";
	string pas;
	string kari;
	pas.clear();
	for (int i = 0; i < b.size(); i++){
		long long int bb = b[i] - '0';
		long long int tmp = 0;
		kari = pas;
		for (int j = 0; j < a.size(); j++){
			long long int val = (long long int)(a[j] - '0')*bb;
			val += tmp;
			tmp = val / 10LL;
			val %= 10LL;
			kari.push_back(val + '0');
		}
		while (tmp){
			kari.push_back((tmp % 10LL) + '0');
			tmp /= 10LL;
		}
		ans = pluss(ans, kari, true);
		//end
		pas.push_back('0');
	}
	if (!flag){
		reverse(ans.begin(), ans.end());
	}
	return ans;
}

#define MAX 100*100*2+5
const int add = 100 * 100 + 2;
string dp[102][MAX];
int use[102][MAX];
int u_s;
int main(){
	scanf("%d", &t);
	while (t--){
		u_s++;
		scanf("%d%d", &n, &s);
		use[0][add] = u_s;
		dp[0][add] = "1";
		int mint = add;
		int maxt = add;
		for (int i = 0; i < n; i++){
			int a, b, c;
			scanf("%d%d%d", &a, &b, &c);
			if (c > 50){
				return 1;
			}
			for (int j = s-a; j >= 0; j--){
				for (int k = mint; k <= maxt; k++){
					if (use[j][k]==u_s){
						for (int kk = (s - j) / a; kk >= 1; kk--){
							int ar = j + kk*a;
							int sa = k - kk*b + kk*c;
							if (sa < 0){
								return 1;
							}
							if (sa > MAX){
								return 1;
							}
							if (use[ar][sa] != u_s){
								use[ar][sa] = u_s;
								dp[ar][sa] = "0";
								mint = min(mint, sa);
								maxt = max(maxt, sa);
							}
							dp[ar][sa] = pluss(dp[ar][sa],dp[j][k]);
						}
					}
				}
			}
		}
		string ans = "0";
		for (int i = 0; i <= s; i++){
			for (int j = add + 1; j <= maxt; j++){
				if (use[i][j] == u_s){
					ans = pluss(ans,dp[i][j]);
				}
			}
		}
		cout << ans << endl;
	}
	return 0;
}