#include <bits/stdc++.h>
#include <string.h>

#define all(a) (a).begin(), (a).end()
#define sz(a) (int)(a).size()
#define pb push_back
#define mp make_pair

using namespace std;

typedef long long ll;
typedef pair<int, int> pii;
typedef long double ld;
typedef pair<int, ll> data;

const ll inf = 1e18;

int main()
{

    //ifstream cin("input.txt");
    //ofstream cout("output.txt");
    //freopen("input.txt", "r", stdin);

    //ios_base::sync_with_stdio(false);
    //cin.tie(0);

    int tt;
    scanf("%d", &tt);

    while (tt--) {
        int n;
        scanf("%d", &n);
        vector<ll> h(n), m(n);
        for (int i = 0; i < n; ++i) {
            scanf("%lld%lld", &h[i], &m[i]);
        }
        if (n == 1) {
            printf("1\n0 Inf\n");
            continue;
        }
        ll lf = 0, rg = inf;
        for (int i = 0; i < n - 1; ++i) {
            ll a = h[i], b = m[i], c = h[i + 1], d = m[i + 1];
            if (i & 1) {
                swap(a, c);
                swap(b, d);
            }
            if (b == d) {
                if (a < c) {
                    continue;
                } else {
                    rg = -1;
                    break;
                }
            }
            if (b < d) {
                if (a < c) {
                    continue;
                } else {
                    lf = max(lf, (a - c) / (d - b) + 1);
                }
                continue;
            }
            if (c <= a) {
                rg = -1;
                break;
            }
            ll x = (c - a) / (b - d);
            if ((c - a) % (b - d) == 0) {
                --x;
            }
            rg = min(rg, x);
        }
        vector<ll> ans;
        if (lf <= rg) {
            ans.pb(lf), ans.pb(rg);
        }
        lf = 0, rg = inf;
        for (int i = 0; i < n - 1; ++i) {
            ll a = h[i], b = m[i], c = h[i + 1], d = m[i + 1];
            if (!(i & 1)) {
                swap(a, c);
                swap(b, d);
            }
            if (b == d) {
                if (a < c) {
                    continue;
                } else {
                    rg = -1;
                    break;
                }
            }
            if (b < d) {
                if (a < c) {
                    continue;
                } else {
                    lf = max(lf, (a - c) / (d - b) + 1);
                }
                continue;
            }
            if (c <= a) {
                rg = -1;
                break;
            }
            ll x = (c - a) / (b - d);
            if ((c - a) % (b - d) == 0) {
                --x;
            }
            rg = min(rg, x);
        }
        if (lf <= rg) {
            ans.pb(lf), ans.pb(rg);
        }
        if (sz(ans) == 4) {
            if (ans[0] > ans[2]) {
                swap(ans[0], ans[2]);
                swap(ans[1], ans[3]);
            }
            if (ans[2] == ans[1] + 1) {
                ans = {ans[0], ans[3]};
            }
        }
        printf("%d\n", sz(ans) / 2);
        for (int i = 0; i < sz(ans); ++i) {
            if (ans[i] == inf) {
                printf("Inf");
            } else {
                printf("%lld", ans[i]);
            }
            if (i & 1) {
                printf("\n");
            } else {
                printf(" ");
            }
        }
    }

}
