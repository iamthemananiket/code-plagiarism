/*********************************************************************\
   |--\        ---       /\        |-----------| -----   /-------|    |
   |   \        |       /  \       |               |    /             |
   |    \       |      /    \      |               |   |              |
   |     \      |     /      \     |               |   |----|         |
   |      \     |    / ------ \    |-------|       |        |-----|   |
   |       \    |   /          \   |               |              |   |
   |        \   |  /            \  |               |              /   |
  ---        -------            ------           ----- |---------/    |
                                                                      |
    codeforces = nfssdq  ||  topcoder = nafis007                      |
    mail = nafis_sadique@yahoo.com || nfssdq@gmail.com                |
    IIT,Jahangirnagar University(41)                                  |
                                                                      |
**********************************************************************/

#include <bits/stdc++.h>

using namespace std;

#define xx         first
#define yy         second
#define pb         push_back
#define mp         make_pair
#define LL         long long
#define inf        INT_MAX/3
#define mod        1000000007ll
#define PI         acos(-1.0)
#define linf       (1ll<<60)-1
#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     ((A).begin(), (A).end())
#define set0(ar)   memset(ar,0,sizeof ar)
#define vsort(v)   sort(v.begin(),v.end())
#define setinf(ar) memset(ar,126,sizeof ar)

//cout << fixed << setprecision(20) << p << endl;

template <class T> inline T bigmod(T p,T e,T M){
    LL ret = 1;
    for(; e > 0; e >>= 1){
        if(e & 1) ret = (ret * p) % M;
        p = (p * p) % M;
    } return (T)ret;
}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}


int seg[400001][6], fin[100001][6], ar[100001];
void update(int idx, int s, int e, int p){
    if(s == e){
        fin[s][p] += seg[idx][p];
        seg[idx][p] = 0;
        return;
    }
    seg[idx * 2 + 1][p] += seg[idx][p];
    seg[idx * 2 + 2][p] += seg[idx][p];
    seg[idx][p] = 0;
}
void insert(int idx, int s, int e, int st, int ed, int p){
    if(seg[idx][p] != 0) update(idx, s, e, p);
    if(s == st && e == ed){
        seg[idx][p]++;
        return;
    }
    int mid = (s + e) / 2;
    if(ed <= mid) insert(idx * 2 + 1, s, mid, st, ed, p);
    else if(st > mid) insert(idx * 2 + 2, mid + 1, e, st, ed, p);
    else {
        insert(idx * 2 + 1, s, mid, st, mid, p);
        insert(idx * 2 + 2, mid + 1, e, mid + 1, ed, p);
    }
}
void clear(int idx, int s, int e, int p){
    FOR(i, 2, 6) if(seg[idx][i] != 0) update(idx, s, e, i);
    if(s == e){
        FOR(i, 2, 6) fin[s][i] = 0;
        return;
    }
    int mid = (s + e) / 2;
    if(p <= mid)clear(idx * 2 + 1, s, mid, p);
    else clear(idx * 2 + 2, mid + 1, e, p);
}
void go(int idx, int s, int e){
    FOR(i, 2, 6) if(seg[idx][i] != 0) update(idx, s, e, i);
    if(s == e) return;
    int mid = (s + e) / 2;
    go(idx * 2 + 1, s, mid);
    go(idx * 2 + 2, mid + 1, e);
}
int main() {
//    ios_base::sync_with_stdio(0); cin.tie(0);
    int a,b = 0,c,d = 0,e,f = 0,g,h = 0,x,y,z = 0;
    scanf("%d", &a);
    FOR(i, 1, a + 1) scanf("%d", &ar[i]);
    scanf("%d", &b);
    REP(i, b){
        scanf("%d %d %d", &c, &d, &e);
        if(c == 1){
            scanf("%d", &f);
            insert(0, 1, a, d, e, f);
        } else {
            ar[d] = e;
            clear(0, 1, a, d);
        }
    }
    go(0, 1, a);
    FOR(i, 1, a + 1){
        b = ar[i];
        FOR(j, 2, 6){
            c = 0;
            if(fin[i][j] == 0) continue;
            while(b % j == 0){
                c++;
                b /= j;
                if(c == fin[i][j]) break;
            }
        }
        if(i != 1) printf(" ");
        printf("%d", b);
    }
    puts("");
}
