#include <bits/stdc++.h>
 
using namespace std;
 
#define ll long long int
#define pb push_back
#define mp make_pair
#define INF (ll)(1e18)
#define inf 0x7fffffff
#define inff 100000
#define ff first
#define ss second
#define sz(x) ((int) (x).size())
#define fast cin.sync_with_stdio(0);cin.tie(0)
#define rep(i,N) for(int i = 0;i < N;i++)
#define frep(i,a,b) for(int i = a;i <= b;i++)
#define pii pair<int , int>
#define pll pair<ll , ll>
#define vii vector<int>
#define vpii vector< pii >
#define fill(A,v) memset(A,v,sizeof(A))
#define setbits(x) __builtin_popcountll(x)
#define print(A,j,k) for(int ii=j;ii<k;ii++)cout<<A[ii]<<" ";cout<<"\n"
#define all(x) (x).begin(), (x).end()
#define gcd __gcd
#define SQRT 350
#define CASES int t;cin>>t;while(t--)
#define FILE freopen("inp.txt" , "r" , stdin);
#define ld long double

const int MOD = 1e9 + 7;
const int N = 1e6 + 5;

ll dp[10004][12];

int main(int argc, char const *argv[])
{
	fast;

	CASES {

		int n , k;
		cin >> n >> k;

		frep(i , 0 , n)
			frep(j , 0 , k)
				dp[i][j] = 0;

		ll ans = 0;
		dp[0][0] = 1;
		for(int i = 1;i <= n;i++) {

			if (i == n) {
				for(int j = 0;j <= k - 1;j++)
					ans = (ans + dp[i - 1][j]) % MOD;
				continue;
			}

			if (i == 1) {
				dp[i][0] = 1;
				dp[i][1] = 1;
				continue;
			}

			//ith apple is fresh
			for(int j = 0;j < k;j++) {
				dp[i][0] = dp[i][0] + dp[i - 1][j];
				while (dp[i][0] >= MOD)
					dp[i][0] -= MOD;
			}

			//ith apple is rotten
			for(int j = 0;j < k - 1;j++) {
				dp[i][j + 1] = dp[i - 1][j] + dp[i][j + 1];
				while (dp[i][j + 1] >= MOD)
					dp[i][j + 1] -= MOD;
			}

		}

		cout << ans << '\n';

	}

	return 0;
}