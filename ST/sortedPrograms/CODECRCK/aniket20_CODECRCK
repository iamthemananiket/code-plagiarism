#include<bits/stdc++.h>
using namespace std;

// Numeric Constants
#define N 1000000007
#define maxs 100005
#define mins 1005
#define eps 0.000000000001
#define imax 2000000200
#define llmax 1000000002000000000ll
#define pi 3.141592653589793
#define sqr2 1.41421356237309504880168872420969807856967187537L
#define sqr6 2.449489742783178098197284074705891391965947480L

// Others
#define ll long long
#define pb push_back
#define gc getchar_unlocked
#define iosbase ios_base::sync_with_stdio(false)
#define pii pair<int,int>
#define pll pair<ll,ll>
#define ppi pair<pair<int,int>,int>
#define ppl pair<pll,ll>
#define vi vector<int>
#define sc scanf
#define pr printf
#define lld I64d
#define F first
#define S second
#define siter set<int>::iterator
#define p_pq priority_queue
#define ub upper_bound
#define lb lower_bound

long double t1[2][2],a[2][2],t[2][2],b[2][2];
void power(ll b1){
	ll i,j,k;
	while(b1>0){
		if(b1&1){
			for(i=0;i<2;i++){
				for(j=0;j<2;j++){
					t1[i][j]=0;
					for(k=0;k<2;k++){
						t1[i][j]+=t[i][k]*a[k][j];
					}
				}
			}
			for(i=0;i<2;i++){
				for(j=0;j<2;j++){
					t[i][j]=t1[i][j];
					t1[i][j]=0;
				}
			}
		}
		for(i=0;i<2;i++){
			for(j=0;j<2;j++){
				b[i][j]=0;
				for(k=0;k<2;k++){
					b[i][j]+=a[i][k]*a[k][j];
				}
			}
		}
		for(i=0;i<2;i++){
			for(j=0;j<2;j++){
				a[i][j]=b[i][j];
			}
		}
		b1>>=1;
	}
}
int main()
{
	ll i,k,s,pw,x,y,p,l,j;
	sc("%lld %lld %lld",&i,&k,&s);
	sc("%lld %lld",&x,&y);
	long double val1=sqr2+sqr6,den,val,mul;
	long double val2=sqr2-sqr6;
	t[0][0]=t[1][1]=1;
	if(s<0){
		mul=2.0L;
		s=-s;
	}
	else{
		mul=0.5L;
	}
	if(k>=i){
		pw=k-i;
		a[0][0]=val1;
		a[0][1]=val2;
		a[1][0]=val2;
		a[1][1]=-val1;
	}
	else{
		den=-val1*val1-val2*val2;
		pw=i-k;
		a[0][0]=-val1;
		a[0][1]=-val2;
		a[1][0]=-val2;
		a[1][1]=val1;
		for(p=0;p<2;p++){
			for(l=0;l<2;l++){
				a[p][l]/=den;
			}
		}
	}
	if(s>=pw){
		s-=pw;
		for(p=0;p<2;p++){
			for(l=0;l<2;l++){
				a[p][l]*=mul;
			}
		}
	}
	power(pw);
	val=t[0][0]*(x+y)+t[0][1]*(x-y);
	while(s>0){
		if(s&1){
			val=val*mul;
		}
		mul*=mul;
		s>>=1;
	}
	pr("%.15Lf\n",val);
	return 0;
}