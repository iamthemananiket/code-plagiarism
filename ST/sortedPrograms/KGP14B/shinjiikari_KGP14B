#include <stdio.h>
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pdd pair<double,double>
#define FILL(a,x) memset(a,x,sizeof(a))
#define	foreach( gg,ii ) for( typeof(gg.begin()) ii=gg.begin();ii!=gg.end();ii++)
#define	mp make_pair
#define	pb push_back
#define	X first
#define	Y second
#define sz(a) int((a).size())
#define N 1010
#define mod 1000000007
#define REP(i,a) for(int i=0;i<a;++i)
#define REPP(i,a,b) for(int i=a;i<b;++i)
#define all(a) a.begin(),a.end()
const ll INF = 1e18+1;

int LCS[N][N];

int main()
{
	int kase,t,n,m,ans=0,x,y;
	char a[N],b[N];
	scanf("%d",&t);
	kase=t;
	while(t--)
	{
		scanf("%d%d",&n,&m);
		scanf("%s",a);
		scanf("%s",b);
		if (a[0]==b[0]) LCS[0][0]=1;
		else LCS[0][0]=0;
		REPP(i,1,n) if (a[i]==b[0]) LCS[i][0]=1;
		else LCS[i][0]=LCS[i-1][0];
		REPP(j,1,m) if (b[j]==a[0]) LCS[0][j]=1;
		else LCS[0][j]=LCS[0][j-1];
		REPP(i,1,n) REPP(j,1,m)
		{
			if (a[i]==b[j]) LCS[i][j]=LCS[i-1][j-1]+1;
			else LCS[i][j]=max(LCS[i][j-1],LCS[i-1][j]); 
		}
		printf("Case %d: %d\n",kase-t,m+n-LCS[n-1][m-1]);
	}
return 0;
}
