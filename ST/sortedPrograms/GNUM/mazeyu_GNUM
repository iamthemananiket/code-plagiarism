#include<bits/stdc++.h>
#define N 400010
#define M 5000010
#define mod 1000000007
#define INF 2e9
#define ll long long
using namespace std;
unordered_map<int,int>mp;
int a[N],b[N],l,x,j,f[N],g[N],k,tec;
int n,S,T,tot,ln,flag,ans,pre[N],hesh[N],now,flow,cs[N],kt[N],w[N];
int nn,ww[N],i,v[M],ne[M],head[N],flo[M],fro[M],max1;
void add(int x,int y,int f)
{
	v[++ln]=y;ne[ln]=head[x];head[x]=ln;flo[ln]=f;fro[ln]=x;
	v[++ln]=x;ne[ln]=head[y];head[y]=ln;flo[ln]=0;fro[ln]=y;
}
int gcd(int x,int y){return y?gcd(y,x%y):x;}
void sap()
{
	memset(hesh,0,sizeof(hesh));
	memset(cs,0,sizeof(cs));
    hesh[0]=tot;now=S;flow=INF;cs[0]=INF;
    for(i=1;i<=tot;i++)kt[i]=head[i];
    while(cs[S]<=tot)
    {
        flag=0;w[now]=flow;
        for(i=kt[now];i;i=ne[i])
        if(cs[v[i]]+1==cs[now]&&flo[i])
        {
            flow=min(flo[i],flow);kt[now]=i;
            pre[v[i]]=i;now=v[i];flag=1;
            if(now==T)
            {
                ans+=flow;
                for(;now!=S;now=fro[pre[now]])
                {
                    flo[pre[now]]-=flow;
                    flo[pre[now]^1]+=flow;
                }flow=INF;
            }break;
        }if(flag)continue;max1=0;
        for(i=head[now];i;i=ne[i])
            if(flo[i]&&cs[v[i]]<cs[v[max1]])max1=i;
        hesh[cs[now]]--;if(!hesh[cs[now]])return;
        cs[now]=cs[v[max1]]+1;kt[now]=head[now];
        if(cs[now]<tot)hesh[cs[now]]++;
        if(now!=S)now=fro[pre[now]];flow=w[now];
    }
}
int main()
{
	scanf("%d",&tec);
	while(tec--)
	{
		memset(head,0,sizeof(head));ln=1;
		scanf("%d",&n);S=1;T=tot=2;mp.clear();
		for(i=1;i<=n;i++)scanf("%d",&a[i]);
		for(i=1;i<=n;i++)scanf("%d",&b[i]);
		for(i=1;i<=n;i++)
		{
			x=a[i];l=0;
			for(j=2;j*j<=x;j++)
			if(x%j==0)
			{
				f[++l]=j;
				for(;x%j==0;x/=j);
			}
			if(x>1)f[++l]=x;
			for(j=1;j<=l;j++)
			{
				if(!mp[f[j]])mp[f[j]]=++tot;
				g[j]=mp[f[j]];
			}
			for(j=1;j<=n;j++)
			if(b[j]!=a[i]&&gcd(b[j],a[i])!=0)
			{
				tot++;
				if(b[j]>a[i])add(S,tot,1);
				else add(tot,T,1);
				for(k=1;k<=l;k++)
				if(b[j]%f[k]==0)
				{
					if(b[j]>a[i])add(tot,g[k],INF);
					else add(g[k],tot,INF);
				}
			}
		}
		ans=0;sap();
		printf("%d\n",ans);
	}
}