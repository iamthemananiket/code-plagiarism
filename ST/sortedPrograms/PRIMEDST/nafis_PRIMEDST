/********************************************************************************\
   |--\        ---       /\        |-----------| -----       /-------|           |
   |   \        |       /  \       |               |        /                    |
   |    \       |      /    \      |               |       |                     |
   |     \      |     /      \     |               |        \---\                |
   |      \     |    / ------ \    |-------|       |             \---\           |
   |       \    |   /          \   |               |                  |          |
   |        \   |  /            \  |               |                  /          |
  ---        \------            ------           -----     |---------/           |
                                                                                 |
                          _                                                      |
  **copyrighted by nfssdq(R) :) (:                                               |
                          ^                                                      |
    codeforces = nfssdq                                                          |
    topcoder = nafis007                                                          |
    uva = nfssdq                                                                 |
    spoj = nfssdq                                                                |
    usaco = nfssdq1                                                              |
    mail = nafis_sadique@yahoo.com || nfssdq@gmail.com                           |
    IIT,Jahangirnagar University(41)                                             |
    Sorry for badly written code.  :(                                            |
                                                                                 |
*********************************************************************************/

#include <map>
#include <set>
#include <list>
#include <cmath>
#include <ctime>
#include <deque>
#include <queue>
#include <stack>
#include <bitset>
#include <cstdio>
#include <locale>
#include <string>
#include <vector>
#include <cassert>
#include <climits>
#include <complex>
#include <cstdlib>
#include <cstring>
#include <fstream>
#include <iomanip>
#include <numeric>
#include <sstream>
#include <utility>
#include <iostream>
#include <iterator>
#include <typeinfo>
#include <valarray>
#include <algorithm>
#include <functional>
using namespace std;

#define xx         first
#define yy         second
#define pb         push_back
#define mp         make_pair
#define LL         long long
#define inf        INT_MAX/3
#define mod        1000000007ll
#define PI         2.0*acos(0.0)
#define linf       (1ll<<60)-1
#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     ((A).begin(), (A).end())
#define set0(ar)   memset(ar,0,sizeof ar)
#define vsort(v)   sort(v.begin(),v.end())
#define setinf(ar) memset(ar,126,sizeof ar)



template <class T> inline T bigmod(T p,T e,T M){
    LL md=M;
    if( e==0 )return 1;
    if( e%2==0 ){
        LL t = bigmod( p, e/2, M );
        return (T)( ( t*t ) % md );
    }
    LL bm = bigmod( p, e-1, M );
    bm = ( bm * (LL)p )%md;
    return (T)bm;
}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}

vector < int > vc[ 50001 ];
int isp[ 50001 ], gt[ 50001 ];
int pp [ 50001 ], cnt, timer;
int dis[ 50001 ], tim[ 50001 ];
vector < int > seg[ 200001 ], add[ 50001 ];
int tot[ 50001 ], nd;

int sum = 0;

void dfs( int v, int p ){
    dis[ v ] = dis[ p ] + 1;
    tim[ timer ] = v;
    gt[ v ] = timer++;
    pp [ cnt++ ] = v;
    tot[ v ]++;
    for( int i = cnt-2; i >= 0; i-- ){
        int a = dis[ v ] - 2*dis[ pp[ i ] ];
        int b = gt[ pp[ i+1 ] ];
        for( int j = gt[ pp[ i ] ]; j < b; j++ )
            if( isp[ dis[ tim[ j ] ]+a ] == 0 )sum++;
    }
    REP( i, vc[ v ].size() ){
        if( vc[ v ][ i ] == p )continue;
        dfs( vc[ v ][ i ], v );
        tot[ v ] += tot[ vc[ v ][ i ] ];
    }
    cnt--;
}


main(){

    int a,b,c,d,e,f,g,h,x,y,z;
    scanf( "%d", &nd );
    REP( i, nd-1 ){
        scanf( "%d %d", &b, &c );
        vc[ b ].push_back( c );
        vc[ c ].push_back( b );
    }
    isp[ 0 ] = isp[ 1 ] = 1;
    for( int i = 2; i <= 50000; i++ ){
        if( isp[ i ] == 0 ){
            for( int j = i*2; j <= 50000; j+=i )isp[ j ] = 1;
        }
    }
    cnt = sum = 0;
    timer = 0;
    dfs( 1, 0 );
    double v = ( double )nd * (double)( nd-1 );
    v/=2.0;
    v = (double)sum / v;
    printf( "%.9lf\n", v);
}
