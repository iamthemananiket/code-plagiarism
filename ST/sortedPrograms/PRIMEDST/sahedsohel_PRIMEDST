/***************************************
    codeforces = topcoder = sahedsohel
    IIT,Jahangirnagar University(42)
****************************************/
#include <bits/stdc++.h>
using namespace std;

#define ll long long int
#define ull unsigned long long int
#define inf (INT_MAX/10)
#define linf (LLONG_MAX/10LL)
#define sc(a) scanf("%d",&a)
#define sc2(a,b) scanf("%d%d",&a,&b)
#define sc3(a,b,c) scanf("%d%d%d",&a,&b,&c)
#define sc4(a,b,c,d) scanf("%d%d%d%d",&a,&b,&c,&d)
#define fl(c,i,n) for(i=c;i<n;i++)
#define f(i,n) for(i=0;i<n;i++)
#define mem(a) memset(a,0,sizeof(a))
#define memn(a) memset(a,-1,sizeof(a))
#define pb push_back
#define aov(a) a.begin(),a.end()
#define mpr make_pair
#define PI (2.0*acos(0.0)) //#define PI acos(-1.0)
#define xx first
#define yy second
#define mxv(a) *max_element(aov(a))
#define mnv(a) *min_element(aov(a))
#define LB(a,x) (lower_bound(aov(a),x)-a.begin())
#define UB(a,x) (upper_bound(aov(a),x)-a.begin())
#define to_c_string(a) a.c_str()
#define strtoint(c) atoi(&c[0])
#define pll pair< ll , ll >
#define pii pair< int , int >
#define pid pair< int , double >
#define pcs(a) printf("Case %d: ", a)
#define nl puts("")
#define endl '\n'
#define dbg(x) cout<<#x<<" : "<<x<<endl

template <class T> inline T bigmod(T p,T e,T M){ll ret = 1;for(; e > 0; e >>= 1){if(e & 1) ret = (ret * p) % M;p = (p * p) % M;}return (T)ret;}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}   // M is prime}
template <class T> inline T bpow(T p,T e){ll ret = 1;for(; e > 0; e >>= 1){if(e & 1) ret = (ret * p);p = (p * p);}return (T)ret;}

int toInt(string s){int sm;stringstream ss(s);ss>>sm;return sm;}
int toLlint(string s){long long int sm;stringstream ss(s);ss>>sm;return sm;}


///int mnth[]={-1,31,28,31,30,31,30,31,31,30,31,30,31};  //Not Leap Year
///int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
///int dx[]={-1,+1,0,1,0,-1}; // Hexagonal Direction   **
///int dy[]={-1,+1,1,0,-1,0}; //                       *#*
///                                                     **
///const double eps=1e-9;
///int dx[]={0,1,0,-1};int dy[]={1,0,-1,0}; //4 Direction

/*****************************************************************/
/// ////////////////////   GET SET GO    ////////////////////// ///
/*****************************************************************/


#define intx(i,j,k,l) ((a[i]*b[j]-b[i]*a[j])*(a[k]-a[l])-(a[i]-a[j])*(a[k]*b[l]-b[k]*a[l]))/((a[i]-a[j])*(b[k]-b[l])-(b[i]-b[j])*(a[k]-a[l]))
#define inty(i,j,k,l) ((a[i]*b[j]-b[i]*a[j])*(b[k]-b[l])-(b[i]-b[j])*(a[k]*b[l]-b[k]*a[l]))/((a[i]-a[j])*(b[k]-b[l])-(b[i]-b[j])*(a[k]-a[l]))
#define dst(u,v,x,y) sqrt((x*1.0-u*1.0)*(x*1.0-u*1.0)+(y*1.0-v*1.0)*(y*1.0-v*1.0))
#define area(p1,p2,p3) (p1.xx*p2.yy+p2.xx*p3.yy+p3.xx*p1.yy-p1.yy*p2.xx-p2.yy*p3.xx-p3.yy*p1.xx)

int ts,kk=1;

#define M 100005
#define MD 1000000007LL
#define MX 1000000001

int n;
int sz[M];
bool del[M];
int ds[M];
ll rs;

vector< int >pl;
vector< int >al[M];

void dfs(int u,int pr)
{
    sz[u]=1;
    for(int i=0;i<al[u].size();i++)
    {
        int v=al[u][i];
        if(v!=pr&&!del[v])
        {
            dfs(v,u);
            sz[u]+=sz[v];
        }
    }
}

int vv[M];

void dist(int u)
{
    queue< int >qu,qt;
    int i,j,k,l,r;
    ds[0]=1;
    vv[0]=0;
    int mx=0;
    l=r=1;
    bool g=0;
    f(k,al[u].size())
    {
        int qv=al[u][k];
        if(!del[qv])
        {
            qu.push(qv);
            qu.push(1);
            qu.push(u);
            while(!qu.empty())
            {
                int v=qu.front();qu.pop();
                int d=qu.front();qu.pop();
                int pr=qu.front();qu.pop();
                vv[r++]=d;
                i=lower_bound(aov(pl),d)-pl.begin();
                for(;i<pl.size()&&pl[i]-d<=mx;i++)
                {
                    rs+=ds[pl[i]-d];
                }
                f(i,al[v].size())
                {
                    int nv=al[v][i];
                    if(nv!=pr&&!del[nv])
                    {
                        qu.push( nv );
                        qu.push( d+1 );
                        qu.push( v );
                    }
                }
            }
            for(;l<r;l++)ds[ vv[l] ]++,mx=max(vv[l],mx);
            g=1;
        }
    }
    f(i,r)ds[vv[i]]=0;
}

void decompose(int u)
{
    dfs(u,-1);
    int i,qpr=-1,qz=sz[u];
    while(1)
    {
        for(i=0;i<al[u].size();i++)
        {
            int v=al[u][i];
            if(v!=qpr&&!del[v]&&sz[v]>qz/2)break;
        }
        if(i<al[u].size())
        {
            qpr=u;
            u=al[u][i];
        }
        else break;
    }
//    cout<<u<<endl;
    del[u]=1;
    dist(u);
    f(i,al[u].size())
    {
        int v=al[u][i];
        if(!del[v])decompose(v);
    }
}

int main()
{
    int t,i,j,k;
    k=0;
    pl.pb(2);
    for(i=3;i<50000;i+=2)
    {
        for(j=2;j*j<=i;j++)if(i%j==0)break;
        if(j*j>i||i%j)
        {
            pl.pb(i);
        }
    }
//    cout<<pl.size()<<endl;

    sc(n);
    fl(1,i,n)
    {
        sc2(j,k);
        al[k].pb(j);
        al[j].pb(k);
    }
    decompose(1);
    ll q=n;
    q=(q*(q-1))/2LL;
    cout<<setprecision(12)<<fixed<<(rs*1.0)/(q*1.0)<<endl;;
//    printf("%.10lf\n",(rs*1.0)/(q*1.0));


    return 0;
}