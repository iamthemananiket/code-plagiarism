#include<iostream>
#include<algorithm>
#include<cstdio>
#include<cmath>
#include<string>
#include<cstring>
#include<vector>
#include<set>
#include<iomanip>
#include<queue>
#include<map>
#include<list>
#include<stack>
#define fl(i,s,n) for(i=s;i<n;i++)
#define flr(i,s,n) for(i=s;i>n;i--)
#define ls(i,s) for(i=0;s[i]!='\0';i++)
#define gi(x) scanf("%lld",&x)
#define pi(x) printf("%d",x)
#define checkline(x) while(x!='\0' && x!='\n')
#define pt(s) printf(s)
#define PI acos(-1)
#define f_in freopen("input.txt","r",stdin)
#define f_out freopen("output.txt","w",stdout)
#define in(i,j,k) ((j<=i) && (i<k))
#define ull unsigned long long int
#define lli long long int
#define ld long double
#define sd(x) scanf("%d",&x)
#define sd2(x,y) scanf("%d%d",&x,&y)
#define sd3(x,y,z) scanf("%d%d%d",&x,&y,&z)
#define fi first
#define se second
#define pb(x) push_back(x)
#define mp(x,y) make_pair(x,y)
#define r0 return 0
#define mod 1000000007
using namespace std;
struct node
{
    lli a;
    lli b;
    lli v;
};
struct lv
{
  bool operator()(const node& lhs, const node& rhs) const
  {
    return lhs.v < rhs.v;
  }
};

int prog()
{
    lli n,k,i,t,x,y,z,m;
    gi(n);gi(k);
    lli *num = new lli [n+1];
    num[0]=0;
    fl(i,1,n+1)
        gi(num[i]);
    fl(i,1,n+1)
        num[i]+=num[i-1];
    priority_queue<node , vector<node> , lv> td;
    node temp;
    fl(i,1,n+1)
    {
        temp.a=i;
        temp.b=n;
        temp.v=num[n]-num[i-1];
        td.push(temp);
    }
    while(k--)
    {
        temp = td.top();
        printf("%lld ",temp.v);
        temp.b-=1;
        temp.v=num[temp.b]-num[(temp.a)-1];
        td.pop();
        if(temp.v!=0)
            td.push(temp);
    }
    r0;
}
int main()
{
    //f_in;
    prog();
    r0;
}
