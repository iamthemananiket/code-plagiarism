#include <iostream>

using namespace std;

const long long mod = ( long long ) 1e9 + 7ll;
const int N = 100010;

long long fac[N], inv[N];

long long pw ( long long a, long long b ) {
	if ( b == 0ll ) return 1ll;
	long long r = pw ( a, b >> 1 );
	r = ( r * r ) % mod;
	if ( b & 1ll ) r = ( a * r ) % mod;
	return r;
}
long long C ( int n, int r ) {
	
	if ( r > n ) return 0ll;

	long long ans = fac[n];
	ans = ( ans * inv[r] ) % mod;
	ans = ( ans * inv[n-r] ) % mod;

	return ans;
}
int main ( void ) {

	ios :: sync_with_stdio ( false );

	for ( int i = 0 ; i < N ; i++ ) {
		fac[i] = ( i == 0 ? 1ll : ( ( i * fac[i-1] ) % mod ) );
		inv[i] = pw ( fac[i], mod-2ll );
	}

	int test_num;
	cin >> test_num;

	while ( test_num-- ) {

		int n, k;
		cin >> n >> k;

		int cnt0 = 0;
		for ( int i = 0 ; i < n ; i++ ) { 
			int val;
			cin >> val;
			cnt0 += ( val == 0 );
		}

		long long ans = 0ll;
		if ( cnt0 == 0 ) {
			for ( int i = k ; i >= 0 ; i -= 2 ) {
				ans = ( ans + C( n, i ) ) % mod;
			}
		} else { 
			for ( int i = 0 ; i <= k ; i++ ) {
				ans = ( ans + C( n - cnt0, i ) ) % mod;
			}
		}

		cout << ans << "\n";
	}

	return 0;
}