#include <cstdio>
#include <iostream>
#include <cstdlib>
#include <string>
#include <cstring>
#include <set>
#include <map>
#include <queue>
#include <deque>
#include <stack>
#include <vector>
#include <ctime>
#include <cassert>
#include <cmath>
#include <iomanip>
#include <algorithm>
#include <iomanip>
#include <fstream>
using namespace std;
#define fname ""
#define F first
#define S second
#define pb push_back
#define mp make_pair
#define ll long long
#define ull unsigned long long
#define inf 1000000000
#define INF 1000000000000000000ll
const int N = 100500, mod = inf + 7;

ll binpow(ll a, ll b) {
	ll res = 1;
	while(b) {
		if (b & 1) res = (res * a) % mod;
		b >>= 1;
		a = (a * a) % mod;
	}
	return res;
}

ll f[N], inv[N];

inline int C(int n, int k) {
	if (k > n) return 0;
	if (n == 0) return 1;
	ll ret = (f[n] * inv[k]) % mod;
	ret = (ret * inv[n - k]) % mod;
	return ret;
}

int n, a[N], k;

inline void solve() {
	scanf("%d%d", &n, &k);
	int cnt = 0;
	bool isZero = 0;
	for (int i = 1; i <= n; ++ i) {
		scanf("%d", &a[i]);
		if (a[i] != 0) cnt++;
		else isZero = 1;
	}
	int ans = 0;
	for (int it = 0; it <= k; ++ it) {
		if (it % 2 == k % 2 || isZero) {
			ans += C(cnt, it);
			if (ans >= mod) ans -= mod;
		}
	}
	printf("%d\n", ans);
}

int main() {
	#ifndef ONLINE_JUDGE
    freopen(fname"in", "r", stdin);
    freopen(fname"out", "w", stdout);
	#endif

	f[0] = inv[0] = 1;
	
	for (int i = 1; i <= 100000; ++ i) {
		f[i] = (f[i - 1] * i) % mod;
		inv[i] = binpow(f[i], mod - 2);
	}

	int t;
	scanf("%d", &t);
	
	while(t--) solve();

    return 0;
}
