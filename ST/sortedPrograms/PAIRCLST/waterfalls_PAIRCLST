#include <bits/stdc++.h>
using namespace std;

#define MP make_pair
#define A first
#define B second

const int MAGIC = 20;

int n,m,k;
int special[10013];
vector<pair<int,int> > adj[100013];
int ans = 2147483647;

priority_queue<pair<int,int> > frontier;
int dist[100013];
bool done[100013];
void go() {
	for (int i=1;i<=n;i++) {
		dist[i] = 2147483647;
		done[i] = 0;
	}
	for (int i=0;i<k/2;i++) {
		int x = special[i];
		dist[x] = 0;
		frontier.push(MP(-dist[x],x));
	}
	while (frontier.size()>0) {
		int i = frontier.top().B;
		frontier.pop();
		if (done[i]) continue;
		done[i] = 1;
		for (auto p: adj[i]) {
			int j = p.A;
			if (dist[i]+p.B<dist[j]) {
				dist[j] = dist[i]+p.B;
				frontier.push(MP(-dist[j],j));
			}
		}
	}
	for (int i=k/2;i<k;i++) {
		ans = min(ans,dist[special[i]]);
	}
}

int main() {
	scanf("%d%d%d",&n,&m,&k);
	for (int i=0;i<k;i++) scanf("%d",&special[i]);
	for (int i=0;i<m;i++) {
		int a,b,c;
		scanf("%d%d%d",&a,&b,&c);
		adj[a].push_back(MP(b,c));
		adj[b].push_back(MP(a,c));
	}
	for (int r=0;r<MAGIC;r++) {
		random_shuffle(special,special+k);
		go();
	}
	printf("%d\n",ans);

	return 0;
}