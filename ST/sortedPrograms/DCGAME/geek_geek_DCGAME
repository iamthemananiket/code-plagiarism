#include<iostream>
#include<algorithm>
#include<cstdio>
#include<cmath>
#include<string>
#include<cstring>
#include<vector>
#include<set>
#include<iomanip>
#include<queue>
#include<map>
#include<unordered_map>
#include<list>
#include<stack>
#define fl(i,s,n) for(i=s;i<n;i++)
#define flr(i,s,n) for(i=s;i>n;i--)
#define ls(i,s) for(i=0;s[i]!='\0';i++)
#define gi(x) scanf("%lld",&x)
#define pi(x) printf("%lld",x)
#define checkline(x) while(x!='\0' && x!='\n')
#define pt(s) printf(s)
#define PI acos(-1)
#define f_in freopen("input.txt","r",stdin)
#define f_out freopen("output.txt","w",stdout)
#define in(i,j,k) ((j<=i) && (i<k))
#define ull unsigned long int
#define lli long int
#define sd(x) scanf("%d",&x)
#define sd2(x,y) scanf("%d%d",&x,&y)
#define sd3(x,y,z) scanf("%d%d%d",&x,&y,&z)
#define fi first
#define se second
#define pb(x) push_back(x)
#define mp(x,y) make_pair(x,y)
#define r0 return 0
#define mod 1000000007
using namespace std;
#define ld long int
set<lli> nos;
unordered_map<lli,short int> no,cno;
lli *num  = new long  [1000001];
int *h1  = new int  [1000001];
short int *help = new short int  [1000001],z;
static const char opp[] = { 'D', 'C' };
inline ld scan_ld()    {int ip=getchar_unlocked(),flag=1;ld ret=0;for(;ip<'0'||ip>'9';ip=getchar_unlocked())if(ip=='-'){flag=-1;ip=getchar_unlocked();break;}for(;ip>='0'&&ip<='9';ip=getchar_unlocked())ret=((ret<<3) + (ret<<1))+ip-'0';return flag*ret;}
int prog()
{
    lli n,m,k,x,y,i,j,tot;int a,b,c;long int min_ele,max_ele;
    min_ele=mod;
    max_ele = 0;
    //map<lli,lli> no,cno;
    char xy;
    //gi(n);gi(m);
    n=scan_ld() ;
    m=scan_ld() ;
    num[0]=mod;
    help[0]=0;
    h1[0]=0;
    fl(i,1,n+1)
    {
        num[i]=scan_ld();
        max_ele = max(num[i],max_ele);
        min_ele = min(num[i],min_ele);
        nos.insert(num[i]);
        help[i]=1;
        j=i-1;
        while(num[j]<=num[i])
            j = h1[j];
        h1[i]=j;
    }
    nos.insert(mod);
    for(i=n;i>0;i--)
    {
        help[h1[i]]^=help[i];
        b=(i-h1[i])&1;
        help[i]*=b;
        no[num[i]]^=help[i];
    }
    no[0]=0;
    no[mod]=0;
    set<lli>::iterator iter;
    iter = nos.begin();
    x = *iter;
    cno[x]=0;
    z=no[x];
    iter++;
    while(iter!=nos.end())
    {
        cno[*iter]=z;
        z=no[*iter]^z;
        iter++;
    }
    tot = n*(n+1);
    tot>>=1;
    tot&=1;
    //getchar();
    unordered_map<lli,int> dp1,dp2;
    fl(i,0,m)
    {
        xy=getchar_unlocked();
        getchar_unlocked();
        x=scan_ld();
        if(xy=='<')
                {
                if(dp1.find(x)!=dp1.end())
                    y = dp1[x];
                else {if(x<min_ele)
                    y = 0;
                else if(x>max_ele)
                    y = tot;
                else
                    {
                        y = *nos.lower_bound(x);
                        y = cno[y];
                    }
                dp1[x]=y;
                dp2[x]=tot^y^no[x];
                }
                }
        else if(xy=='>')
                {
                if(dp2.find(x)!=dp2.end())
                    y = dp2[x];
                else {if(x<min_ele)
                    y=tot;
                else if(x>max_ele)
                    y=0;
                else
                {
                y = *nos.upper_bound(x);
                y=tot^cno[y];
                }
                dp2[x]=y;
                dp1[x]=tot^y^no[x];
                }
                }
        else
                y = no[x];
        xy=getchar_unlocked();
    if(y==0)
        {
            putchar_unlocked(opp[xy-'C'] );
        }
    else
        putchar_unlocked(xy);
    getchar_unlocked();
    }
    r0;
}
int main()
{
    prog();
    r0;
} 