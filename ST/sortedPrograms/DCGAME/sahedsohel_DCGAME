/***************************************
    codeforces = topcoder = sahedsohel
    IIT,Jahangirnagar University(42)
****************************************/
#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <sstream>
#include <iomanip>
#include <string>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <algorithm>
#include <iterator>
#include <utility>
using namespace std;

#define ll long long int
#define ull unsigned long long int
#define inf (INT_MAX/10)
#define linf (LLONG_MAX/10LL)
#define sc(a) scanf("%d",&a)
#define sc2(a,b) scanf("%d%d",&a,&b)
#define sc3(a,b,c) scanf("%d%d%d",&a,&b,&c)
#define sc4(a,b,c,d) scanf("%d%d%d%d",&a,&b,&c,&d)
#define fl(c,i,n) for(i=c;i<n;i++)
#define f(i,n) for(i=0;i<n;i++)
#define mem(a) memset(a,0,sizeof(a))
#define memn(a) memset(a,-1,sizeof(a))
#define pb push_back
#define pp pop_back()
#define aov(a) a.begin(),a.end()
#define mpr make_pair
#define PI (2.0*acos(0.0)) //#define PI acos(-1.0)
#define xx first
#define yy second
#define mxv(a) *max_element(aov(a))
#define mnv(a) *min_element(aov(a))
#define LB(a,x) (lower_bound(aov(a),x)-a.begin())
#define UB(a,x) (upper_bound(aov(a),x)-a.begin())
#define to_c_string(a) a.c_str()
#define strtoint(c) atoi(&c[0])
#define pii pair< int , int >
#define pll pair< ll , ll >
#define pcs(a) printf("Case %d: ", a)
#define nl puts("")
#define dbg(x) cout<<#x<<" : "<<x<<endl

template <class T> inline T bigmod(T p,T e,T M){ll ret = 1;for(; e > 0; e >>= 1){if(e & 1) ret = (ret * p) % M;p = (p * p) % M;}return (T)ret;}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}   // M is prime}
template <class T> inline T bpow(T p,T e){ll ret = 1;for(; e > 0; e >>= 1){if(e & 1) ret = (ret * p);p = (p * p);}return (T)ret;}

int toInt(string s){int sm;stringstream ss(s);ss>>sm;return sm;}
int toLlint(string s){long long int sm;stringstream ss(s);ss>>sm;return sm;}


///int mnth[]={-1,31,28,31,30,31,30,31,31,30,31,30,31};  //Not Leap Year
///int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
///int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
///int dx[]={-1,-1,+0,+1,+1,+0};int dy[]={-1,+1,+2,+1,-1,-2}; //Hexagonal Direction
///const double eps=1e-6;
///int dx[]={0,1,0,-1};int dy[]={1,0,-1,0}; //4 Direction

/*****************************************************************/
/// ////////////////////   GET SET GO    ////////////////////// ///
/*****************************************************************/

#define M 1000006
#define MD 1000000007LL
#define MX 2000012LL

int n,m;
pii a[M];
set< int>st;
set< int>::iterator it,jt;

int b[M];
int sm[M];
char s[M];

int main()
{
    int t,i,j,k;
    int l,r;


    sc2(n,m);
    f(i,n)
    {
        sc(k);
        a[i]=pii(k,i);
    }
    sort(a,a+n);

    st.insert(-1);
    st.insert(n);
    for(i=n-1;i>-1;i--)
    {
        jt=it=st.insert(a[i].yy).xx;
        it--;
        jt++;
        l=(*it);
        r=(*jt);

        sm[i]=((a[i].yy-l)&1)*((r-a[i].yy)&1);
    }
    char c,d;

    j=0;
    b[0]=a[0].xx;
    for(i=1;i<n;i++)
    {
        if( b[j]==a[i].xx )
        {
            sm[j]+=sm[i];
        }
        else
        {
            if(j)
                sm[j]+=sm[j-1];
            sm[j]&=1;
            j++;
            b[j]=a[i].xx;
            sm[j]=sm[i];
        }
    }
    if(j)
        sm[j]+=sm[j-1];
    sm[j]&=1;
    n=j+1;

    int x;
    i=0;
    while(m--)
    {
        scanf(" %c %d %c",&c,&j,&d);
        k=(lower_bound(b,b+n,j)-b);

        if(k==n)
        {
            if(c=='<')
                x=sm[n-1];
            else
                x=0;
        }
        else
        {
            if(c=='=')
            {
                if(b[k]!=j)
                    x=0;
                else
                {
                    x=sm[k];
                    if(k>0)
                        x-=sm[k-1];
                }
            }
            else if(c=='>')
            {
                if(b[k]==j)k++;
                x=sm[n-1];
                if(k>0)
                    x-=sm[k-1];
            }
            else
            {
                k--;
                if(k<0)
                    x=0;
                else
                    x=sm[k];
            }
        }
//        cout<<x<<endl;
        x+=8;

        if((x&1LL)==0)
            s[i++]=(d=='D')?'C':'D';
        else
            s[i++]=(d=='D')?'D':'C';
//            printf("%c",);
//        else
//            printf("%c",(d=='D')?'D':'C');
    }
    printf("%s\n",s);

    return 0;
}
