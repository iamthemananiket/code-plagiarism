/*
 * 2013 Codechef Ode2Code
 * ASGARDIANS
 * File:   LETHOR.cpp
 * Author: Andy Y.F. Huang
 * Created on Nov 16, 2013, 11:30:58 AM
 */

#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstddef>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <complex>
#include <deque>
#include <fstream>
#include <functional>
#include <iomanip>
#include <iostream>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <valarray>
#include <vector>

using namespace std;

namespace LETHOR {
int a[11111], v[11111];
int bit[11111];

void solve(int test_num) {
  int N, res = 0;
  cin >> N;
  for (int i = 0; i < N; i++) {
    cin >> a[i];
    v[i] = a[i];
  }
  sort(v, v + N);
  const int M = unique(v, v + N) - v;
  memset(bit, 0, sizeof(bit));
  reverse(a, a + N);
  for (int i = 0; i < N; i++) {
    a[i] = lower_bound(v, v + M, a[i]) - v;
    for (int j = a[i]; j > 0; j -= j & -j)
      res += bit[j];
    for (int j = a[i] + 1; j <= M; j += j & -j)
      bit[j]++;
  }
  cout << res << endl;
}

void solve() {
#ifdef AZN
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
  freopen("azn.txt", "w", stderr);
#endif
  int tests;
  cin >> tests;
  for (int i = 1; i <= tests; i++)
    solve(i);
}
}

int main() {
  LETHOR::solve();
  return 0;
}
