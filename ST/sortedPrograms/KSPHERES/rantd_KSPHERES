#include <bits/stdc++.h>
using namespace std;

#define repu(i, a, b) for (int i = (a); i < (b); ++i)
#define repd(i, a, b) for (int i = (a); i > (b); --i)
#define mem(a, x) memset(a, x, sizeof(a))
#define all(a) a.begin(), a.end()
#define uni(a) a.erase(unique(all(a)), a.end())

typedef long long ll;
const int MOD = 1000000007;

template<class T, class U> inline T tmin(T a, U b) {return (a < b) ? a : b;}
template<class T, class U> inline T tmax(T a, U b) {return (a > b) ? a : b;}
template<class T, class U> inline void amax(T &a, U b) {if (b > a) a = b;}
template<class T, class U> inline void amin(T &a, U b) {if (b < a) a = b;}
template<class T> inline T tabs(T a) {return (a > 0) ? a : -a;}
template<class T> T gcd(T a, T b) {while (b != 0) {T c = a; a = b; b = c % b;} return a;}

const int N = 1005;
int n, m, c;
int fn[N], fm[N];
ll dp[N], tmp[N], f[N];

int main(int argc, char *argv[]) {
	ios_base::sync_with_stdio(false);
	
	int x; ll y;
	
	mem(fn, 0); mem(fm, 0); mem(dp, 0);
	
	cin >> n >> m >> c;
	repu(i, 0, n) {
		cin >> x; fn[x]++;
	}
	repu(i, 0, m) {
		cin >> x; fm[x]++;
	}
	repu(i, 1, c + 1) f[i] = fn[i] * 1LL * fm[i] % MOD;
	
	dp[0] = 1;
	repu(i, 1, c + 1) {
		if (f[i] > 0) {
			repu(j, 0, c + 1) tmp[j] = dp[j];
			repu(j, 0, c) (tmp[j + 1] += dp[j] * f[i]) %= MOD;
			repu(j, 1, c + 1) dp[j] = tmp[j];
		}
	}
	repu(i, 1, c + 1) printf("%lld%c", dp[i + 1], i == c ? '\n' : ' ');
	
	return 0;
}
