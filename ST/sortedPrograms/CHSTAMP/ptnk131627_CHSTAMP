#include <bits/stdc++.h>

using namespace std;

#define X first
#define Y second
#define INPUT freopen("chstamp.inp","r",stdin)
#define OUTPUT freopen("chstamp.out","w",stdout)
#define FOR(i,l,r) for(auto i=l;i<=r;i++)
#define REP(i,l,r) for(auto i=l;i<r;i++)
#define FORD(i,l,r) for(auto i=l;i>=r;i--)
#define REPD(i,l,r) for(auto i=l;i>r;i--)
#define ENDL printf("\n")
#define debug 1

typedef long long ll;
typedef pair<int,int> ii;

const int inf=1e9;
const int MOD=1e9+7;
const int N=5e4+10;

int h[N],a[N][2],t[N],p[N],f[N],mark[N],q[N],n;
vector <int> v[N];
bool comp(int x,int y){
    return t[x]<t[y];
}
void prepare(){
    int m,x;
    scanf("%d%d",&m,&n);
    memset(h,0,sizeof(h));
    while (m--){
        scanf("%d",&x);
        h[x]++;
    }
    FOR(i,1,n) scanf("%d%d%d",t+i,a[i],a[i]+1);
    FOR(i,1,n) p[i]=i;
    sort(p+1,p+n+1,comp);
}
void BFS(int st,int sign){
    mark[st]=sign;
    int top=1,bot=1;
    q[1]=st;
    while (top<=bot){
        int x=q[top++];
        for(auto y:v[x]) if (mark[y]!=sign){
            mark[y]=sign;
            q[++bot]=y;
        }
    }
//    printf("%d\n",bot);
//    FOR(i,1,bot) printf("%d ",q[i]);ENDL;
    int best=0;
    FOR(i,1,bot) best=max(best,f[q[i]]);
    FOR(i,1,bot) f[q[i]]=best;
}
ll solve(){
    fill(mark+1,mark+N,n+1);
    REP(i,1,N) f[i]=i;
    for(int st=n;st>0;){
        int en=st;
        while (st&&t[p[st]]==t[p[en]]) st--;

        FOR(i,st+1,en)
            FOR(type,0,1) v[a[p[i]][type]].push_back(a[p[i]][type^1]);
        FOR(i,st+1,en)
            FOR(type,0,1) if (mark[a[p[i]][type]]!=en)
                BFS(a[p[i]][type],en);
//        printf("%d %d\n",st+1,en);
//        REP(i,1,N) cout<<f[i]<<" \n"[i==N-1];
        FOR(i,st+1,en)
            FOR(type,0,1) v[a[p[i]][type]].pop_back();

    }
    ll ans=0;
    REP(i,1,N) ans+=1LL*h[i]*f[i];
    return ans;
}
int main(){
    int test;
    scanf("%d",&test);
    while (test--){
        prepare();
        cout<<solve()<<'\n';
    }
}
