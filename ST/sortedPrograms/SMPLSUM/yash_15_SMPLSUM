#include <bits/stdc++.h>
using namespace std;
#define N 10000007
#define debug true
 
int fac[N],etf[N];
long long ans[N];

void build(int n)
{
	fac[1]=1;
	int i;
	long long j;
	for(i=2;i*i<n;i++)
			if(!fac[i])
				for(j=i*1ll*i;j<n;j+=i)
						fac[j]=i;
}
 
void totient(int n)
{
	etf[1]=1;
	for(int i=2;i<n;i++)
	{
			if(!fac[i])
				etf[i]=i-1;
			else
			{
				if((i/fac[i])%fac[i]==0)
					etf[i]=fac[i]*etf[i/fac[i]];
				else 
					etf[i]=(fac[i]-1)*etf[i/fac[i]];
			}
	}
}
 
void solve(int n)
{
	int i,j;
	long long v1,v2;
	ans[1]=1;
	for(i=2;i<n;i++)
	{
		if(ans[i])
			continue;
		if(!fac[i])
		{
			v1=v2=1;
			for(j=i;j<n;j*=i)
			{
				ans[j]=(1+i*(i-1ll)*v1);
				v2=i*v2*i;
				v1+=v2;
				if(j>=(n/i))
					break;
			}
		}
		else
		{
			for(j=i,v1=1;j%fac[i]==0;j/=fac[i])
				v1*=fac[i];
			ans[i]=ans[v1]*ans[j];
		}
		
	}
}
 

int main() 
{
	
	build(N);    solve(N);
    int t,n;
    scanf("%d",&t);
    while(t--)
    {
		scanf("%d",&n);
    	printf("%lld\n",ans[n]);
	}
	return 0;
}
//**/
/* 
int inp[1000006];
 
int main() 
{
	int maxv=0;
    int tt,t,n;
    scanf("%d",&tt);
    for(t=0;t<tt;t++)
    {
		scanf("%d",inp+t);
		if(maxv<inp[t])
			maxv=inp[t];
	}
	build(maxv+2);
    totient(maxv+2);
    solve(maxv+2);
    
    for(t=0;t<tt;t++)
		printf("%lld\n",ans[inp[t]]);
	
	return 0;
}
//*/