#include<bits/stdc++.h>
using namespace std;

#define sd(mark) scanf("%d",&mark)
#define ss(mark) scanf("%s",&mark)
#define sl(mark) scanf("%lld",&mark)
#define debug(mark) printf("check%d\n",mark)
#define clr(mark) memset(mark,0,sizeof(mark))
#define F first
#define S second
#define MP make_pair
#define PB push_back
#define ll long long
#define N 100010
#define LOGN 20
#define INF 1e16
int p[N][LOGN];
ll dp[N],minn[N][LOGN];
vector<int> v[N];
vector<pair<int,ll> > tickets[N];
void go(int cur)
{
	int i,j;
	for(i=1;i<LOGN;++i)
		p[cur][i]=p[p[cur][i-1]][i-1];
	for(i=1;i<LOGN;++i)
		minn[cur][i]=min(minn[cur][i-1],minn[p[cur][i-1]][i-1]);
	for(i=0;i<tickets[cur].size();++i)
	{
		ll Cost=tickets[cur][i].S;
		int k=tickets[cur][i].F;
		int pos=cur;
		ll Min=INF;
		for(j=LOGN-1;j>=0;--j)
			if((1<<j) <= k)
			{
				Min=min(Min,minn[pos][j]);
				k-=(1<<j);
				pos=p[pos][j];
			}
		dp[cur]=min(dp[cur],Cost+Min);
	}
	for(i=0;i<v[cur].size();++i)
	{
		p[v[cur][i]][0]=cur;
		minn[v[cur][i]][0]=dp[cur];
		go(v[cur][i]);
	}
}
int main()
{
	int n,m,q,i,j;
	sd(n);sd(m);
	for(i=0;i<n-1;++i)
	{
		int x,y;
		sd(x);sd(y);
		v[y].PB(x);
	}
	for(i=0;i<m;++i)
	{
		int x,y,z;
		sd(x);sd(y);sd(z);
		tickets[x].PB(MP(y,z));
	}
	p[1][0]=1;
	minn[1][0]=INF;
	dp[1]=0;
	for(i=2;i<=n;++i)
		dp[i]=INF;
	go(1);
	sd(q);
	while(q--)
	{
		int x;
		sd(x);
		printf("%lld\n",dp[x]);
	}
}