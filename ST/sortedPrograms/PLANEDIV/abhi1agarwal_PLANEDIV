/*
._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._
	ABHINANDAN AGARWAL
	MNNIT ALLAHABAD
	CSE
._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._
*/
#include<bits/stdc++.h>
using namespace std;
#define pc putchar_unlocked
#define gc getchar_unlocked
typedef long long ll;
typedef unsigned long long llu;
#define mp make_pair
#define pb push_back
int fs()
{
	int x=0;
	char c;
	c=getchar_unlocked();
	while (c<'0'||c>'9')
		c=getchar_unlocked();
	while ('0'<=c&&c<='9')
	{
		x=(x<<3)+(x<<1)+c-'0';
		c=getchar_unlocked();
	}
	return x; 
}
void pps(const char *s)
{
	int i;
	for (i=0;s[i]!='\0';i++)
	{
		putchar_unlocked(s[i]);
	}
}
void _ppd(int a)
{
	if (a==0)
		return ;
	_ppd(a/10);
	putchar_unlocked(a%10+'0');
}
void ppd(int a) // Printing integer using utchar unlocked!
{
	if (a==0)
	{
		pc('0');
		return;
	}
	if (a<0)
	{
		pc('-');
		a=-a;
	}
	_ppd(a);
}
void _pplld(ll a)
{
	if (a==0)
		return ;
	_pplld(a/10);
	pc(a%10+'0');
}
void pplld(ll a)
{
	if (a==0)
	{
		pc('0');
		return ;
	}
	if (a<0)
	{
		pc('-');
		a=-a;
	}
	_pplld(a);
}
int ggs(char *s) // String inputting
{
	int x=0;
	char c=gc();
	while (!('a'<=c&&c<='z')&&c!=-1) // change conditions to whatever strings can input !
		c=gc();
	while ('a'<=c&&c<='z')
	{
		s[x++]=c;
		c=gc();
	}
	s[x]='\0';
	return x;
}

int fsn()
{
	int x=0;
	char c;
	c=getchar_unlocked();
	while (!('0'<=c&&c<='9'||c=='-'))
		c=getchar_unlocked();
	int neg=0;
	if (c=='-'){
		neg=1;
		c=getchar_unlocked();
	}
	while ('0'<=c&&c<='9')
	{
		x=(x<<3)+(x<<1)+c-'0';
		c=getchar_unlocked();
	}
	return (neg==0?x:-x); 
}
//------------------------------------------------------------------------------------
struct x
{
	double b,c;
};
x a1[100000+10];
double a0[100000+10];
double modd(double x)
{
	if (x<0)
		return -x;
	return x;
}
double cpp=0.000000000000001;
bool equa(double a,double b)
{
	if (modd(a-b)<cpp)
		return true;
	return false;
}
bool cmp(x x1,x x2)
{
	if (equa(x1.b,x2.b))
		return x1.c<x2.c;
	return x1.b<x2.b;
}
int main()
{
	int t=fs();
	while (t--)
	{
		int n=fs();
		int i,p1=0,p0=0;
		for (i=0;i<n;i++)
		{
			int a,b,c;
			scanf("%d%d%d",&a,&b,&c);
			if (a==0)
			{
				//a=INT_MAX;
				a0[p0++]=((double)c)/b;
			}
			else
			{
				a1[p1++]=(x){((double)b)/a,((double)c)/a};
			}
		}
		sort(a1,a1+p1,cmp);
		sort(a0,a0+p0);
		int maxa=0;double lastc=INT_MAX,last=INT_MAX;
		int c=0;
		for (i=0;i<p1;i++)
		{
			if (equa(a1[i].b,last))
			{
				if (!equa(lastc,a1[i].c))
				{
					c++;
					lastc=a1[i].c;
				}
			}	
			else
			{
				c=1;
				lastc=a1[i].c;
				last=a1[i].b;
			}
			if (c>maxa)
			{
				maxa=c;
			}
		}
		int maxb=0;last=INT_MAX,c=0;
		for (i=0;i<p0;i++)
		{
			if (!equa(a0[i],last))
			{
				c++;
				last=a0[i];
			}
			
			if (c>maxb)
			{
				maxb=c;
			}
		}
		maxa=(maxa>maxb?maxa:maxb);
		printf("%d\n",maxa);
	}
	
	return 0;
}