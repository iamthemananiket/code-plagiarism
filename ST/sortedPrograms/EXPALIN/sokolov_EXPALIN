#pragma comment(linker, "/STACK:500000000")
#define _CRT_SECURE_NO_WARNINGS
#include <algorithm>
#include <assert.h>
#include <bitset>
#include <functional>
#include <iostream>
#include <list>
#include <map>
#include <math.h>
#include <set>
#include <stack>
#include <stdio.h>
#include <stdlib.h>
#include <string>
#include <string.h>
#include <time.h>
#include <queue>
#include <utility>
#include <vector>
using namespace std;

#define y0 y0ChloeGraceMoretz
#define y1 y1ChloeGraceMoretz
#define ll long long
int nextInt() { int n; scanf("%d", &n); return n; }
ll nextLong() { ll n; scanf("%lld", &n); return n; }
const double PI = acos(-1.0);
const double EPS = 1e-6;
const int INF = 2e9;

char s[(int)5e5 + 9];
char palin[(int)5e5 + 9];

int PALIN_SIZE;

bool isPalin() {
	int l = 0;
	int r = PALIN_SIZE - 1;
	while (l < r) {
		if (palin[l] != palin[r]) {
			return false;
		}
		++l;
		--r;
	}
	return true;
}

int main() {
	//freopen("input.txt", "rt", stdin);
	//freopen("output.txt", "wt", stdout);
	int t;
	scanf("%d", &t);
	while (t--) {
		scanf("%s", s + 1);
		int n = strlen(s + 1);
		ll res = n;
		//int sq = sqrt((double)n) + 1;
		for (int p = 2; p <= n; ++p) {
			for (int i = 1; i <= n; ++i) {
				PALIN_SIZE = 0;
				for (int j = i; j <= n; j *= p) {
					palin[PALIN_SIZE++] = s[j];
					if (PALIN_SIZE > 1 && isPalin()) {
						++res;
					}
				}

			}
		}
		printf("%lld\n", res);
	}
	return 0;
}