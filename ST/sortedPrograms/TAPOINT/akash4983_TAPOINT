#include <cstdio>
#include <cmath>
#include <iostream>
#include <set>
#include <algorithm>
#include <vector>
#include <map>
#include <cassert>
#include <string>
#include <cstring>
#include <queue>

using namespace std;

#define rep(i,a,b) for(int i = a; i < b; i++)
#define S(x) scanf("%d",&x)
#define S2(x,y) scanf("%d%d",&x,&y)
#define P(x) printf("%d\n",x)
#define all(v) v.begin(),v.end()
#define FF first
#define SS second

typedef long long int LL;
typedef pair<int, int > pii;
typedef vector<int > vi;

const int LIM = 10000;

double sq(double x) {
  return x * x;
}

int main() {
  int t;
  S(t);
  while(t--) {
    double r,k;
    scanf("%lf%lf",&r,&k);
    k *= 0.01;
    double a = sq(r - k);
    double b = sq(r) - 1;
    if(b < a) {
      P(-1);
      continue;
    }
    int hi = (r + 1) / 2;
    if(r <= LIM) {
      bool ok = false;
      rep(i,1,hi+1) {
        int tmp = (int)sqrt(sq(r) - sq(i));
        if(sq(i) + sq(tmp) == sq(r)) tmp--;
        if(sq(i) + sq(tmp) >= a) {
          printf("%d %d\n",i,tmp);
          ok = true;
          break;
        }
      }
      if(!ok) P(-1);
    } else {
      bool ok = false;
      rep(i,1,1001) {
        int tmp = (int)sqrt(sq(r) - sq(i));
        if(sq(i) + sq(tmp) == sq(r)) tmp--;
        if(sq(i) + sq(tmp) >= a) {
          printf("%d %d\n",i,tmp);
          ok = true;
          break;
        }
      }
      if(ok) continue;
      int itr = 5000;
      while(itr--) {
        int x = rand() % hi + 1;
        int tmp = (int)sqrt(sq(r) - sq(x));
        if(sq(x) + sq(tmp) >= a) {
          printf("%d %d\n",x,tmp);
          ok = true;
          break;
        }
      }
      if(!ok) P(-1);
    }
  }
  return 0;
}