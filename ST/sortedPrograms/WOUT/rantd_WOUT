#include <bits/stdc++.h>
using namespace std;

#define repu(i, a, b) for (int i = (a); i < (b); ++i)
#define repd(i, a, b) for (int i = (a); i > (b); --i)
#define mem(a, x) memset(a, x, sizeof(a))
#define all(a) a.begin(), a.end()
#define uni(a) a.erase(unique(all(a)), a.end())

typedef long long ll;
const int MOD = 1000000007;

template<class T, class U> inline T tmin(T a, U b) {return (a < b) ? a : b;}
template<class T, class U> inline T tmax(T a, U b) {return (a > b) ? a : b;}
template<class T, class U> inline void amax(T &a, U b) {if (b > a) a = b;}
template<class T, class U> inline void amin(T &a, U b) {if (b < a) a = b;}
template<class T> inline T tabs(T a) {return (a > 0) ? a : -a;}
template<class T> T gcd(T a, T b) {while (b != 0) {T c = a; a = b; b = c % b;} return a;}

int main(int argc, char *argv[]) {
	ios_base::sync_with_stdio(false);
	
	int ntest;
	int n, l, h, H;
	
	cin >> ntest;
	while (ntest--) {
		cin >> n >> H;
		vector<ll> cnt(n + 2, 0);
		vector<ll> sum(n + 2, n);
		repu(i, 0, n) {
			cin >> l >> h;
			cnt[l + 1]--;
			cnt[h + 2]++;
		}
		repu(i, 1, n + 1) {
			cnt[i] += cnt[i - 1];
			sum[i] += sum[i - 1] + cnt[i];
		}
		ll ret = n * 1LL * n;
		repu(i, 1, n - H + 2) {
			amin(ret, sum[i + H - 1] - sum[i - 1]);
		}
		printf("%lld\n", ret);
	}
	
	
	return 0;
}
