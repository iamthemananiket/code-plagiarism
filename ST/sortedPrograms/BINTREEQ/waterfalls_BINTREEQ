#include <bits/stdc++.h>
using namespace std;

int dep(int x) {
	int ans = 30;
	while (!(x&(1<<ans))) ans-=1;
	return ans;
}

int a,b,n;

void go(int x, int len) { // # of nodes <=n that end with x (of len)
	int res = n>>(len+1);
	int m = n&((1<<(len+1))-1);
	if (x>m) res-=1;
	printf("%d\n",res);
}

void solve() {
	scanf("%d%d%d",&n,&a,&b);
	if (a==b) {
		printf("%d\n",n);
		return;
	}
	int id1 = dep(a);
	int id2 = dep(b);
	int lcp = 0;
	while (lcp<=min(id1,id2) && ((a&(1<<(id1-lcp)))>0)==((b&(1<<(id2-lcp)))>0)) lcp+=1;
	int one = 0;
	for (int i=id1-lcp;i>=0;i--) one|=a&(1<<i);
	int two = 0;
	for (int i=id2-lcp;i>=0;i--) two|=b&(1<<i);
	if (id1<id2) go(two,id2-lcp);
	if (id1>id2) go(one,id1-lcp);
	if (id1==id2) go(max(one,two),id1-lcp);
}

int main() {
	int T;
	scanf("%d",&T);
	for (int t=0;t<T;t++) {
		solve();
	}

	return 0;
}
