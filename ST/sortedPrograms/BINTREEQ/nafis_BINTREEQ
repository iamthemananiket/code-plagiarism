/*********************************************************************\
   |--\        ---       /\        |-----------| -----   /-------|    |
   |   \        |       /  \       |               |    /             |
   |    \       |      /    \      |               |   |              |
   |     \      |     /      \     |               |   |----|         |
   |      \     |    / ------ \    |-------|       |        |-----|   |
   |       \    |   /          \   |               |              |   |
   |        \   |  /            \  |               |              /   |
  ---        -------            ------           ----- |---------/    |
                                                                      |
    codeforces = nfssdq  ||  topcoder = nafis007                      |
    mail = nafis_sadique@yahoo.com || nfssdq@gmail.com                |
    IIT,Jahangirnagar University(41)                                  |
                                                                      |
**********************************************************************/

#include <bits/stdc++.h>
using namespace std;

#define xx         first
#define yy         second
#define pb         push_back
#define mp         make_pair
#define LL         long long
#define inf        INT_MAX/3
#define mod        1000000007ll
#define PI         acos(-1.0)
#define linf       (1ll<<60)-1
#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     ((A).begin(), (A).end())
#define set0(ar)   memset(ar,0,sizeof ar)
#define vsort(v)   sort(v.begin(),v.end())
#define setinf(ar) memset(ar,126,sizeof ar)

//cout << fixed << setprecision(20) << p << endl;

template <class T> inline T bigmod(T p,T e,T M){
    LL ret = 1;
    for(; e > 0; e >>= 1){
        if(e & 1) ret = (ret * p) % M;
        p = (p * p) % M;
    } return (T)ret;
}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}


int L[101], R[101];
int main() {
    ios_base::sync_with_stdio(0); cin.tie(0);
    int T; cin >> T;
    while(T--){
        LL n, u, v; cin >> n >> u >> v;

        if(u == v){
            cout << n << endl;
            continue;
        }

        vector < int > v1, v2;
        int pu = u, pv = v;
        int du = 1, dv = 1;
        while(pu != pv){
            if(pu > pv){
                if(pu % 2 == 0){
                    v1.pb(0);
                    pu /= 2;
                } else {
                    v1.pb(1);
                    pu = (pu - 1) / 2;
                }
                du++;
            } else {
                if(pv % 2 == 0){
                    v2.pb(0);
                    pv /= 2;
                } else {
                    v2.pb(1);
                    pv = (pv - 1) / 2;
                }
                dv++;
            }
        }
        int d = max(du, dv);

        reverse(v1.begin(), v1.end());
        reverse(v2.begin(), v2.end());

        LL lft = 1, rgt = 1;
        REP(i, v1.size()){
            lft *= 2;
            lft += v1[i];
        }
        REP(i, v2.size()){
            rgt *= 2;
            rgt += v2[i];
        }
        v = max(lft, rgt);
        v -= (1ll<<(d-1)) - 1;
//        cout << lft << " " << rgt << " " << d << " " << 1ll<<() << endl;

//        cout << d << " " << du << " " << dv << endl;

        int td = 1;
        LL sum = 1, p = 1;
        for(int i = 2; i <= 40; i++){
            p *= 2;
            sum += p;
            if(sum >= n){
                td = i;
                break;
            }
        }

        LL res = 0;
        for(int i = d; i <= td; i++){
            if(i < td){
                res += (1ll<<(i-d));
                continue;
            }
            LL q = n - (1ll<<(td-1)) + 1;
            LL r = q % (1ll<<(d-1));

            q /= 1ll<<(d-1);
            res += q;
            if(v <= r) res++;
        }

        cout << res << endl;
    }
}
