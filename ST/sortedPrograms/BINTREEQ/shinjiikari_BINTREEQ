#include <stdio.h>
#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pdd pair<double,double>
#define FILL(a,x) memset(a,x,sizeof(a))
#define foreach( gg,ii ) for( typeof(gg.begin()) ii=gg.begin();ii!=gg.end();ii++)
#define mp make_pair
#define pb push_back
#define X first
#define Y second
#define sz(a) int((a).size())
#define N 1000010
#define MAX 30
#define mod 1000000007
#define REP(i,a) for(int i=0;i<a;++i)
#define REPP(i,a,b) for(int i=a;i<b;++i)
#define all(a) a.begin(),a.end()
const ll INF = 1e18+1;

inline ll input(void)
{
	char t;
	ll x=0;
	int neg=0;
	t=getchar();
	while((t<48 || t>57) && t!='-')
		t=getchar();
	if(t=='-')
		{neg=1; t=getchar();}
	while(t>=48 && t<=57)
	{
		x=(x<<3)+(x<<1)+t-48;
		t=getchar();
	}
	if (neg) x=-x;
	return x;
}

inline void output(ll x)
{
	char a[20];
	int i=0,j;
	a[0]='0';
	if (x<0) {putchar('-'); x=-x;}
	if (x==0) putchar('0');
	while(x)
	{
		a[i++]=x%10+48;
		x/=10;
	}
	for(j=i-1;j>=0;j--)
	{
		putchar(a[j]);
	}
	putchar('\n');
}

pll a,b;
ll n;

inline bool safe(ll num)
{
	if (a.X*num+a.Y<=n&&b.X*num+b.Y<=n) return true;
	return false;
}

ll binsearch(ll l, ll r)
{
	ll mid,val=l;
	while(l<r)
	{
		mid=(l+r)/2;
		if (safe(mid)) l=mid+1;
		else r=mid;
	}
	return ((l+r)/2-val);
}

int main()
{
	ll q,u,v,min,max,x,y,lca,ans;
	q=input();
	REP(kase,q)
	{
		min=1;
		max=1;
		ans=0;
		n=input();
		u=input();
		v=input();
		x=u;
		y=v;
		while(1)
		{
			if (x>y) x=x/2;
			else if (y>x) y=y/2;
			else break;
		}
		lca=x;
		while(x<=u)
			x=2*x;
		x=x/2;
		a.X=x/lca;
		a.Y=u-x;
		x=lca;
		while(x<=v)
			x=2*x;
		x=x/2;
		b.X=x/lca;
		b.Y=v-x;
		while(safe(min)&&safe(max))
		{
			ans+=max-min+1;
			min=min*2;
			max=max*2+1;
		}
		//output(ans);
		ans+=binsearch(min,max);
		output(ans);
	}
return 0;
}
