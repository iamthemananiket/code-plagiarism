#include <bits/stdc++.h>
#include <assert.h>
 
using namespace std;
 
typedef long long ll;
typedef vector < long long > vll;
typedef pair < long long, long long > pll;
typedef pair < int, int > pii;
typedef vector < int > vii;
 
#define rep(i,n) for(int i = 0; i < n; i++)
#define reps(i,a,n) for(int i = a; i < n; i++)
#define s(n) cin >> n
#define csl ios_base::sync_with_stdio(false); cin.tie(NULL)
#define rsz(x,n) x.clear(); x.resize(n)
#define rrsz(x,a,n) x.clear(); x.resize(n,a)
#define wt while(true)
#define all(x) x.begin(),x.end()
#define pb push_back
#define ls(x) (((x) << 1) + 1)
#define rs(x) ((ls(x)) + 1)
#define md(a,b) (((a) + (b)) >> 1)
#define INF (1LL << 60LL)
 
int t, u, v, n, k, m, c, d, f, e, l, r, q;
const int N = 100015;
ll B[N];
ll ret(ll l, ll r) {
	return ((r * (r + 1LL)) - (l * (l + 1LL))) / 2LL;
}
int main() {
    csl;
	cin >> t;
	while (t--) {
		cin >> n >> k;
		rep (i, k) {
			cin >> B[i];
		}
		B[k] = 0;
		B[k + 1] = n + 1LL;
		sort(B, B + k + 2);
		ll sum = 0;
		ll lj = -1;
		reps (i, 0, k + 1) {
			if (sum >= B[i]) {
				sum += max(0LL, ret(B[i], B[i + 1] - 1LL));
			}
			if (sum < B[i]) {
				lj = B[i];
				break;
			}
		}
		if (lj == -1) {
			cout << ((sum) % 2LL == 1LL ? "Mom\n" : "Chef\n");
		}
		else cout << ((lj - 1LL) % 2LL == 0 ? "Chef\n" : "Mom\n");
	}
    return 0;
}