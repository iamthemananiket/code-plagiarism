/*********************************************************************\
   |--\        ---       /\        |-----------| -----   /-------|    |
   |   \        |       /  \       |               |    /             |
   |    \       |      /    \      |               |   |              |
   |     \      |     /      \     |               |   |----|         |
   |      \     |    / ------ \    |-------|       |        |-----|   |
   |       \    |   /          \   |               |              |   |
   |        \   |  /            \  |               |              /   |
  ---        -------            ------           ----- |---------/    |
                                                                      |
    codeforces = nfssdq  ||  topcoder = nafis007                      |
    mail = nafis_sadique@yahoo.com || nfssdq@gmail.com                |
    IIT,Jahangirnagar University(41)                                  |
                                                                      |
**********************************************************************/

#include <bits/stdc++.h>
using namespace std;

#define xx         first
#define yy         second
#define pb         push_back
#define mp         make_pair
#define LL         long long
#define inf        INT_MAX/3
#define mod        1000000007ll
#define PI         acos(-1.0)
#define linf       (1ll<<60)-1
#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     ((A).begin(), (A).end())
#define set0(ar)   memset(ar,0,sizeof ar)
#define vsort(v)   sort(v.begin(),v.end())
#define setinf(ar) memset(ar,126,sizeof ar)

//cout << fixed << setprecision(20) << p << endl;

template <class T> inline T bigmod(T p,T e,T M){
    LL ret = 1;
    for(; e > 0; e >>= 1){
        if(e & 1) ret = (ret * p) % M;
        p = (p * p) % M;
    } return (T)ret;
}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}


int ar[1001][1001];
int bit[1001][1001];
void insert(int x, int y, int v){
    for(int i = x; i <= 1000; i += i & -i){
        for(int j = y; j <= 1000; j += j & -j) bit[i][j] += v;
    }
}
int query(int x, int y){
    int ret = 0;
    for(int i = x; i > 0; i -= i & -i){
        for(int j = y; j > 0; j -= j & -j){
            ret += bit[i][j];
        }
    }
    return ret;
}
int main() {
    ios_base::sync_with_stdio(0); cin.tie(0);
    int T; cin >> T;
    while(T--){
        int n, m; cin >> n >> m;
        FOR(i, 1, n+1) FOR(j, 1, n+1){
            cin >> ar[i][j];
            bit[i][j] = 0;
        }
        FOR(i, 1, n+1){
            FOR(j, 1, n+1){
                insert(i, j, ar[i][j]);
            }
        }

        while(m--){
            string s; cin >> s;
            if(s == "U"){
                int x, y, v; cin >> x >> y >> v;
                v -= ar[x][y];
                ar[x][y] += v;
                insert(x, y, v);
            } else {
                int x1, y1, x2, y2; cin >> x1 >> y1 >> x2 >> y2;
                int res = query(x2, y2) - query(x1-1, y2) - query(x2, y1-1) + query(x1-1, y1-1);
                cout << res << "\n";
            }
        }
    }
}
