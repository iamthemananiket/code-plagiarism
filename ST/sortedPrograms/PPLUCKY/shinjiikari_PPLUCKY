#include <stdio.h>
#include <bits/stdc++.h>
using namespace std;
#define mod 1000000007
typedef long long ll;
#define pii pair<int,int>
#define pll pair<ll,ll>
#define pdd pair<double,double>
#define FILL(a,x) memset(a,x,sizeof(a))
#define	foreach( gg,ii ) for( typeof(gg.begin()) ii=gg.begin();ii!=gg.end();ii++)
#define	mp make_pair
#define	pb push_back
#define	X first
#define	Y second
#define sz(a) int((a).size())
#define	debug(ccc)	cout << #ccc << " = " << ccc << endl;
typedef long double ld;
#define maxn 100010

inline ll input(void)
{
	char t;
	ll x=0;
	int neg=0;
	t=getchar();
	while((t<48 || t>57) && t!='-')
		t=getchar();
	if(t=='-')
		{neg=1; t=getchar();}
    while(t>=48 && t<=57)
    {
        x=(x<<3)+(x<<1)+t-48;
        t=getchar();
    }
	if(neg)
		x=-x;
	return x;
}

inline void output(ll x)
{
	char a[20];
	int i=0,j;
	a[0]='0';
	if (x<0) {putchar('-'); x=-x;}
	if (x==0) putchar('0');
	while(x)
	{
		a[i++]=x%10+48;
		x/=10;
	}
	for(j=i-1;j>=0;j--)
	{
		putchar(a[j]);
	}
	putchar('\n');
}

ll bit[maxn];

void update(long long int v, long long int val)
{
    for(v;v<maxn;v+=v&-v)
        bit[v]+=val;
}

long long int query(long long int idx)
{
    long long int ans=0;
    while(idx)
    {
        ans+=bit[idx];
        idx-=idx&(-idx);
    }
    return ans;
}

int main()
{
ll t,n,i,count,j,ans;
pll x,y;
stack <pll> s;
vector <pll> v;
char a[maxn];
t=input();
while(t--)
{
	while(!s.empty()) 
		s.pop();
	v.clear();
	n=input();
	scanf("%s",a+1);
	for(i=1;i<=n;i++) bit[i]=0;
	for(i=1;i<=n;i++) update(i,1);
	for(i=1;i<=n;i++)
	{
		if (a[i]=='4') 
			s.push(mp(1,i));
		else
		{
			if (!s.empty())
			{
				x=s.top();
				//printf("%lld %lld\n",x.first,x.second);
				v.pb(x);
				s.pop();
				if (!s.empty())
				{
					y=s.top();
					s.pop();
					y.first=max(x.first+1,y.first);
					s.push(y);
				}
			}
		}
	}
	sort(v.begin(),v.end());
	while(!s.empty()) 
		s.pop();
	count=v.size();
	ans=0;
	for(i=0;i<count;i++)
	{
		j=v[i].first;
		while(v[i].first==j&&i<count)
		{
			s.push(mp(v[i].second,0));
			//output(query(v[i].second));
			ans+=query(v[i].second);
			i++;
		}
		if (v[i].first!=j) i--;
		while(!s.empty())
		{
			x=s.top();
			update(x.first,-1);
			update(x.first+1,-1);
			s.pop();
		}
	}
	output(ans);
}
return 0;
}
