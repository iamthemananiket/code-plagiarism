#pragma comment(linker, "/STACK:500000000")
#define _CRT_SECURE_NO_WARNINGS
#include <algorithm>
#include <bitset>
#include <functional>
#include <iostream>
#include <list>
#include <map>
#include <math.h>
#include <set>
#include <stack>
#include <stdio.h>
#include <stdlib.h>
#include <string>
#include <string.h>
#include <time.h>
#include <queue>
#include <utility>
#include <vector>
using namespace std;

#define y0 y0ChloeGraceMoretz
#define y1 y1ChloeGraceMoretz
#define ll long long
int nextInt() { int n; scanf("%d", &n); return n; }
ll nextLong() { ll n; scanf("%lld", &n); return n; }
const double PI = acos(-1.0);
const double EPS = 1e-9;
const int INF = (int)1e9;

char s[2][(int)2e5 + 9];
int dp[2][(int)2e5 + 9];

int main() {
	//freopen("input.in", "rt", stdin);
	//freopen("output.out", "wt", stdout);
	int t;
	scanf("%d%*c", &t);
	for (int tt = 0; tt < t; ++tt) {
		gets(s[0] + 1);
		gets(s[1] + 1);
		int n = strlen(s[0] + 1);
		for (int j = 1; j <= n; ++j) {
			for (int i = 0; i < 2; ++i) {
				dp[i][j] = INF;
				if (s[i][j] == '.') {
					dp[i][j] = min(dp[i][j], min(dp[i ^ 1][j - 1] + 1, dp[i][j - 1]));
				}
			}
			if (s[0][j] == '.' && s[1][j] == '.') {
				if (dp[0][j] + 1 < dp[1][j]) {
					dp[1][j] = dp[0][j] + 1;
				} else if (dp[1][j] + 1 < dp[0][j]) {
					dp[0][j] = dp[1][j] + 1;
				}
			}
		}
		if (min(dp[0][n], dp[1][n]) != INF) {
			printf("Yes\n");
			printf("%d\n", min(dp[0][n], dp[1][n]));
		} else {
			printf("No\n");
		}
	}
	return 0;
}