#include<bits/stdc++.h>
using namespace std;

// Numeric Constants
#define N 1000000007
#define maxs 200005
#define mins 1005
#define eps 0.000000000001
#define imax 2000000200
#define llmax 1000000002000000000ll
#define pi 3.141592653589793

// Others
#define ll long long
#define pb push_back
#define gc getchar_unlocked
#define iosbase ios_base::sync_with_stdio(false)
#define pii pair<int,int>
#define pll pair<ll,ll>
#define ppi pair<pair<int,int>,int>
#define ppl pair<pll,ll>
#define vi vector<int>
#define sc scanf
#define pr printf
#define lld I64d
#define F first
#define S second
#define siter set<int>::iterator
#define p_pq priority_queue
#define ub upper_bound
#define lb lower_bound

int a[maxs],b[maxs],mark[maxs][2][2],n;
int curr;

bool fun(int pos,int fl1,int fl2){
	if(pos==n){
		if(fl1==1){
			return 1;
		}
		else{
			return 0;
		}
	}
	if(mark[pos][fl1][fl2]!=-1){
		return mark[pos][fl1][fl2];
	}
	int t1=0,t2=0,t3=0;
	if(fl1==0){
		t1=a[pos-1];
	}
	if(fl2==0){
		t2=a[pos];
	}
	if(fl2!=1 && ((t1+b[pos])==curr) && fun(pos+1, 0,0)){
		return (mark[pos][fl1][fl2]=1);
	}
	if(fl2!=1 && (t1+b[pos]+a[pos+1]==curr) && fun(pos+1,0,1)){
		return (mark[pos][fl1][fl2]=1);
	}
	if((t1+t2+b[pos]==curr) && fun(pos+1,1,0)){
		return (mark[pos][fl1][fl2]=1);
	}
	if((t1+t2+a[pos+1]+b[pos]==curr) && fun(pos+1,1,1)){
		return (mark[pos][fl1][fl2]=1);
	}
	return (mark[pos][fl1][fl2]=0);
}

int main()
{
	int t,i,j,k;
	sc("%d",&t);
	while(t--){
		sc("%d",&n);
		for(i=0;i<n;i++){
			sc("%d",&a[i]);
		}
		a[n]=0;
		for(i=0;i<n;i++){
			sc("%d",&b[i]);
		}
		if(n==1){
			pr("%d\n",a[0]+b[0]);
			continue;
		}
		int ans=-1;
		curr=b[0];
		for(i=0;i<n;i++){
			for(j=0;j<2;j++){
				for(k=0;k<2;k++){
					mark[i][j][k]=-1;
				}
			}
		}
		if(fun(1,0,0)){
			ans=max(ans,curr);
		}
		for(i=0;i<n;i++){
			for(j=0;j<2;j++){
				for(k=0;k<2;k++){
					mark[i][j][k]=-1;
				}
			}
		}
		curr=b[0]+a[0];
		if(fun(1,1,0)){
			ans=max(ans,curr);
		}
		for(i=0;i<n;i++){
			for(j=0;j<2;j++){
				for(k=0;k<2;k++){
					mark[i][j][k]=-1;
				}
			}
		}
		curr=b[0]+a[1];
		if(fun(1,0,1)){
			ans=max(ans,curr);
		}
		for(i=0;i<n;i++){
			for(j=0;j<2;j++){
				for(k=0;k<2;k++){
					mark[i][j][k]=-1;
				}
			}
		}
		curr=b[0]+a[1]+a[0];
		if(fun(1,1,1)){
			ans=max(ans,curr);
		}
		pr("%d\n",ans);
	}
	return 0;
}