#include <bits/stdc++.h>

#define pb push_back
#define f first
#define s second
#define mp make_pair
#define fname "."
#ifdef _WIN32
#  define I64 "%I64d"
#else
#  define I64 "%lld"
#endif
#define pi pair < int, int >
#define pp pop_back
#define sz(a) (int)((a).size())
#define pd pair < int, ull >

typedef long long int ll;
typedef long double ld;
typedef unsigned long long ull;

const int MAX_N = (int)1e4 + 123;
const double eps = 1e-6;
const int mod = (int)1e9 + 7;
const int inf = (int)1e9 + 123;

using namespace std;

int n;
int b[MAX_N], a[MAX_N];

bool check(int v, bool tp, int x, int add) {
    if (x < 1)
        return 0;
    if (v == n)
        return (x == a[v] + (!tp ? b[v] : 0) + add);
    if (!tp && a[v] + b[v] + add == x && check(v + 1, 0, x, 0))
        return 1;
    if (a[v] + add == x && check(v + 1, 0, x, (!tp ? b[v] : 0)))
        return 1;
    if (a[v] + b[v + 1] + add == x && check(v + 1, 1, x, (!tp ? b[v] : 0)))
        return 1;
    if (!tp && a[v] + b[v] + b[v + 1] + add == x && check(v + 1, 1, x, 0))
        return 1;
    return 0;
}

void solve() {
    scanf("%d", &n);
    for (int i = 1; i <= n; i++)
        scanf("%d", &b[i]);
    for (int i = 1; i <= n; i++)
        scanf("%d", &a[i]);
    if (n == 1) {
        printf("%d\n", a[1] + b[1]);
        return;
    }
    int ans = -1;
    if (check(2, 0, a[1] + b[1], 0))
        ans = a[1] + b[1];
    if (check(2, 0, a[1], b[1]))
        ans = max(ans, a[1]);
    if (check(2, 1, a[1] + b[2], b[1]))
        ans = max(ans, a[1] + b[2]);
    if (check(2, 1, a[1] + b[2] + b[1], 0))
        ans = max(ans, a[1] + b[2] + b[1]);
    printf("%d\n", ans);
}

int main() {
    #ifdef Nick
    freopen(fname"in","r",stdin);
	#endif
    int t;
    scanf("%d", &t);
    while(t--)
        solve();
    return 0;
}
