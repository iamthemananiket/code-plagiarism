#include<iostream>
#include<climits>
#include<string>
#include<algorithm>
#include<map>
#include<vector>
#include<set>
#define N 10009
#define MOD 1000000007
using namespace std;
typedef long long int ll;
int main()
{
	int test;
	cin >> test;
	while (test--)
	{
		int A[N] = {};
		int B[N] = {};
		int n;
		cin >> n;
		ll sum = 0;
		for (int i = 1; i <= n; i++)
		{
			cin >> B[i];
			sum += B[i];
		}
		for (int i = 1; i <= n; i++)
		{
			cin >> A[i];
			sum += A[i];
		}
		if (sum%n != 0)
		{
			cout << -1 << endl;
			continue;
		}
		int target = sum / n;
		if (n == 1)
		{
			cout << target << endl;
			continue;
		}
		bool shaded[N] = {};
		bool found = true;
		for (int j = 1; j <= n; j++)
		{
			if (!shaded[j - 1])
			{
				A[j] += B[j - 1];
				shaded[j - 1] = true;
			}
			if (A[j] == target)
				continue;
			if (A[j] > target)
			{
				found = false;
				break;
			}
			if (!shaded[j] && A[j] + B[j] == target)
			{
				shaded[j] = true;
				continue;
			}
			if (!shaded[j + 1] && A[j] + B[j + 1] == target)
			{
				shaded[j + 1] = true;
				continue;
			}
			if (!shaded[j] && !shaded[j + 1] && A[j] + B[j] + B[j + 1] == target)
			{
				shaded[j] = true;
				shaded[j + 1] = true;
				continue;
			}
			found = false;
			break;
		}
		if (found && shaded[n])
			cout << target << endl;
		else
			cout << -1 << endl;
	}
}