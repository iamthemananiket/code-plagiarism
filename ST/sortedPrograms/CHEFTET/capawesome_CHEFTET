# include <cstdio>
# include <cstring>

using namespace std;

const int MAX_N = 10010;

int n;
int a[MAX_N];
int b[MAX_N];
int c[MAX_N];
int used[MAX_N];

inline int mabs (int x)
{
	return (x < 0) ? -x : x;
}

bool check (int sum)
{
	int i, r;
	c[1] = sum;
	for (i = 2; i <= n; i ++)
		c[i] = a[i];

	for (r = 2; r <= n; r ++)
	{
		if (!used[r - 1])
		{
			used[r - 1] = 1;
			c[r] += b[r - 1];
		}
		if (c[r] == sum)
			continue;
		if (!used[r] && c[r] + b[r] == sum)
		{
			used[r] = 1;
			c[r] += b[r];
			continue;
		}
		
		if (!used[r + 1] && c[r] + b[r + 1] == sum)
		{
			used[r + 1] = 1;
			c[r] += b[r + 1];
			continue;
		}
		if (!used[r] && !used[r + 1] && c[r] + b[r] + b[r + 1] == sum)
		{
			used[r] = used[r + 1] = 1;
			c[r] += b[r] + b[r + 1];
			continue;
		}
		return false;
	}
	for (i = 1; i <= n; i ++)
		if (!used[i] || c[i] != sum)
			return false;
	return true;
}

int main ()
{
	int t;
	scanf ("%d", &t);
	while (t --)
	{
		int i, ans = -1;
		scanf ("%d", &n);
		for (i = 1; i <= n; i ++)
			scanf ("%d", &b[i]);
		for (i = 1; i <= n; i ++)
			scanf ("%d", &a[i]);
			
		memset (used, 0, sizeof (used));
		if (check (a[1]))
			ans = a[1];
			
		memset (used, 0, sizeof (used));
		used[1] = 1;
		if (check (a[1] + b[1]))
			ans = a[1] + b[1];
		
		memset (used, 0, sizeof (used));
		used[2] = 1;
		if (n >= 2 && check (a[1] + b[2]))
			ans = a[1] + b[2];
		
		
		memset (used, 0, sizeof (used));
		used[1] = 1;
		used[2] = 1;	
		if (n >= 2 && check (a[1] + b[1] + b[2]))
			ans = a[1] + b[1] + b[2];
		printf ("%d\n", ans);
	}
	return 0;
}
