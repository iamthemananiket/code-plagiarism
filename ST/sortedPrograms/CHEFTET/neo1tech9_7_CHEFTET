#include <iostream>
#include <iosfwd>
#include <iomanip>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <ctime>
#include <cmath>
#include <cassert>
#include <cctype>
#include <climits>
#include <vector>
#include <bitset>
#include <set>
#include <queue>
#include <stack>
#include <map>
#include <deque>
#include <string>
#include <list>
#include <iterator>
#include <sstream>
#include <complex>
#include <fstream>
#include <functional>
#include <numeric>
#include <utility>
#include <algorithm>
#include <assert.h>
#include <unordered_map>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef double ld;
typedef vector < long long > vll;
typedef pair <long long, long long> pll;
typedef pair <int, int> pii;
typedef vector < int > vii;
typedef complex < double > Point;

#define csl ios_base::sync_with_stdio(false); cin.tie(NULL)
#define mp make_pair
#define fst first
#define snd second
#define prev PREV
ll t, n, m, u, v, q, r, ql, qr, k, l, s, w, z, x, y, d;
const int N = 1e6 + 500;
const int K = 1001;
const int LN = 20;
const long long mod = 1e9 + 7;
const long long INF = 1LL << 52LL;
ll A[N], B[N];
int main() {
    csl;
    cin >> t;
    while (t--) {
        ll sum = 0;
        cin >> n;
        for (int i = 1; i <= n; ++i) {
            cin >> B[i];
            sum += B[i];
        }
        for (int i = 1; i <= n; ++i) {
            cin >> A[i];
            sum += A[i];
        }
        if (sum % n != 0) {
            cout << -1 << '\n';
            continue;
        }
        sum /= n;
        A[0] = B[0] = A[n + 1] = B[n + 1] = 0;
        for (int i = 1; i <= n; ++i) {
            if ((i - 1) && A[i - 1] < sum) {
                A[i - 1] += B[i];
                B[i] = 0;
                continue;
            }
            if (A[i] + B[i] == sum) {
                A[i] += B[i];
                B[i] = 0;
                continue;
            }
            if (A[i] + B[i] > sum) {
                A[i + 1] += B[i];
                B[i] = 0;
                continue;
            }
            if (A[i] + B[i + 1] == sum) {
                A[i + 1] += B[i];
                B[i] = 0;
                continue;
            }
            A[i] += B[i];
            B[i] = 0;
        }
        bool fine = true;
        for (int i = 1; i <= n; ++i) {
            if (A[i] != sum || B[i]) fine = false;
        }
        if (fine)
        cout << sum << '\n';
        else cout << -1 << '\n';
    }
    return 0;
}



