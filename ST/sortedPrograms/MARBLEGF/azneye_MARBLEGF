/*
 * 2013 Codechef December Challenge
 * Funny Marbles
 * File:   MARBLEGF.cpp
 * Author: Andy Y.F. Huang
 * Created on 2013-12-06, 4:53:38 PM
 */

#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstddef>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <complex>
#include <deque>
#include <fstream>
#include <functional>
#include <iomanip>
#include <iostream>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <valarray>
#include <vector>

using namespace std;

namespace MARBLEGF {
typedef long long ll;
int N, Q;
ll bit[1 << 20];

void update(int i, int v) {
  for (i++; i <= N; i += i & -i)
    bit[i] += v;
}

ll get(int i) {
  ll res = 0;
  for (i++; i > 0; i -= i & -i)
    res += bit[i];
  return res;
}

void solve(int test_num) {
  memset(bit, 0, sizeof(bit));
  scanf("%d %d", &N, &Q);
  for (int i = 0, x; i < N; i++) {
    scanf("%d", &x);
    update(i, x);
  }
  for (int q = 0, a, b; q < Q; q++) {
    char ty;
    scanf(" %c %d %d", &ty, &a, &b);
    if (ty == 'S')
      printf("%lld\n", get(b) - get(a - 1));
    else if (ty == 'G')
      update(a, b);
    else
      update(a, -b);
  }
}

void solve() {
#ifdef AZN
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
  freopen("azn.txt", "w", stderr);
#endif
  solve(1);
}
}

int main() {
  MARBLEGF::solve();
  return 0;
}
