#include <bits/stdc++.h>

using namespace std;

#define X first
#define Y second
#define INPUT freopen("lcha12.inp","r",stdin)
#define OUTPUT freopen("lcha12.out","w",stdout)
#define FOR(i,l,r) for(auto i=(l);i<=(r);i++)
#define REP(i,l,r) for(auto i=(l);i<(r);i++)
#define FORD(i,l,r) for(auto i=(l);i>=(r);i--)
#define REPD(i,l,r) for(auto i=(l);i>(r);i--)
#define ENDL printf("\n")
#define debug 1

typedef long long ll;
typedef pair<int,int> ii;

const int inf=1e9;
const int MOD=1e9+7;
const int N=10,M=1e5+10;

string s;
int f[2][1<<N],c[1<<N],p2[M];
void aprepare(){
    p2[0]=1;
    REP(i,1,M) p2[i]=p2[i-1]*2%MOD;
}
void prepare(){
    cin>>s;
    int st=0;
    REP(i,0,N) st=2*st+(s[i]=='b');
    memset(f[0],0,sizeof(f[0]));
    f[0][st]=1;
    int n;
    cin>>n;
    memset(c,0,sizeof(c));
    while (n--){
        cin>>s;
        int cur=0;
        REP(i,0,N) cur=cur*2+(s[i]=='+');
        c[cur]++;
    }
    //
}
int solve(){
    int cur=0;
    REP(i,0,1<<N) if (c[i]){
        int last=cur;
        cur^=1;
        memset(f[cur],0,sizeof(f[cur]));
        ll way=p2[c[i]-1];
        REP(j,0,1<<N){
            f[cur][j]=(f[cur][j]+way*f[last][j])%MOD;
            f[cur][j^i]=(f[cur][j^i]+way*f[last][j])%MOD;
        }
    }
    return f[cur][(1<<N)-1];
}
int main(){
    aprepare();
    int test;
    cin>>test;
    while (test--){
        prepare();
        cout<<solve()<<'\n';
    }
}
