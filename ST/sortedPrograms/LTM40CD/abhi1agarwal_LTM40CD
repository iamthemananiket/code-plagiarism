/*
_._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._.

	Abhinandan Agarwal
_._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._.*/
#include<bits/stdc++.h>
using namespace std;
#define pc putchar_unlocked
#define gc getchar_unlocked
typedef long long ll;
typedef unsigned long long llu;
#define mp make_pair
#define pb push_back
#define sc(x) scanf("%d",&x)
#define sc2(x,y) scanf("%d%d",&x,&y)
#define sc3(x,y,z) scanf("%d%d%d",&x,&y,&z)
#define scl(x) scanf("%lld",&x)
#define scl2(x,y) scanf("%lld%lld",&x,&y)
#define scl3(x,y,z) scanf("%lld%lld%lld",&x,&y,&z)
#define scstr(x) scanf("%s",x)
#define pd(x) printf("%d",x)
#define pstr(x) printf("%s",x)
#define newl() printf("\n")
#define fl(i,n) for (i=0;i<n;i++)
#define fle(i,n) for (i=1;i<=n;i++)
#define fla(i,a,n) for (i=a;i<n;i++)
#define mem(a,i) memset(a,i,sizeof(a))
#define fi first
#define se second
typedef pair<int,int> pii;
typedef pair<int,pair<int,int> > piii ;
typedef pair<ll,ll> pll;
typedef pair<ll,int> pli;
#define gcd __gcd
#define wl(n) while (n--)
#define debug(x) cout<<"debug->"<<#x<<"::"<<x<<endl
#define debug2(x,y) cout<<#x<<" :: "<<x<<"\t"<<#y<<" :: "<<y<<"\n"
#define debug3(x,y,z) cout<<#x<<" :: "<<x<<"\t"<<#y<<" :: "<<y<<"\t"<<#z<<" :: "<<z<<"\n"
#define tr(container, it)  for(typeof(container.begin()) it = container.begin(); it != container.end(); it++) 
#define all(v) v.begin(),v.end()
const double eps=0.000000000000001 ;
#define MOD 1000000007
typedef long double LF;
typedef double lF;
//-------------
struct aa
{
	int x,y,z;
};

aa ans[100010];
int c=0;
set<pair<pii,int> >s;
ll ar(ll x,ll y,ll z)
{
	ll s=(x+y+z);
	if (s*(s-2*x)*(s-2*y)*(s-2*z)>0)
		return 1;
	return 0;
}
#define lim 200000
int v[10];
//vector<int>fac[lim+5];

//int fac[lim+1][1000];
pii fac[100*lim];
int p;
int pp[lim+10];
int main()
{
	ll i,j,k;
	ll r;
	scl(r);
	ll lol=r*r*4;
	for (i=1;i<=lim;i++)
	{
		for (j=i;j<=lim;j+=i)
		{

			//fac[j].insert(fac[j].begin(),i);
			fac[p++]=mp(j,i);
		}
	}
	//return 0;
	sort(fac,fac+p);
	int loda=sqrtl(lim);
	memset(pp,-1,sizeof(pp));
	for (i=0;i<p;i++)
	{	
		if(pp[fac[i].fi]==-1)
		{
			pp[fac[i].fi]=i;
		}
	}
	for (i=1;i<=loda;i++)
	{
		int aag=lim/i;
		for(j=1;j<=aag;j++)
		{
			//for (k=1;k<=300;k++)
			ll alpha=i*j;
			int z;
			//vector<int>::iterator it=fac[alpha].begin();
			//int hagga=p[alpha];
			pii *it=&fac[pp[alpha]];
			for (z=0;(*it).fi==alpha;z++,it++)
			{

					if (alpha<=lol||((((*it).se)+alpha/(((*it).se)))*lol)%(alpha-lol)!=0)
						continue;
					if ((((*it).se)>alpha/(((*it).se))))
						continue;
					k=((((*it).se)+alpha/(((*it).se)))*lol)/(alpha-lol);


					//k=(lol*i*j)/(i*j-lol);
					if ((i*j*k)%(i+j+k)==0&&(i*j*k)/(i+j+k)==lol&&(i+j)%2==0&&(j+k)%2==0&&(i+k)%2==0)
					{

					//	vector<int>v;v.clear();
						v[0]=(i+j>>1);
						v[1]=(j+k>>1);
						v[2]=(i+k>>1);
						sort(v,v+3);
						if (v[0]>0&&v[1]>0&&v[2]>0)//&&ar(v[0],v[1],v[2])>0)
							s.insert(mp(mp(v[0],v[1]),v[2]));
					}
				
			}	
		}

	}	
	printf("%lu\n",s.size());
	set<pair<pii,int> >::iterator it;
	it=s.begin();
	while (it!=s.end())
	{
		//pair<pii,int> c=*it;
		
		printf("%d %d %d\n",it->fi.fi,it->fi.se,it->se);
		it++;
	}

	return 0;

}