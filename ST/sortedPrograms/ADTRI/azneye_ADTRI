/*
 *
 * File: stuff.cpp
 * Author: Andy Y.F. Huang (azneye)
 * Created on Aug 23, 2014, 11:50:25 PM
 */

#include <bits/stdc++.h>

using namespace std;

namespace stuff {
typedef long long ll;
const int MOD = int(1e9) + 7;
const int MAX = 5000000;
bool was[MAX + 1];

void solve(int test_num) {
  memset(was, false, sizeof(was));
  for (int x = 1; x * x <= MAX; ++x) {
    for (int y = x + 1; x * x + y * y <= MAX; ++y) {
      was[x * x + y * y] = true;
    }
  }
  for (int x = 5; x <= MAX; ++x) {
    if (was[x]) {
      for (int y = x + x; y <= MAX; y += x) {
        was[y] = true;
      }
    }
  }
  int Q;
  cin >> Q;
  for (int q = 0, x; q < Q; ++q) {
    cin >> x;
    if (was[x]) {
      cout << "YES\n";
    } else {
      cout << "NO\n";
    }
  }
}

void solve() {
#ifdef AZN
//make_case();
  double start_t = clock();
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
//freopen("azn.txt", "w", stderr);
#endif
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  int T = 1;
//scanf("%d", &T);
//cin >> T;
  for (int t = 1; t <= T; t++)
    solve(t);
#ifdef AZN
  cerr << fixed << setprecision(3) << "Took: " << ((clock() - start_t) / CLOCKS_PER_SEC);
#endif
}
}

int main() {
  stuff::solve();
  return 0;
}
