/***************************************
    codeforces = topcoder = sahedsohel
    IIT,Jahangirnagar University(42)
****************************************/
#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <sstream>
#include <iomanip>
#include <string>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <algorithm>
#include <iterator>
#include <utility>
using namespace std;

#define ll long long int
#define ull unsigned long long int
#define inf (INT_MAX/10)
#define linf (LLONG_MAX/10LL)
#define sc(a) scanf("%d",&a)
#define sc2(a,b) scanf("%d%d",&a,&b)
#define sc3(a,b,c) scanf("%d%d%d",&a,&b,&c)
#define sc4(a,b,c,d) scanf("%d%d%d%d",&a,&b,&c,&d)
#define fl(c,i,n) for(i=c;i<n;i++)
#define f(i,n) for(i=0;i<n;i++)
#define mem(a) memset(a,0,sizeof(a))
#define memn(a) memset(a,-1,sizeof(a))
#define pb push_back
#define pp pop_back()
#define aov(a) a.begin(),a.end()
#define mpr make_pair
#define PI (2.0*acos(0.0)) //#define PI acos(-1.0)
#define xx first
#define yy second
#define mxv(a) *max_element(aov(a))
#define mnv(a) *min_element(aov(a))
#define LB(a,x) (lower_bound(aov(a),x)-a.begin())
#define UB(a,x) (upper_bound(aov(a),x)-a.begin())
#define to_c_string(a) a.c_str()
#define strtoint(c) atoi(&c[0])
#define pii pair< int , int >
#define pll pair< ll , ll >
#define pcs(a) printf("Case %d: ", a)
#define nl puts("")
#define dbg(x) cout<<#x<<" : "<<x<<endl

template <class T> inline T bigmod(T p,T e,T M){ll ret = 1;for(; e > 0; e >>= 1){if(e & 1) ret = (ret * p) % M;p = (p * p) % M;}return (T)ret;}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}   // M is prime}
template <class T> inline T bpow(T p,T e){ll ret = 1;for(; e > 0; e >>= 1){if(e & 1) ret = (ret * p);p = (p * p);}return (T)ret;}

int toInt(string s){int sm;stringstream ss(s);ss>>sm;return sm;}
int toLlint(string s){long long int sm;stringstream ss(s);ss>>sm;return sm;}


///int mnth[]={-1,31,28,31,30,31,30,31,31,30,31,30,31};  //Not Leap Year
///int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
///int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
///int dx[]={-1,-1,+0,+1,+1,+0};int dy[]={-1,+1,+2,+1,-1,-2}; //Hexagonal Direction
///const double eps=1e-6;
///int dx[]={0,1,0,-1};int dy[]={1,0,-1,0}; //4 Direction

/*****************************************************************/
/// ////////////////////   GET SET GO    ////////////////////// ///
/*****************************************************************/

#define M 100005
#define MD 1000000007LL
#define MX 1000000009LL

int n,x,y,t;
ll p[M*4][2],sm[M*4],v;

void bld(int i,int l,int r)
{
    p[i][0]=1LL;
    p[i][1]=0LL;
    if(l==r)
    {
        scanf("%lld",&p[i][1]);
        sm[i]=p[i][1];
        return ;
    }
    bld(i*2+1,l,(l+r)/2);
    bld(i*2+2,(l+r)/2+1,r);
    sm[i]=(sm[i*2+1]+sm[i*2+2])%MD;
}

void updt(int i,int l,int r,ll p0,ll p1)
{
    p[i][0]=(p[i][0]*p0)%MD;
    p[i][1]=(p[i][1]*p0+p1)%MD;
    if(x<=l&&r<=y)
    {
        if(t==1)
        {
            p[i][1]=(p[i][1]+v)%MD;
        }
        else if(t==2)
        {
            p[i][0]=(p[i][0]*v)%MD;
            p[i][1]=(p[i][1]*v)%MD;
        }
        else
        {
            p[i][0]=0;
            p[i][1]=v;
        }
    }
    if(l==r)
        sm[i]=p[i][1];
    else
        sm[i]=( ((sm[i*2+1]+sm[i*2+2])*p[i][0])%MD + (p[i][1]*(r-l+1LL))%MD )%MD;
    if(r<x||l>y)return ;
    if(x<=l&&r<=y)
        return ;
    updt(i*2+1,l,(l+r)/2,p[i][0],p[i][1]);
    updt(i*2+2,(l+r)/2+1,r,p[i][0],p[i][1]);
    sm[i]=(sm[i*2+1]+sm[i*2+2] )%MD;
    p[i][0]=1LL;
    p[i][1]=0LL;
}

ll rs;

void qry(int i,int l,int r,ll p0,ll p1)
{
    p[i][0]=(p[i][0]*p0)%MD;
    p[i][1]=(p[i][1]*p0+p1)%MD;
    if(l==r)
        sm[i]=p[i][1];
    else
        sm[i]=( ((sm[i*2+1]+sm[i*2+2])*p[i][0])%MD + (p[i][1]*(r-l+1LL))%MD )%MD;
    if(r<x||l>y)return ;
    if(x<=l&&r<=y)
    {
        rs=(rs+sm[i])%MD;
        return ;
    }
    qry(i*2+1,l,(l+r)/2,p[i][0],p[i][1]);
    qry(i*2+2,(l+r)/2+1,r,p[i][0],p[i][1]);
    sm[i]=(sm[i*2+1]+sm[i*2+2] )%MD;
    p[i][0]=1LL;
    p[i][1]=0LL;
}



int main()
{
    int i,j,k,m;
    sc2(n,m);
    bld(0,1,n);
    while(m--)
    {
        sc3(t,x,y);
        if(t==4)
        {
            rs=0LL;
            qry(0,1,n,1LL,0LL);
            printf("%lld\n",rs);
            continue;
        }
        scanf("%lld",&v);
        updt(0,1,n,1LL,0LL);
    }

    return 0;
}
