#include <bits/stdc++.h>
#define rep(i,x,y) for (int i = (x); i<=(y); i++)
#define repe(i,x,y) for (int i = (x); i < (y);i++)
#define drep(i,x,y) for (int i = (x); i >= (y); i--)
#define mp make_pair
#define pb push_back
#define MAX(a,b) (((a)>(b))?(a):(b))
#define MIN(a,b) (((a)<(b))?(a):(b))
#define MAXN 100100
#define	s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define pr(n) printf("%d",n)
#define prl(n) printf("%lld",n)
#define endc printf("\n")
#define psp printf(" ")
using namespace std;
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;

ll A[MAXN];
ll P[4*MAXN];
ll Q[4*MAXN]; // x*P + Q
ll sum[4*MAXN];
int n;

const ll MD = 1e9 + 7;

void push(int x,int l,int r) {
	P[x*2] = (P[x*2] * P[x])%MD;
	Q[x*2] = (Q[x*2] * P[x] + Q[x])%MD;
	P[x*2 + 1] = (P[x*2 + 1] * P[x])%MD;
	Q[x*2 + 1] = (Q[x*2 + 1] * P[x] + Q[x])%MD;
	int mid = (l+r)/2;
	l = MAX(l,1);
	r = MIN(r,n);
	ll sz1 = mid - l + 1;
	ll sz2 = r - (mid+1) + 1;
	sum[x*2] = ((sum[x*2] * P[x])%MD + (Q[x] * sz1)%MD )%MD;
	sum[x*2 + 1] = ((sum[x*2 + 1] * P[x])%MD + (Q[x] * sz2)%MD)%MD;

	P[x] = 1; Q[x] = 0;
}

void update(int x,int l,int r,int i,int j,ll a,ll b) {
	if ((j<l) or (r<i)) return;
	if ((i<=l) and (r<=j)) {
		ll sz = (MIN(r,n) - MAX(1,l) + 1);
		P[x] = (P[x]*a)%MD; Q[x] = (Q[x]*a)%MD; Q[x] = (Q[x] + b)%MD;
		sum[x] = ((sum[x]*a)%MD + (b*sz)%MD )%MD; return;
	}
	push(x,l,r);
	int mid = (l+r)/2;
	update(x*2,l,mid,i,j,a,b); update(x*2 + 1,mid+1,r,i,j,a,b);
	sum[x] = (sum[x*2] + sum[x*2 + 1])%MD;
}

ll query(int x,int l,int r,int i,int j) {
	if ((j<l) or (r<i)) return 0;
	if ((i<=l) and (r<=j)) return sum[x];
	push(x,l,r);
	int mid = (l+r)/2;
	return ( query(x*2,l,mid,i,j) + query(x*2 + 1,mid+1,r,i,j) )%MD;
}

void init(int x,int l,int r) {
	P[x] = 1; Q[x] = 0;
	if (l == r) {
		sum[x] = A[l]; return;
	}
	int mid = (l+r)/2;
	init(x*2,l,mid); init(x*2 + 1,mid+1,r);
	sum[x] = (sum[x*2] + sum[x*2 + 1])%MD;
}

int main() {
	int q; s(n); s(q); rep(i,1,n) sl(A[i]);
	
	init(1,1,n);

	while (q--) {
		int op; s(op); int x,y; ll v;
		if (op == 1) {
			s(x); s(y); sl(v);
			update(1,1,n,x,y,1,v);
		} else if (op == 2) {
			s(x); s(y); sl(v);
			update(1,1,n,x,y,v,0);
		} else if (op == 3) {
			s(x); s(y); sl(v);
			update(1,1,n,x,y,0,v);
		} else {
			s(x); s(y);
			prl(query(1,1,n,x,y)); endc;
		}
	}
	return 0;
}
