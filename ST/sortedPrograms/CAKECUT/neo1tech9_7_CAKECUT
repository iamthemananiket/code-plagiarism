#include <iostream>
#include <iosfwd>
#include <iomanip>
#include <cstdio>
#include <cstring>
#include <cstdlib>
#include <ctime>
#include <cmath>
#include <cassert>
#include <cctype>
#include <climits>
#include <vector>
#include <bitset>
#include <set>
#include <queue>
#include <stack>
#include <map>
#include <deque>
#include <string>
#include <list>
#include <iterator>
#include <sstream>
#include <complex>
#include <fstream>
#include <functional>
#include <numeric>
#include <utility>
#include <algorithm>
#include <assert.h>
#include <unordered_map>
using namespace std;

typedef long long ll;
typedef unsigned long long ull;
typedef double ld;
typedef vector < long long > vll;
typedef pair <long long, long long> pll;
typedef pair <int, int> pii;
typedef vector < int > vii;
typedef complex < double > Point;

#define csl ios_base::sync_with_stdio(false); cin.tie(NULL)
#define mp make_pair
#define fst first
#define snd second
#define prev PREV
ll t, n, m, u, v, q, r, ql, qr, k, l, s, w, z, x, y;
const int N = 1510;
const int LN = 19;
const long long mod = 1e9 + 7;
const long long INF = 1LL << 52LL;
bitset <N> f[N];
bitset <N> K;
string g[N];
int a[N][N];
int main() {
    csl;
    cin >> n >> m;
    for (int i = 1; i <= n; ++i) {
        cin >> g[i];
        for (int j = 0; j < m; ++j) {
            a[i][j + 1] = g[i][j] - '0';
            a[i][j + 1] ^= a[i][j];
        }
    }
    for (int i = 1; i <= n; ++i) {
        for (int j = 1; j <= m; ++j) {
            if (a[i][j])
                f[i].set(j);
        }
    }
    ll sol = 0;
    for (int i = 1; i <= n; ++i) {
        K.reset();
        for (int j = i; j <= n; ++j) {
            K ^= f[j];
            int ones = K.count();
            int zeroes = m - ones;
            sol += (1LL * ones) * (ones - 1) / 2LL;
            sol += (1LL * zeroes) * (zeroes - 1) / 2LL;
            sol += zeroes;
        }
    }
    cout << sol << '\n';
    return 0;
}






