#include <algorithm>
#include <iostream>
#include <cassert>
#include <cstring>
#include <cstdio>
#include <deque>

using namespace std;

typedef long long lli;

lli dp[5010][5010];
int N,K,D,M;

lli pref[5010];

lli sum(int i, int j){
	if(j < i) return 0;
	return pref[j]-(i ? pref[i-1] : 0);
}


lli g(int i, int j){
	return sum(i+1,j-1)*M;
}

int Q[5010];
int H,T;

lli compute(){

	int i,k;

	dp[N][0] = 0;
	for(k = 1; k <= K; ++k) dp[N][k] = - (1LL<<60);
	for(i = 0; i < N; ++i){
		dp[i][0] = sum(i,N-1);
	}

	for(k=1; k <= K; ++k){
		H = T = 0;
		Q[T++] = N;

		for(i = N-1; i >= 0; --i){
			dp[i][k] = dp[i+1][k]+sum(i,i);
			while(H < T && Q[H] > i+D+1){
				++H;
			}

			if(H < T){
				dp[i][k] = max(dp[i][k], dp[Q[H]][k-1] + g(i,Q[H]));
			}
			while(H < T){
				if(dp[Q[T-1]][k-1]+g(i-1,Q[T-1]) < dp[i][k-1]) --T;
				else break;
			}
			Q[T++] = i;
		}
	}

	return dp[0][K];
}

int main(){

	int t;
	scanf("%d",&t);
	int i;
	while(t--){
		scanf("%d%d%d%d",&N,&K,&D,&M);
		for(i = 0; i < N; ++i) scanf("%lld",&pref[i]);
		for(i =1; i < N; ++i) pref[i] += pref[i-1];
		printf("%lld\n",compute());
	}


	return 0;
}
