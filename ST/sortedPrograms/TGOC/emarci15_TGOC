#include <cstdio>

using namespace std;

bool dp[50][50][50][50];
bool lq[50][50][50][50];
bool bq[50][50][50][50];
bool lbq[50][50][50][50];

bool ddp[50][50][50][50];

int T;
int xk,yk,xq,yq;

int main()
{
    /*for(int i=0; i<50; i++) {
        for(int j=0; j<50; j++) {
            for(int k=0; k<50; k++) {
                for(int l=0; l<50; l++) {
                    lq[i][j][k][l] = ((l > 0) && (lq[i][j][k][l-1]));
                    bq[i][j][k][l] = ((k > 0) && (bq[i][j][k-1][l]));
                    lbq[i][j][k][l] = ((k > 0) && (l > 0) && (lbq[i][j][k-1][l-1]));

                    if((i==k) && (j==l)) {
                        dp[i][j][k][l] = 1;
                        lq[i][j][k][l] = lbq[i][j][k][l] = bq[i][j][k][l] = 0;
                        continue;
                    }

                    if(lq[i][j][k][l] || bq[i][j][k][l] || lbq[i][j][k][l] ||
                       (((i>=2) && (j>=1) && (!dp[i-2][j-1][k][l])) ||
                       ((i>=1) && (j>=2) && (!dp[i-1][j-2][k][l])))) {
                            dp[i][j][k][l] = 1;
                    } else {
                        lq[i][j][k][l] = lbq[i][j][k][l] = bq[i][j][k][l] = 1;
                    }
                }
            }
        }
    }*/

    for(int i=0; i<50; i++) {
        for(int j=0; j<50; j++) {
            for(int k=0; k<50; k++) {
                for(int l=0; l<50; l++) {
                    //if((i==k) && (j==l)) {
                    //    ddp[i][j][k][l] = 1;
                    //    continue;
                    //}

                    for(int m=k-1; m>=0; m--) {
                        //if((i==m) && (j==l)) break;
                        if(!ddp[i][j][m][l]) ddp[i][j][k][l] = 1;
                    }
                    for(int m=l-1; m>=0; m--) {
                        //if((i==k) && (j==m)) break;
                        if(!ddp[i][j][k][m]) ddp[i][j][k][l] = 1;
                    }
                    for(int m=k-1,n=l-1; (m>=0) && (n>=0); m--,n--) {
                        //if((i==m) && (j==n)) break;
                        if(!ddp[i][j][m][n]) ddp[i][j][k][l] = 1;
                    }

                    int m = i-2;
                    int n = j-1;//(!((m==k)&&(n==l))) && (!((m==k)&&(n==l))) &&
                    if((m>=0) && (n>=0) && (!ddp[m][n][k][l])) ddp[i][j][k][l] = 1;
                    m = i-1;
                    n = j-2;
                    if((m>=0) && (n>=0) && (!ddp[m][n][k][l])) ddp[i][j][k][l] = 1;
                }
            }
        }
    }

    for(scanf("%d",&T); T--;) {
        scanf("%d%d%d%d",&xk,&yk,&xq,&yq);
        //if((xk==xq) && (yk==yq)) return 101;

        if(ddp[xk][yk][xq][yq]) {
            printf("WIN\n");
        } else printf("LOSE\n");
    }

    return 0;
}
