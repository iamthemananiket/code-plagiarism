#include <bits/stdc++.h>

using namespace std;

const int N = 1e3 + 4;

bool isBipartite;
int color[N];
bool a[N][N];

int n, m;

void dfs(int u, int c) {
    color[u] = c;
    for (int v = 1; v <= n; ++v) if (a[u][v]) {
        if (color[v] != -1) {
            if (color[v] == c) {
                isBipartite = false;
            }
        } else {
            dfs(v, !c);
        }
    }
}

int main() {
    ios::sync_with_stdio(false);
    int ntest; cin >> ntest;
    while (ntest--) {
        cin >> n >> m;
        for (int i = 1; i <= n; ++i)
            for (int j = 1; j <= n; ++j)
                a[i][j] = i != j;
        for (int i = 1; i <= m; ++i) {
            int u, v;
            cin >> u >> v;
            a[u][v] = a[v][u] = false;
        }
        isBipartite = true;
        for (int i = 1; i <= n; ++i) color[i] = -1;
        for (int i = 1; i <= n; ++i) if (color[i] == -1)
            dfs(i, 0);
        cout << (isBipartite ? "YES\n" : "NO\n");
    }
    return 0;
}