#include<bits/stdc++.h>
 using namespace std;

 const int N = 1e3 + 121;
 int last[N],usd[N],kol,t,tt,n,b[N][N],i,j,m,P;
 char a[N][N];

 void dfs(int v,int p)
 {
    usd[v] = p;
    ++p;
    if(p>2) p = 1;
    for(int i=1;i<=last[v];++i)
    if(usd[b[v][i]] == usd[v])
    {
        tt = 1;
        return;
    } else
    if(usd[b[v][i]] == 0) {
        dfs(b[v][i],p);
        if(tt) return;
    }
 }

  int main()
  {

    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    cout.tie(NULL);

     cin>>t;
      while(t--)
      {
        cin>>n;
         for(i=1;i<=n;++i) last[i] = usd[i] = 0;
         for(i=1;i<=n;++i)
         for(j=1;j<=n;++j)
          a[i][j] = 0;
         cin>>m;
          while(m--)
          {
            cin>>i>>j;
            a[i][j] = a[j][i] = 1;
          }

          for(i=1;i<=n;++i)
          for(j=1;j<=n;++j)
          if(!a[i][j] && i!=j) b[i][++last[i]] = j;


          tt = 0;

          for(i=1;i<=n;++i)
            if(!usd[i])
            {
                dfs(i,1);
                if(tt) break;
            }
            if(tt) cout<<"NO\n"; else cout<<"YES\n";

      }

    return 0;
  }
