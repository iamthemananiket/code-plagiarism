/*********************************************************************\
   |--\        ---       /\        |-----------| -----   /-------|    |
   |   \        |       /  \       |               |    /             |
   |    \       |      /    \      |               |   |              |
   |     \      |     /      \     |               |   |----|         |
   |      \     |    / ------ \    |-------|       |        |-----|   |
   |       \    |   /          \   |               |              |   |
   |        \   |  /            \  |               |              /   |
  ---        -------            ------           ----- |---------/    |
                                                                      |
    codeforces = nfssdq  ||  topcoder = nafis007                      |
    mail = nafis_sadique@yahoo.com || nfssdq@gmail.com                |
    IIT,Jahangirnagar University(41)                                  |
                                                                      |
**********************************************************************/

#include <bits/stdc++.h>
using namespace std;

#define xx         first
#define yy         second
#define pb         push_back
#define mp         make_pair
#define LL         long long
#define inf        INT_MAX/3
#define mod        1000000007ll
#define PI         acos(-1.0)
#define linf       (1ll<<60)-1
#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     ((A).begin(), (A).end())
#define set0(ar)   memset(ar,0,sizeof ar)
#define vsort(v)   sort(v.begin(),v.end())
#define setinf(ar) memset(ar,126,sizeof ar)

//cout << fixed << setprecision(20) << p << endl;

template <class T> inline T bigmod(T p,T e,T M){
    LL ret = 1;
    for(; e > 0; e >>= 1){
        if(e & 1) ret = (ret * p) % M;
        p = (p * p) % M;
    } return (T)ret;
}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}


typedef unsigned long long  ULL;
ULL  bitTwister(ULL x, ULL y){
  x ^= x >> 11;
  x ^= (x << 7) & 2636928640u;
  x ^= (x << 15) & 4022730752u;
  x ^= (x >> 18);
  return (1812433253u * (x ^ (x >> 30)) + y) & 4294967295u;
}

vector < int > vc[100001], vp[100001];
int ST[100001], ED[100001], val[100001], dis[100001], t;

void dfs(int c, int p, int d){
    ST[c] = ++t;
    vp[d].pb(t);
    val[t] = c;
    dis[c] = d;

    REP(i, vc[c].size()){
        dfs(vc[c][i], c, d + 1);
    }
    ED[c] = t;
}

map < pair < int, int >, ULL > mm;
ULL ar[100001];
int main() {
    ios_base::sync_with_stdio(0); cin.tie(0);
//    cout << bitTwister(869965676u, 3271951378u) << endl;
    int T; cin >> T;
    while(T--){
        int n, q; cin >> n >> q;
        FOR(i, 1, n+1) cin >> ar[i];
        FOR(i, 1, n+1){
            vc[i].clear();
            vp[i].clear();
        }

        FOR(i, 2, n+1){
            int x; cin >> x;
            vc[x].pb(i);
        }

        t = 0;
        dfs(1, 0, 1);

        mm.clear();

        while(q--){
            int v, d; cin >> v >> d;

            d += dis[v];
            int lb = lower_bound(vp[d].begin(), vp[d].end(), ST[v]) - vp[d].begin();
            int rb = upper_bound(vp[d].begin(), vp[d].end(), ED[v]) - vp[d].begin();
            rb--;

            if(mm.count(mp(vp[d][lb], vp[d][rb]))){
                cout << mm[mp(vp[d][lb], vp[d][rb])] << "\n";
                continue;
            }

            ULL vv = ar[ val[vp[d][lb]] ];
            for(int j = lb+1; j <= rb; j++){
                vv = bitTwister(vv, ar[ val[vp[d][j]] ]);
            }
            mm[mp(vp[d][lb], vp[d][rb])] = vv;
            cout << mm[mp(vp[d][lb], vp[d][rb])] << "\n";

        }
    }
}
