#include <bits/stdc++.h>
using namespace std;

#define repu(i, a, b) for (int i = (a); i < (b); ++i)
#define repd(i, a, b) for (int i = (a); i > (b); --i)
#define mem(a, x) memset(a, x, sizeof(a))
#define all(a) a.begin(), a.end()
#define uni(a) a.erase(unique(all(a)), a.end())

typedef long long ll;
const int MOD = 1000000007;

template<class T, class U> inline T tmin(T a, U b) {return (a < b) ? a : b;}
template<class T, class U> inline T tmax(T a, U b) {return (a > b) ? a : b;}
template<class T, class U> inline void amax(T &a, U b) {if (b > a) a = b;}
template<class T, class U> inline void amin(T &a, U b) {if (b < a) a = b;}
template<class T> inline T tabs(T a) {return (a > 0) ? a : -a;}
template<class T> T gcd(T a, T b) {while (b != 0) {T c = a; a = b; b = c % b;} return a;}

typedef pair<int, int> P;
vector<P> G[1001];

int main(int argc, char *argv[]) {
	ios_base::sync_with_stdio(false);
	
	int ntest; double A;
	
	repu(h, 0, 12) repu(m, 0, 60) {
		int ang = tabs(60 * h - m * 11);
		if (ang > 360) ang = 720 - ang;
		G[ang].push_back(P(h, m));
	}
	
	cin >> ntest;
	for (; ntest; --ntest) {
		cin >> A;
		int ang = static_cast<int>(2 * A + 1.01 / 60);
		if (tabs(2 * A - ang) <= 1.0 / 60) {
			repu(i, 0, G[ang].size()) {
				int h = G[ang][i].first, m = G[ang][i].second;
				if (h < 10) printf("0");
				printf("%d:", h);
				if (m < 10) printf("0");
				printf("%d\n", m);
			}
		}
	}
	
	return 0;
}
