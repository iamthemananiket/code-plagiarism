#include <bits/stdc++.h>
#define rep(i,x,y) for (int i = (x); i<=(y); i++)
#define repe(i,x,y) for (int i = (x); i < (y);i++)
#define drep(i,x,y) for (int i = (x); i >= (y); i--)
#define mp make_pair
#define pb emplace_back
#define mt make_tuple
#define gcd __gcd
#define sf(n) scanf("%Lf",&n)
#define prf(n) printf("%.12Lf",n)
#define	s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define pr(n) printf("%d",n)
#define prl(n) printf("%lld",n)
#define endc printf("\n")
#define psp printf(" ")

using namespace std;
typedef long long ll;
typedef long double ld;
typedef pair<int,int> pii;
typedef pair<ll,ll> line;

const int maxn = 1e6 + 7;
const ll md = 1e9 + 7;
const ld inf = 2e18;

line q[maxn];
int pos;

inline ld intx(line a, line b) { return ((a.second - b.second)*1.0)/(1.0 * (b.first - a.first)); }

void addline(line a){
	while(pos >= 2 && intx(q[pos - 1] , q[pos]) >= intx(q[pos-1] , a)){
		--pos;
	}
	q[++pos] = a;
}
/*
void addline(line a) {
	while (pos >= 2 && intx(q[pos],q[pos-1]) < intx(a,q[pos-1])) pos--;
	pos++; q[pos] = a;
}
*/
inline ld getl(ll x) { return (x == 1)?-inf:intx(q[x],q[x-1]); }
inline ld getr(ll x) { return (x == pos)?inf:intx(q[x],q[x+1]); }

int ans = 1;

/*ll qry(ll x) {
	int l = 1, r = pos;
	while (l <= r) {
		int mid = (l+r)>>1;
		ld lf = getl(mid), rg = getr(mid);
		if (lf <= x && x <= rg) return q[mid].first * x + q[mid].second;
		if (lf > x) {
			r = mid-1;
		} else {
			l = mid+1;
		}
	}
}*/

ll qry(ll x) {
	ans = min(ans,pos);
	while (true) {
		ld l = getl(ans), r = getr(ans);
		if (l <= x && x <= r) return q[ans].first*x + q[ans].second;
		ans++;
	}

	/*ll ans = (ll)inf;

	rep(i,1,pos) {
		ans = min(ans, q[i].first*x + q[i].second);
	}
	return ans;*/
}


ll p[maxn];
ll dp[maxn];

int main() {
	//ios::sync_with_stdio(false); cin.tie(0);

	int n; s(n); ll R; sl(R);
	rep(i,1,n) {
		sl(p[i]);
	}

	pos = 0; dp[0] = 0;

	rep(i,1,n) {
		addline(mp(-p[i]-p[i],dp[i-1] + R + p[i]*p[i]));
		dp[i] = p[i]*p[i] + qry(p[i]);
	}

	prl(dp[n]); endc;
}
