#include <iostream>
#include <vector>
#include <algorithm>
using namespace std;

int main()
{
        ios_base::sync_with_stdio(0);
        cin.tie(0);

        int  mk = 1, fk = 1 ;

        int  n, m, q ;
        cin >> n >> m >> q ;

        vector<string>  a(n);
        for( int i=0; i<n; i++ )
                cin >> a[i] ;


        vector<vector<int>>  dp( n+1, vector<int>(m+1,0) );
        for( int i=1; i<=n; i++ )
                for( int j=1; j<=m; j++ )
                        dp[i][j] = dp[i-1][j] + dp[i][j-1] - dp[i-1][j-1] + ( a[i-1][j-1] == 'M' );


        vector<vector<bool>>  vis( n, vector<bool>(m,0) );

        for( int i=0; i<n; i++ )
        for( int j=0; j<m; j++ )
        if( ! vis[i][j] )
        {
                int k=1;
                while(1)
                {
                        if( i+k == n+1 || j+k == m+1 )
                                break ;

                        int  val = dp[i+k][j+k] + dp[i][j] - dp[i+k][j] - dp[i][j+k]  ;

                        if( a[i][j] == 'M' && val != k*k )
                                break;
                        if( a[i][j] == 'F' && val != 0 )
                                break ;

                        ++k;
                }
                --k;

                if( a[i][j] == 'M'  &&  mk < k )   mk = k ;
                if( a[i][j] == 'F'  &&  fk < k )   fk = k ;

                for( int x=i; x<i+k; x++ )
                for( int y=j; y<j+k; y++ )
                vis[x][y] = 1 ;
        }


        while(q--)
        {
                int  k ;
                cin >> k ;

                string  str ;
                cin >> str ;

                if( str == "M" )  puts( mk >= k ? "yes" : "no" );
                else   puts( fk >= k ? "yes" : "no" );
        }

        return 0;
} 