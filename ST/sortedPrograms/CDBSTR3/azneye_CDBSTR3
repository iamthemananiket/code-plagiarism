/*
 *
 * File: stuff.cpp
 * Author: Andy Y.F. Huang (azneye)
 * Created on Aug 23, 2014, 11:50:25 PM
 */

#include <bits/stdc++.h>

using namespace std;

namespace stuff {
typedef long long ll;
const int MOD = 1000000007;

void solve(int test_num) {
  int N;
  cin >> N;
  static int val[111][111], dp[111][111];
  for (int i = 1; i <= N; i++)
    for (int j = 1; j <= N; j++)
      cin >> val[i][j];
  memset(dp, 0xC0, sizeof(dp));
  for (int i = 1; i <= N; i++) {
    for (int j = 1; j <= N; j++) {
      if (i + j == 2)
        dp[i][j] = val[i][j];
      else
        dp[i][j] = val[i][j] + max(dp[i - 1][j], dp[i][j - 1]);
    }
  }
  if (dp[N][N] < 0)
    cout << "No funds\n";
  else
    cout << fixed << setprecision(6) << (dp[N][N] / (2.0 * N - 3.0)) << endl;
}

void solve() {
#ifdef AZN
  double start_t = clock();
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
//freopen("azn.txt", "w", stderr);
#endif
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  int T = 1;
  cin >> T;
  for (int t = 1; t <= T; t++)
    solve(t);
#ifdef AZN
  cerr << "Took: " << ((clock() - start_t) / CLOCKS_PER_SEC);
#endif
}
}

int main() {
  stuff::solve();
  return 0;
}
