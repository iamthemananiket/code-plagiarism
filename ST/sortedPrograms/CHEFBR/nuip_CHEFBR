#include <string>
#include <vector>
#include<iostream>
#include<cstdio>
#include<cstdlib>
#include<stack>
#include<queue>
#include<cmath>
#include<algorithm>
#include<functional>
#include<list>
#include<deque>
#include<bitset>
#include<set>
#include<map>
#include<cstring>
#include<sstream>
#include<complex>
#include<iomanip>
#define X first
#define Y second
#define pb push_back
#define rep(X,Y) for (int (X) = 0;(X) < int(Y);++(X))
#define rrep(X,Y) for (int (X) = int(Y-1);(X) >=0;--(X))
#define repe(X,Y) for ((X) = 0;(X) < int(Y);++(X))
#define peat(X,Y) for (;(X) < int(Y);++(X))
#define all(X) (X).begin(),(X).end()
#define rall(X) (X).rbegin(),(X).rend()

using namespace std;
typedef long long ll;
typedef pair<int,int> pii;
typedef pair<ll,ll> pll;
template<class T> ostream& operator<<(ostream &os, const vector<T> &t) {
os<<"{"; rep(i,t.size()) {os<<t[i]<<",";} os<<"}\n"; return os;}
template<class S, class T> ostream& operator<<(ostream &os, const pair<S,T> &t) { return os<<"("<<t.first<<","<<t.second<<")";}

int main(){
  ios_base::sync_with_stdio(false);
  cout<<fixed<<setprecision(0);
  int i,j,k;
  ll n,MOD=1e9+7;
  cin>>n;
  vector<ll> a(n);
  vector<vector<ll> > dp(n+3,vector<ll>(n+3)),dps,sum;//close
  sum=dps=dp;
  rep(i,n)
    cin>>a[i];
  for(i=1;i<n;i++){
    rep(j,n-i){
      for(k=1;k<i;k++)
        (dps[j][i]+=sum[j][k]*dp[j+k+1][i-k-1]%MOD)%=MOD;
      if(a[j]<0 && a[j]+a[j+i]==0){
        (++dp[j][i])%=MOD;
        for(k=1;k<i;k++)
          (dp[j][i]+=sum[j+k][i-k-1])%=MOD;
      }
      (dps[j][i]+=dp[j][i])%=MOD;
      (sum[j][i]+=(sum[j][i-1]+dps[j][i])%MOD)%MOD;
    }
  }
//  cout<<sum;
  ll re=1;
  rep(i,n)
    (re+=sum[i][n-1-i])%=MOD;
  cout<<re<<endl;
  return 0;
}