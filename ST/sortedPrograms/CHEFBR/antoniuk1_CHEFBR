#include <iostream>
#include <stdio.h>
#include <vector>
#include <math.h>
#include <cassert>
#include <memory.h>
#include <algorithm>
#include <deque>
#include <set>
#include <map>

using namespace std;

const int mod = 1e9+7;

int n;
int mas[111];
int dp[111][111];

int f(int l, int r) {
    if (l >= r) return 1;
    
    if (dp[l][r] != -1) return dp[l][r];
    
    dp[l][r] = 1;
    for(int i = l; i <= r; ++i)
        for(int j = i+1; j <= r; ++j)
            if (mas[i] == -mas[j] && mas[i] < 0) {
                dp[l][r] += (f(i+1, j-1) * 1ll * f(j+1, r)) % mod;
                dp[l][r] %= mod;
            }
    return dp[l][r];
}

int main()
{
    ios::sync_with_stdio(0);
    cin >> n;
    for(int i = 0; i < n; ++i)
        cin >> mas[i];
    
    for(int i = 0; i < n; ++i)
        for(int j = 0; j < n; ++j)
            dp[i][j] = -1;
    
    cout << f(0, n-1) << "\n";
    
    return 0;
}