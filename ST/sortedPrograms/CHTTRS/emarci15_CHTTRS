#include <cstdio>
#include <algorithm>

using namespace std;

const bool ttrm[7][4][4][4] = {
    {//1
        {//a
            {0,0,0,0},
            {0,0,0,0},
            {0,0,0,0},
            {1,1,1,1},
        },
        {//b
            {1,0,0,0},
            {1,0,0,0},
            {1,0,0,0},
            {1,0,0,0},
        },
        {//a
            {0,0,0,0},
            {0,0,0,0},
            {0,0,0,0},
            {1,1,1,1},
        },
        {//b
            {1,0,0,0},
            {1,0,0,0},
            {1,0,0,0},
            {1,0,0,0},
        },
    },
    {//2
        {//a
            {0,0,0,0},
            {0,0,0,0},
            {1,0,0,0},
            {1,1,1,0},
        },
        {//b
            {0,0,0,0},
            {0,1,0,0},
            {0,1,0,0},
            {1,1,0,0},
        },
        {//c
            {0,0,0,0},
            {1,1,0,0},
            {1,0,0,0},
            {1,0,0,0},
        },
        {//d
            {0,0,0,0},
            {0,0,0,0},
            {1,1,1,0},
            {0,0,1,0},
        },
    },
    {//3
        {//a
            {0,0,0,0},
            {0,0,0,0},
            {0,0,1,0},
            {1,1,1,0},
        },
        {//b
            {0,0,0,0},
            {1,0,0,0},
            {1,0,0,0},
            {1,1,0,0},
        },
        {//d
            {0,0,0,0},
            {1,1,0,0},
            {0,1,0,0},
            {0,1,0,0},
        },
        {//c
            {0,0,0,0},
            {0,0,0,0},
            {1,1,1,0},
            {1,0,0,0},
        },
    },
    {//4
        {//a
            {0,0,0,0},
            {0,0,0,0},
            {1,1,0,0},
            {1,1,0,0},
        },
        {//a
            {0,0,0,0},
            {0,0,0,0},
            {1,1,0,0},
            {1,1,0,0},
        },
        {//a
            {0,0,0,0},
            {0,0,0,0},
            {1,1,0,0},
            {1,1,0,0},
        },
        {//a
            {0,0,0,0},
            {0,0,0,0},
            {1,1,0,0},
            {1,1,0,0},
        },
    },
    {//5
        {//a
            {0,0,0,0},
            {0,0,0,0},
            {0,1,1,0},
            {1,1,0,0},
        },
        {//b
            {0,0,0,0},
            {1,0,0,0},
            {1,1,0,0},
            {0,1,0,0},
        },
        {//a
            {0,0,0,0},
            {0,0,0,0},
            {0,1,1,0},
            {1,1,0,0},
        },
        {//b
            {0,0,0,0},
            {1,0,0,0},
            {1,1,0,0},
            {0,1,0,0},
        },
    },
    {//6
        {//a
            {0,0,0,0},
            {0,0,0,0},
            {0,1,0,0},
            {1,1,1,0},
        },
        {//b
            {0,0,0,0},
            {1,0,0,0},
            {1,1,0,0},
            {1,0,0,0},
        },
        {//d
            {0,0,0,0},
            {0,1,0,0},
            {1,1,0,0},
            {0,1,0,0},
        },
        {//c
            {0,0,0,0},
            {0,0,0,0},
            {1,1,1,0},
            {0,1,0,0},
        },
    },
    {//7
        {//a
            {0,0,0,0},
            {0,0,0,0},
            {1,1,0,0},
            {0,1,1,0},
        },
        {//b
            {0,0,0,0},
            {0,1,0,0},
            {1,1,0,0},
            {1,0,0,0},
        },
        {//a
            {0,0,0,0},
            {0,0,0,0},
            {1,1,0,0},
            {0,1,1,0},
        },
        {//b
            {0,0,0,0},
            {0,1,0,0},
            {1,1,0,0},
            {1,0,0,0},
        },
    },
};

bool trm[7][4][4][4];

char rot[7][4] = {
    {'a','b','a','b'},//1
    {'a','b','c','d'},//2
    {'a','b','d','c'},//3
    {'a','a','a','a'},//4
    {'a','b','a','b'},//5
    {'a','b','d','c'},//6
    {'a','b','a','b'},//7
};

int mr[7][4];
int mm[7][4];

bool pf[20][15];
bool dp[16][16];

int mpsz;
int mx,my;
int mmr;

int c;

char s[100];

bool ok(int x, int y, int t, int r) {
    for(int i=0; i<4; i++) {
        for(int j=0; j<4; j++) {
            if(!trm[t][r][i][j]) continue;
            if(pf[x+i][y+j]) return 0;
        }
    }

    return 1;
}

void putt(int x, int y, int t, int r, bool n) {
    for(int i=0; i<4; i++) {
        for(int j=0; j<4; j++) {
            if(trm[t][r][i][j]) pf[x+i][y+j] = n;
        }
    }
}

void cmax(int t, int r) {
    fill(&dp[0][0],&dp[16][0],0);
    for(int i=0; i<15-mr[t][r]; i++) dp[15][i] = 1;

    for(int i=14; i>=0; i--) {
        for(int j=0; j<15-mr[t][r]; j++) {
            if(!ok(i,j,t,r)) continue;
            if((dp[i+1][j]) || ((j>0) && (dp[i][j-1]))) dp[i][j] = 1;
        }
        for(int j=14-mr[t][r]; j>=0; j--) {
            if(!ok(i,j,t,r)) continue;
            if(dp[i][j+1]) dp[i][j] = 1;

            if(dp[i][j]) {
                int psz = (((mm[t][r]+i)>=15)*(-100000)) + ((14-i)*60) + ((14-j)*4) + ((3-r));

                putt(i,j,t,r,1);
                for(int k=0; k<3; k++) {
                    for(int l=0; l<4; l++) {
                        if(trm[t][r][k][l]) continue;
                        if(!trm[t][r][k+1][l]) continue;

                        if((((l+j)==0) || (pf[i+k][l+j-1])) && ((pf[i+k][l+j+1]) || ((l+j)==14))) psz -= 1000;
                    }
                }

                int rd(0);
                for(int i=0; i<15; i++) {
                    int rs(0);
                    for(int j=0; j<15; j++) rs += pf[i][j];
                    if(rs==15) rd++;
                }
                if((rd*15) == (c+4)) psz += 400*500;
                psz += rd*rd*10*400;
                putt(i,j,t,r,0);

                if(psz > mpsz) {
                    mpsz = psz;
                    mx = i;
                    my = j;
                    mmr = r;
                }
            }
        }
    }
}

int main()
{
    for(int i=0; i<7; i++) {
        for(int j=0; j<4; j++) {
            for(int k=0,kk=3; k<4; k++,kk--) {
                for(int l=0; l<4; l++) {
                    trm[i][j][k][l] = ttrm[i][j][kk][l];
                    if(trm[i][j][k][l]) {
                        mr[i][j] = max(mr[i][j],l);
                        mm[i][j] = max(mm[i][j],k);
                    }
                }
            }
        }
    }

    int db=0;
    for(;;) {
        db++;
        size_t len;
        char *ss = &s[0];
        getline(&ss,&len,stdin);
        if(s[0] == 'G') return 0;
        if(db>50000) return 102;
        mpsz = -1000000;
        if(s[0] == '1') {
            for(int i=0; i<4; i++) cmax(s[2]-'1',i);
        } else {
            int r(0);
            for(int i=0; i<4; i++) if(rot[s[2]-'1'][i] == s[4]) r = i;
            cmax(s[2]-'1',r);
        }

        //updating table

        int j = 0;
        putt(mx,my,s[2]-'1',mmr,1);
        for(int i=0; i<15; j++) {
            int rc(0);
            for(int j=0; j<15; j++) rc += pf[i][j];
            if(rc<15) {
                i++;
            } else {
                for(int j=i; j<15; j++) {
                    for(int k=0; k<15; k++) {
                        pf[j][k] = pf[j+1][k];
                    }
                }
            }

            if(j>30) return 101;
        }

        //printing result
        mx = 15-mx;
        my += 1;

        printf("%d %d %c\n",mx,my,rot[s[2]-'1'][mmr]);
        fflush(stdout);
    }

    return 0;
}
