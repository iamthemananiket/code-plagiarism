#include <bits/stdc++.h>
#define rep(i,x,y) for (int i = (x); i<=(y); i++)
#define repe(i,x,y) for (int i = (x); i < (y);i++)
#define drep(i,x,y) for (int i = (x); i >= (y); i--)
#define mp make_pair
#define pb push_back
#define MAX(a,b) (((a)>(b))?(a):(b))
#define MIN(a,b) (((a)<(b))?(a):(b))
#define MAXN 5050
#define sf(n) scanf("%Lf",&n)
#define prf(n) printf("%Lf",n)
#define	s(n) scanf("%d",&n)
#define sl(n) scanf("%lld",&n)
#define pr(n) printf("%d",n)
#define prl(n) printf("%lld",n)
#define endc printf("\n")
#define psp printf(" ")

using namespace std;
typedef long long ll;
typedef long double ld;
typedef pair<ll,ll> pii;

pii A[MAXN];
ll dp[MAXN][MAXN];

void solve() {
	int n; s(n);
	rep(i,1,n) { sl(A[i].second); }
	rep(i,1,n) { sl(A[i].first); }
	sort(A+1,A+n+1);
	dp[n+1][1] = 0;
	drep(i,n,1) dp[i][1] = MAX(A[i].second,dp[i+1][1]);
	rep(j,2,n) {
		dp[n+1][j] = 0;
		drep(i,n,1) {
			if (n-i+1 < j) { dp[i][j] = -1e17; continue; }
			dp[i][j] = MAX(dp[i+1][j], (dp[i+1][j-1] + (A[i].second + A[i].first*(j-1))));
		}
	}
	/*rep(i,1,n) {
		cout<<A[i].first<<" ; "<<A[i].second<<endl;
	}
	rep(j,1,n) {
		cout<<j<<" : ";
		rep(i,1,n) {
			cout<<dp[i][j]<<" ";
		}
		cout<<endl;
	}*/
	rep(i,1,n) {
		if (i > 1) psp;
		prl(dp[1][i]);
	}
	endc;
}

int main() {
	int t; s(t); while (t--) solve();
}
