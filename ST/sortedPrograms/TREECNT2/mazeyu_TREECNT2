#include<bits/stdc++.h>
#define N 1000010
#define M 100010
#define maxn 15000010
using namespace std;
map<int,int>mp[N];
int n,x[M],y[M],z[M],m,a[M],b[M],use[M],k;
int i,j,vis[N],u[N],sz[maxn],dad[maxn],p[M],l,m1[N],np,chan[M],ln,q[M];
long long ans,ap;
void Init()
{
	u[1]=1;
	for(i=2;i<N;i++)
	{
		if(!vis[i])
		{
			vis[i]=1;u[i]=-1;
			p[++l]=i;m1[i]=i;
		}
		for(j=1;j<=l&&i*p[j]<N;j++)
		{
			vis[i*p[j]]=1;
			m1[i*p[j]]=p[j];
			if(i%p[j])u[i*p[j]]=-u[i];
			else{u[i*p[j]]=0;break;}
		}
	}
}
int find(int x){return dad[x]==x?x:find(dad[x]);}
void add(int b,int x,int y)
{
	int t1=mp[b][x],t2=mp[b][y];
	if(!t1)mp[b][x]=++np,dad[np]=t1=np,sz[np]=1;
	if(!t2)mp[b][y]=++np,dad[np]=t2=np,sz[np]=1;
	t1=find(t1);t2=find(t2);
	if(sz[t1]<sz[t2])swap(t1,t2);
	ans+=1ll*u[b]*sz[t1]*sz[t2];
	sz[t1]+=sz[t2];dad[t2]=t1;chan[++ln]=t2;
}
void dfs(int a,int b,int x,int y)
{
	if(a>l){add(b,x,y);return;}
	dfs(a+1,b,x,y);
	dfs(a+1,b*q[a],x,y);
}
int main()
{
	Init();
	scanf("%d",&n);
	for(i=1;i<n;i++)
		scanf("%d%d%d",&x[i],&y[i],&z[i]);
	scanf("%d",&m);
	for(i=1;i<=m;i++)
		scanf("%d%d",&a[i],&b[i]),use[a[i]]=1;
	for(i=1;i<n;i++)
	if(!use[i])
	{
		ln=l=0;
		for(j=z[i];j>1;j/=m1[j])
			if(m1[j]!=q[l])q[++l]=m1[j];
		dfs(1,1,x[i],y[i]);
	}
	ap=ans;
	for(i=0;i<=m;i++)
	{
		ans=ap;ln=0;
		for(j=1;j<=m;j++)use[a[j]]=0;
		for(j=1;j<=m;j++)
		if(!use[a[j]])
		{
			use[a[j]]=1;l=0;
			for(k=z[a[j]];k>1;k/=m1[k])
				if(m1[k]!=q[l])q[++l]=m1[k];
			dfs(1,1,x[a[j]],y[a[j]]);
		}
		printf("%lld\n",ans);
		for(j=ln;j>=1;j--)
		{
			sz[dad[chan[j]]]-=sz[chan[j]];
			dad[chan[j]]=chan[j];
		}
		z[a[i+1]]=b[i+1];
	}
}