#include<cstdio>
#include<algorithm>
#define N 200010
using namespace std;
struct mjj{int x,y1,y2,z;}B[N],C[N];
char s[2];
int n,i,x[N],y[N],x1[N],y1[N],x2[N],y2[N],X1[N],Y1[N],X2[N],Y2[N];
int a[N],tot,lx,ly,an[N],sz1[N],sz2[N],u;
bool cmp1(mjj x,mjj y){return x.x!=y.x?x.x<y.x:x.z>y.z;}
bool cmp2(mjj x,mjj y){return x.x!=y.x?x.x>y.x:x.z>y.z;}
void add1(int x,int y){for(;x<ly;x+=x&-x)sz1[x]+=y;}
void add2(int x,int y){for(;x<ly;x+=x&-x)sz2[x]+=y;}
int query1(int x){int y=0;for(;x;x-=x&-x)y+=sz1[x];return y;}
int query2(int x){int y=0;for(;x;x-=x&-x)y+=sz2[x];return y;}
void solve(int l,int r)
{
	int mid=(l+r)>>1,i,u,ln=0,tot=0;
	for(i=l;i<=mid;i++)
	if(a[i]!=0)
	{
		u=abs(a[i]);
		B[++ln].x=x2[u];
		B[ln].y1=y1[u];
		B[ln].y2=y2[u];
		B[ln].z=0-(a[i]<0);
		C[ln].x=x1[u];
		C[ln].y1=y1[u];
		C[ln].y2=y2[u];
		C[ln].z=0-(a[i]<0);
	}
	for(i=mid+1;i<=r;i++)
	if(a[i]==0)
	{
		B[++ln].x=X1[i];
		B[ln].y1=Y1[i];
		B[ln].y2=Y2[i];
		B[ln].z=i;
		C[ln].x=X2[i];
		C[ln].y1=Y1[i];
		C[ln].y2=Y2[i];
		C[ln].z=i;
	}
	sort(B+1,B+ln+1,cmp1);
	sort(C+1,C+ln+1,cmp2);
	for(i=1;i<=ln;i++)
	if(B[i].z<=0)
	{
		tot+=B[i].z?-1:1;
		add1(B[i].y2,B[i].z?-1:1);
		add2(ly-B[i].y1+1,B[i].z?-1:1);
	}else
	{
		an[B[i].z]-=tot;
		if(B[i].y1>1)an[B[i].z]+=query1(B[i].y1-1);
		if(B[i].y2<ly)an[B[i].z]+=query2(ly-B[i].y2);
	}
	for(i=mid+1;i<=r;i++)
	if(!a[i])
	{
		an[i]+=tot;
		an[i]-=query1(Y1[i]-1);
		an[i]-=query2(ly-Y2[i]);
	}
	for(i=1;i<=ln;i++)if(B[i].z<=0)
		add1(B[i].y2,B[i].z?1:-1),
		add2(ly-B[i].y1+1,B[i].z?1:-1);
	tot=0;
	for(i=1;i<=ln;i++)
	if(C[i].z<=0)
	{
		tot+=C[i].z?-1:1;
		add1(C[i].y2,C[i].z?-1:1);
		add2(ly-C[i].y1+1,C[i].z?-1:1);
	}else
	{
		an[C[i].z]-=tot;
		if(C[i].y1>1)an[C[i].z]+=query1(C[i].y1-1);
		if(C[i].y2<ly)an[C[i].z]+=query2(ly-C[i].y2);
	}
	for(i=1;i<=ln;i++)if(C[i].z<=0)
		add1(C[i].y2,C[i].z?1:-1),
		add2(ly-C[i].y1+1,C[i].z?1:-1);
	if(l!=r)solve(l,mid),solve(mid+1,r);
}
int main()
{
	scanf("%d",&n);x[lx=1]=0;y[ly=1]=0;
	for(i=1;i<=n;i++)
	{
		scanf("%s",s);
		if(s[0]=='I')
		{
			a[i]=++tot;
			scanf("%d%d%d%d",&x1[tot],&y1[tot],&x2[tot],&y2[tot]);
			x[++lx]=x1[tot];x[++lx]=x2[tot];
			y[++ly]=y1[tot];y[++ly]=y2[tot];
		}else
		if(s[0]=='Q')
		{
			scanf("%d%d%d%d",&X1[i],&Y1[i],&X2[i],&Y2[i]);
			x[++lx]=X1[i];x[++lx]=X2[i];
			y[++ly]=Y1[i];y[++ly]=Y2[i];
		}else scanf("%d",&a[i]),a[i]=-a[i];
	}
	sort(x+1,x+lx+1);lx=unique(x+1,x+lx+1)-x-1;
	sort(y+1,y+ly+1);ly=unique(y+1,y+ly+1)-y-1;
	for(i=1;i<=n;i++)
	if(a[i]>0)
	{
		u=a[i];
		x1[u]=lower_bound(x+1,x+lx+1,x1[u])-x;
		x2[u]=lower_bound(x+1,x+lx+1,x2[u])-x;
		y1[u]=lower_bound(y+1,y+ly+1,y1[u])-y;
		y2[u]=lower_bound(y+1,y+ly+1,y2[u])-y;
	}else if(!a[i])
	{
		X1[i]=lower_bound(x+1,x+lx+1,X1[i])-x;
		X2[i]=lower_bound(x+1,x+lx+1,X2[i])-x;
		Y1[i]=lower_bound(y+1,y+ly+1,Y1[i])-y;
		Y2[i]=lower_bound(y+1,y+ly+1,Y2[i])-y;
	}
	solve(1,n);
	for(i=1;i<=n;i++)if(!a[i])printf("%d\n",an[i]);
}