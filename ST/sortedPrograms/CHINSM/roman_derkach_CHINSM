///test my skill
#include<bits/stdc++.h>

///#define files freopen("input.txt","r",stdin);freopen("output.txt","w",stdout);
#define fast ios_base::sync_with_stdio(false); cin.tie(NULL); cout.tie(NULL);
#define ll long long
#define ull unsigned long long
#define ld long double
//#define int ll
#define mkp(x,y) make_pair(x,y)
#define pb(x) push_back(x)
#define f first
#define s second
#define pii pair<int,int>
#define pll pair<ll,ll>
#define piii pair<pii,int>
#define writeln cout<<endl
#define endl '\n'
#define sqr(a) (a)*(a)
#define all(a) a.begin() ,a.end()
#define left dld
#define right asksk

using namespace std;

const int N = 2e5 + 121;
const int T = N * 4;
int ans,a[N],i,j,k,n,left[N],right[N],t[T],sz;

inline void up(int v,int val)
{
    t[v]=val;
    v>>=1;
     while(v)
     {
         t[v]=max(t[v<<1],t[(v<<1)+1]);
         v>>=1;
     }
}

inline int get(int x)
{
    int v = 1;
    int tl = 1;
    int tr = sz;
     while(tl<tr)
     {
         int tm = (tl+tr)>>1;
         int one = v << 1;
         int two = one+1;
          if(t[one]>x)
          {
              v=one;
              tr=tm;
          } else
          {
              v=two;
              tl=tm+1;
          }
     }
     if(a[tl]>x) return tl;
     if(a[tr]>x) return tr;
     return n+1;
}

 int main()
 {
    fast;
    ///files;

     #ifndef ONLINE_JUDGE
     freopen("input.txt","r",stdin);
     freopen("output.txt","w",stdout);
    #endif

     cin>>n>>k;

     if(n>1000)
        {
            sz=1;
             while(sz<n) sz+=sz;
         for(i=1;i<=n;++i)cin>>a[i];
         ll ans=n;
        map<int,int> mp;
         mp[a[n]] = n;
         up(sz+n-1,a[n]);
         int suff[N];
         suff[n]=n+1;
          for(i=n-1; i>0; --i)
          {
             int tt=n+1;
              if(a[i]==k)tt=get(a[i]);
              else{
             int val = a[i]-k;
             int koren = sqrt(val);
              for(j=1; j<=koren; ++j)
              {
                  int p = 0;
                   if(j>k && val%j==0)
                   {
                       int p = mp[j];
                       if(p) tt=min(tt,p);
                   }
                   int d = val / j;
                   if(d>k && val%d==0)
                   {
                       int p = mp[d];
                       if(p) tt=min(tt,p);
                   }
              }
              }
              suff[i]=min(tt,suff[i+1]);
              ans+=suff[i] - 1 - i;
              mp[a[i]]=i;
              up(sz+i-1,a[i]);
          }

          cout<<ans<<endl;

         return 0;
     }

      for(i=1; i<=n; ++i) cin>>a[i],left[i]=0,right[i]=n+1;

       for(i=1;i<=n;++i)
        for(j=i+1;j<=n;++j)
         if(a[i]%a[j]==k)
       {
           right[i]=j;
           left[j]=max(left[j],i);
           break;
       }

        ans=n;
         for(i=1;i<n; ++i)
         {
             int mn=right[i];
              for(j=i+1; j<=mn-1; ++j)
              {
                  if(left[j]>=i && left[j]<j) break;
                  mn=min(mn,right[i]);
                  ++ans;
              }
         }

    cout<<ans<<endl;

    return 0;
 }
