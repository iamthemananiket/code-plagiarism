/***************************************
    codeforces = topcoder = sahedsohel
    IIT,Jahangirnagar University(42)
****************************************/
#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <iostream>
#include <sstream>
#include <iomanip>
#include <string>
#include <vector>
#include <list>
#include <set>
#include <map>
#include <stack>
#include <queue>
#include <algorithm>
#include <iterator>
#include <utility>
using namespace std;

#define ll long long int
#define ull unsigned long long int
#define inf (INT_MAX/10)
#define linf (LLONG_MAX/10LL)
#define sc(a) scanf("%d",&a)
#define sc2(a,b) scanf("%d%d",&a,&b)
#define sc3(a,b,c) scanf("%d%d%d",&a,&b,&c)
#define sc4(a,b,c,d) scanf("%d%d%d%d",&a,&b,&c,&d)
#define fl(c,i,n) for(i=c;i<n;i++)
#define f(i,n) for(i=0;i<n;i++)
#define mem(a) memset(a,0,sizeof(a))
#define memn(a) memset(a,-1,sizeof(a))
#define pb push_back
#define pp pop_back()
#define aov(a) a.begin(),a.end()
#define mpr make_pair
#define PI (2.0*acos(0.0)) //#define PI acos(-1.0)
#define xx first
#define yy second
#define mxv(a) *max_element(aov(a))
#define mnv(a) *min_element(aov(a))
#define LB(a,x) (lower_bound(aov(a),x)-a.begin())
#define UB(a,x) (upper_bound(aov(a),x)-a.begin())
#define to_c_string(a) a.c_str()
#define strtoint(c) atoi(&c[0])
#define pii pair< int , int >
#define pll pair< ll , ll >
#define pcs(a) printf("Case %d: ", a)
#define nl puts("")
#define dbg(x) cout<<#x<<" : "<<x<<endl

template <class T> inline T bigmod(T p,T e,T M){ll ret = 1;for(; e > 0; e >>= 1){if(e & 1) ret = (ret * p) % M;p = (p * p) % M;}return (T)ret;}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}   // M is prime}
template <class T> inline T bpow(T p,T e){ll ret = 1;for(; e > 0; e >>= 1){if(e & 1) ret = (ret * p);p = (p * p);}return (T)ret;}

int toInt(string s){int sm;stringstream ss(s);ss>>sm;return sm;}
int toLlint(string s){long long int sm;stringstream ss(s);ss>>sm;return sm;}


///int mnth[]={-1,31,28,31,30,31,30,31,31,30,31,30,31};  //Not Leap Year
///int dx[]={1,1,0,-1,-1,-1,0,1};int dy[]={0,1,1,1,0,-1,-1,-1};//8 direction
///int dx[]={2,1,-1,-2,-2,-1,1,2};int dy[]={1,2,2,1,-1,-2,-2,-1};//Knight Direction
///int dx[]={-1,-1,+0,+1,+1,+0};int dy[]={-1,+1,+2,+1,-1,-2}; //Hexagonal Direction
///const double eps=1e-6;
///int dx[]={0,1,0,-1};int dy[]={1,0,-1,0}; //4 Direction

/*****************************************************************/
/// ////////////////////   GET SET GO    ////////////////////// ///
/*****************************************************************/

#define M 100005
#define MD 1000000007LL
#define MX 2000012LL

int a[M],ls[M],n,fr[M];
int tr[M*4],x,y;

void bld(int i,int l,int r)
{
    if(l==r)
    {
        if(l==x)tr[i]=n-1;
        else    tr[i]=n;
        return ;
    }
    bld(i*2+1,l,(l+r)/2);
    bld(i*2+2,(l+r)/2+1,r);
    tr[i]=min(tr[i*2+1],tr[i*2+2]);
}


void updt(int i,int l,int r)
{
    if(r<x||l>x)return ;
    if(l==r)
    {
        tr[i]=y;
        return ;
    }
    updt(i*2+1,l,(l+r)/2);
    updt(i*2+2,(l+r)/2+1,r);
    tr[i]=min(tr[i*2+1],tr[i*2+2]);
}

int qry(int i,int l,int r)
{
    if(tr[i]==-1)return inf;
    if(r<x||l>y)return inf;
    if(x<=l&&r<=y)
    {
        return tr[i];
    }
    return min(qry(i*2+1,l,(l+r)/2),qry(i*2+2,(l+r)/2+1,r));
}

int main()
{
    int t,i,j,k,cs=1;

    memn(ls);
    memn(tr);

    sc2(n,k);
    f(i,n)sc(a[i]);

    int r=n-1,q;
    ll rs=1LL;
    ls[ a[n-1] ]=n-1;
    fr[a[n-1]]++;

    x=a[n-1];
    bld(0,0,M-1);

    for(i=n-2;i>-1;i--)
    {
        q=r+1;
        if( a[i]==k )
        {
            x=k+1;
            y=M-1;
            q=min(qry(0,0,M-1),q);
        }
        if(a[i]>k)
        {
            j=a[i]-k;

            for(int l=1;l*l<=j;l++)
            {
                if(j%l==0)
                {
                    if(l>k&&ls[l]>-1)
                        q=min(q,ls[l]);
                    if(j/l>k&&ls[j/l]>-1)
                        q=min(q,ls[j/l]);
                }
            }
        }

        for(;r>=q;r--)
        {
            fr[a[r]]--;
            if(fr[a[r]]==0)
                ls[a[r]]=-1;

            x=a[r];
            y=n;
            updt(0,0,M-1);
        }

        fr[a[i]]++;
        ls[a[i]]=i;
        x=a[i];
        y=i;
        updt(0,0,M-1);

        rs+=q-i;
    }

    cout<<rs<<endl;

    return 0;
}

