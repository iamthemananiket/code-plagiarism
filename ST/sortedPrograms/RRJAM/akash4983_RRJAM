#include <cstdio>
#include <cmath>
#include <iostream>
#include <set>
#include <algorithm>
#include <vector>
#include <map>
#include <cassert>
#include <string>
#include <cstring>
#include <queue>

using namespace std;

#define rep(i,a,b) for(int i = a; i < b; i++)
#define S(x) scanf("%d",&x)
#define S2(x,y) scanf("%d%d",&x,&y)
#define P(x) printf("%d\n",x)
#define all(v) v.begin(),v.end()
#define sz size()

typedef long long int LL;
typedef pair<int, int > pii;
typedef pair<LL, LL > pll;
typedef vector<int > vi;

const int N = 100001;
int ans[N];
LL A[N];
int n;
int blocks;

const int BSZ = 320;

struct SQRT {
	int l,r;
	vector<pll > v;
	vi idx;

	int bs(int x) {
		int res = -1;

		int lo = 0;
		int hi = (int)v.size() - 1;

		while(lo <= hi) {
			int mi = (lo + hi) >> 1;
			LL val = v[mi].first + (x - l) * v[mi].second;
			if(val >= A[x]) {
				res = mi;
				hi = mi - 1;
			} else {
				lo = mi + 1;
			}
		}
		return res;
	}
};

SQRT B[N / BSZ + 5];

void pre() {

	blocks = -1;

	rep(i,0,n) {
		if(i%BSZ == 0) {
			blocks++;
			B[blocks].l = i;
			B[blocks].v.push_back(make_pair(0,0));
			B[blocks].idx.push_back(0);
		}
		B[blocks].r = i;
	}

}

void UUU(int l, int r, LL x, LL y, int id) {

	rep(i,0,blocks+1) {

		if(B[i].r < l || B[i].l > r) continue;
		if(B[i].l >= l && B[i].r <= r) {
			pll p = B[i].v.back();
			B[i].v.push_back(make_pair(p.first + x + (B[i].l - l) * y, p.second + y));
			B[i].idx.push_back(id);
		} else {
			pll p = B[i].v.back();
			rep(j,max(B[i].l, l), min(B[i].r, r)+1) if(ans[j] == -2) {

				if(A[j] <= x + (j - l) * y + p.first + p.second * (j - B[i].l)) {
					int x = B[i].bs(j);
					if(x == -1) ans[j] = id;
					else ans[j] = B[i].idx[x];
				} else {
					A[j] -= x + (j - l) * y;
				}
			}
		}

	}

}


int main() {
	S(n);
	rep(i,0,n) scanf("%lld",&A[i]);
	rep(i,0,n) {
		int x;
		S(x);
		A[i] = x - A[i];
		ans[i] = -2;
		if(A[i] <= 0) ans[i] = 0;
	}

	pre();

	int m;
	S(m);
	rep(i,1,m+1) {
		int l,r,x,y;
		scanf("%d%d%d%d",&l,&r,&x,&y);
		UUU(l-1,r-1,x,y,i);
	}

	rep(i,0,blocks+1) {
		rep(j,B[i].l,B[i].r+1) if(ans[j] == -2) {
			int x = B[i].bs(j);
			if(x == -1) ans[j] = -1;
			else ans[j] = B[i].idx[x];
		}
	}

	rep(i,0,n) printf("%d ",ans[i]);
	return 0;
}