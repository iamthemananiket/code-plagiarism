/*
_._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._.

	Abhinandan Agarwal
_._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._._.*/
#include<bits/stdc++.h>
using namespace std;
#define pc putchar_unlocked
#define gc getchar_unlocked
typedef long long ll;
typedef unsigned long long llu;
#define mp make_pair
#define pb push_back
#define sc(x) scanf("%d",&x)
#define sc2(x,y) scanf("%d%d",&x,&y)
#define sc3(x,y,z) scanf("%d%d%d",&x,&y,&z)
#define scl(x) scanf("%lld",&x)
#define scl2(x,y) scanf("%lld%lld",&x,&y)
#define scl3(x,y,z) scanf("%lld%lld%lld",&x,&y,&z)
#define scstr(x) scanf("%s",x)
#define pd(x) printf("%d",x)
#define pstr(x) printf("%s",x)
#define newl() printf("\n")
#define fl(i,n) for (i=0;i<n;i++)
#define fle(i,n) for (i=1;i<=n;i++)
#define fla(i,a,n) for (i=a;i<n;i++)
#define mem(a,i) memset(a,i,sizeof(a))
#define fi first
#define se second
typedef pair<int,int> pii;
typedef pair<int,pair<int,int> > piii ;
typedef pair<ll,ll> pll;
typedef pair<ll,int> pli;
#define gcd __gcd
#define wl(n) while (n--)
#define debug(x) cout<<"debug->"<<#x<<"::"<<x<<endl
#define debug2(x,y) cout<<#x<<" :: "<<x<<"\t"<<#y<<" :: "<<y<<"\n"
#define debug3(x,y,z) cout<<#x<<" :: "<<x<<"\t"<<#y<<" :: "<<y<<"\t"<<#z<<" :: "<<z<<"\n"
#define tr(container, it)  for(typeof(container.begin()) it = container.begin(); it != container.end(); it++) 
#define all(v) v.begin(),v.end()
const double eps=0.000000000000001 ;
#define MOD 1000000007
typedef long double LF;
typedef double lF;
//-------------
set<pair<int,string> >ss;
char s[100];
int n,m;
ll k;
int A[100][100];
void track(int x)
{
	if (x>m)
	{
		ll cost=0;int j;
		for (j=1;j<=m;j++)
		{


			cost+=A[j][s[j]-'a'+1];
			
		}
		ss.insert(mp(-cost,(string)(s+1)));
		return ;
	}
	int i;
	for (i=0;i<n;i++)
	{
		s[x]=i+'a';
		track(x+1);

	}
}
int main()
{
	
	
	sc2(n,m);
	scl(k);
	ll i,j;
	for (i=1;i<=m;i++)
	{
		for (j=1;j<=n;j++)
			sc(A[i][j]);
	}
	track(1);
	set<pair<int,string> >::iterator it;
	it=ss.begin();
	for (i=1;i<k;i++)
	{

		it++;
	}

	cout<<it->se<<endl;
	/*it=ss.begin();
	while (it!=ss.end())
	{
		cout<<it->se<<" "<<it->fi<<endl;
		it++;
	}*/

	return 0;

}