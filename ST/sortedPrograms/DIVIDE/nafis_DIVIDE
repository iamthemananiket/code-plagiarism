/*********************************************************************\
   |--\        ---       /\        |-----------| -----   /-------|    |
   |   \        |       /  \       |               |    /             |
   |    \       |      /    \      |               |   |              |
   |     \      |     /      \     |               |   |----|         |
   |      \     |    / ------ \    |-------|       |        |-----|   |
   |       \    |   /          \   |               |              |   |
   |        \   |  /            \  |               |              /   |
  ---        -------            ------           ----- |---------/    |
                                                                      |
    codeforces = nfssdq  ||  topcoder = nafis007                      |
    mail = nafis_sadique@yahoo.com || nfssdq@gmail.com                |
    IIT,Jahangirnagar University(41)                                  |
                                                                      |
**********************************************************************/

#include <bits/stdc++.h>

using namespace std;

#define xx         first
#define yy         second
#define pb         push_back
#define mp         make_pair
#define LL         long long
#define inf        INT_MAX/3
#define mod        1000000007ll
#define PI         acos(-1.0)
#define linf       (1ll<<60)-1
#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     ((A).begin(), (A).end())
#define set0(ar)   memset(ar,0,sizeof ar)
#define vsort(v)   sort(v.begin(),v.end())
#define setinf(ar) memset(ar,126,sizeof ar)

//cout << fixed << setprecision(20) << p << endl;

template <class T> inline T bigmod(T p,T e,T M){
    LL ret = 1;
    for(; e > 0; e >>= 1){
        if(e & 1) ret = (ret * p) % M;
        p = (p * p) % M;
    } return (T)ret;
}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}

LL ar[1001], val[1001][1001], col[1001], vis[1001];
int dfs(int c, int d, int m, int n){
    vis[c] = 1;
    col[c] = d;
    FOR(i, 1, n + 1){
        if(i == c) continue;
        if(val[c][i] > m){
            if(vis[i] && col[i] != d^1) return 0;
            if(vis[i]) continue;
            if(dfs(i, d^1, m, n) == 0) return 0;
        }
    }
    return 1;
}
int go(int m, int n){
    FOR(i, 1, n + 1) vis[i] = 0;
    FOR(i, 1, n + 1){
        if(vis[i] == 0){
            if(dfs(i, 0, m, n) == 0) return 0;
        }
    }
    return 1;
}
int main() {
    ios_base::sync_with_stdio(0); cin.tie(0);
    LL a,b = 0,c,d = 0,e = 0,f = 0,g,h = 0,x,y,z = 0;
    cin >> a;
    while(a--){
        cin >> b;
        FOR(i, 1, b + 1){
            cin >> ar[i];
        }
        FOR(i, 1, b + 1){
            FOR(j, 1, b + 1){
                if(i == j) val[i][j] = 0;
                else {
                    val[i][j] = min(bigmod(ar[i], ar[j], mod), bigmod(ar[j], ar[i], mod));
                }
            }
        }
        LL lo = 0, hi = mod, mid = (lo + hi) / 2;
        while(lo < mid){
            if(go(mid, b)) hi = mid;
            else lo = mid + 1;
            mid = (lo + hi) / 2;
        }
        if(go(mid, b) == 0) mid++;
        cout << mid << endl;
    }
}
