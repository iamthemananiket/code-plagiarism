/*
 * 2013 Codechef December Challenge
 * Reign
 * File:   REIGN.cpp
 * Author: Andy Y.F. Huang
 * Created on 2013-12-06, 5:03:30 PM
 */

#include <algorithm>
#include <bitset>
#include <cassert>
#include <cctype>
#include <climits>
#include <cmath>
#include <cstddef>
#include <cstdio>
#include <cstdlib>
#include <cstring>
#include <ctime>
#include <complex>
#include <deque>
#include <fstream>
#include <functional>
#include <iomanip>
#include <iostream>
#include <limits>
#include <list>
#include <map>
#include <numeric>
#include <queue>
#include <set>
#include <sstream>
#include <stack>
#include <string>
#include <utility>
#include <valarray>
#include <vector>

using namespace std;

namespace REIGN {
typedef long long ll;
ll le[100111], ri[111000];
int a[100111];

void solve(int test_num) {
  int N, K;
  scanf("%d %d", &N, &K);
  for (int i = 0; i < N; i++)
    scanf("%d", a + i);
  le[0] = a[0];
  for (int i = 1; i < N; i++)
    le[i] = max(le[i - 1] + a[i], (ll) a[i]);
  for (int i = 1; i < N; i++)
    le[i] = max(le[i], le[i - 1]);
  ri[N - 1] = a[N - 1];
  for (int i = N - 2; i >= 0; i--)
    ri[i] = max(ri[i + 1] + a[i], (ll) a[i]);
  for (int i = N - 2; i >= 0; i--)
    ri[i] = max(ri[i + 1], ri[i]);
  ll res = -(1LL << 60);
  for (int i = 0; i + K + 1 < N; i++)
    res = max(res, le[i] + ri[i + K + 1]);
  printf("%lld\n", res);
}

void solve() {
#ifdef AZN
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
  freopen("azn.txt", "w", stderr);
#endif
  int tests;
  scanf("%d", &tests);
  for (int i = 1; i <= tests; i++)
    solve(i);
}
}

int main() {
  REIGN::solve();
  return 0;
}
