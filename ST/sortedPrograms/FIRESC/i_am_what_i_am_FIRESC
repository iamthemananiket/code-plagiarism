#include<bits/stdc++.h>
using namespace std;

vector<vector<int> > graph;
vector<bool> visited;

long long MOD=1e9+7;


int bfs(int x)
{
	queue<int> q;
	q.push(x);
	
	int count=1;
	visited[x]=1;
	
	while(!q.empty())
	{
		x=q.front();
		q.pop();
		for(int i=0;i<graph[x].size();i++)
		{
			int node=graph[x][i];
			if(!visited[node])
			{
				count++;
				visited[node]=1;
				q.push(node);
			}
		}
		
	}
	return count;
}

void eval()
{
	int n,m,x,y;
	cin>>n>>m;
	graph.clear();
	graph.resize(n);
	for(int i=0;i<m;i++)
	{
		cin>>x>>y;
		x--;
		y--;
		graph[x].push_back(y);
		graph[y].push_back(x);
		
	}
	long long ans=1;
	visited.clear();
	visited.resize(n,false);
	int ctr=0;
	for(int i=0;i<n;i++) 
	{
		if(!visited[i])
		 {
		 	ctr++;
			int c=bfs(i);
			ans=(ans*c)%MOD;
		 }	
	}
  cout<<ctr<<" "<<ans<<endl;
}

int main()
{/*
	#ifndef ONLINE_JUDGE
	freopen("in.txt","r",stdin);
	//freopen("out.txt","w",stdout);
	#endif
*/	
	int t;
	cin>>t;
	for(int te=1;te<=t;te++)
	{
		
		eval();
	}
	
	
}