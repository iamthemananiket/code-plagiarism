/*********************************************************************\
   |--\        ---       /\        |-----------| -----   /-------|    |
   |   \        |       /  \       |               |    /             |
   |    \       |      /    \      |               |   |              |
   |     \      |     /      \     |               |   |----|         |
   |      \     |    / ------ \    |-------|       |        |-----|   |
   |       \    |   /          \   |               |              |   |
   |        \   |  /            \  |               |              /   |
  ---        -------            ------           ----- |---------/    |
                                                                      |
    codeforces = nfssdq  ||  topcoder = nafis007                      |
    mail = nafis_sadique@yahoo.com || nfssdq@gmail.com                |
    IIT,Jahangirnagar University(41)                                  |
                                                                      |
**********************************************************************/

#include <bits/stdc++.h>
using namespace std;

#define xx         first
#define yy         second
#define pb         push_back
#define mp         make_pair
#define LL         long long
#define inf        INT_MAX/3
#define mod        1000000007ll
#define PI         acos(-1.0)
#define linf       (1ll<<60)-1
#define FOR(I,A,B) for(int I = (A); I < (B); ++I)
#define REP(I,N)   FOR(I,0,N)
#define ALL(A)     ((A).begin(), (A).end())
#define set0(ar)   memset(ar,0,sizeof ar)
#define vsort(v)   sort(v.begin(),v.end())
#define setinf(ar) memset(ar,126,sizeof ar)

//cout << fixed << setprecision(20) << p << endl;

template <class T> inline T bigmod(T p,T e,T M){
    LL ret = 1;
    for(; e > 0; e >>= 1){
        if(e & 1) ret = (ret * p) % M;
        p = (p * p) % M;
    } return (T)ret;
}
template <class T> inline T gcd(T a,T b){if(b==0)return a;return gcd(b,a%b);}
template <class T> inline T modinverse(T a,T M){return bigmod(a,M-2,M);}

vector < int > vc[21];
LL sum[21], sum1[21];
int isp[100001], val[100001];

LL dp[1<<21];
LL go(int bp, int sz, int n){
    if(bp == 0) return 0;
    LL &ret = dp[bp];
    if(ret != -1) return ret;
    ret = 0;

    REP(i, n){
        if((bp & 1<<i) == 0) continue;
        ret = max(ret, sum[i]*(LL)(sz+1) + sum1[i]*(LL)(sz+1)*(LL)(sz+1) + go(bp ^ (1<<i), sz + vc[i].size(), n));
    }
    return ret;
}
int main(){
    ios_base::sync_with_stdio(0); cin.tie(0);
    for(int i = 2; i <= 100000; i++){
        if(isp[i] == 0) {
            for(int j = i; j <= 100000; j += i){
                int v = j, cnt = 0;
                while(v % i == 0){
                    val[j]++;
                    v /= i;
                }
                isp[j] = 1;
            }
        }
    }

    int n; cin >> n;
    int mx = 0;
    for(int i = 1; i <= n; i++){
        int x, y; cin >> x >> y;
        vc[val[x]].pb(y);
        mx = max(mx, val[x]);
    }
    mx++;

    LL res = 0;
    REP(i, mx){
        vsort(vc[i]);
        REP(j, vc[i].size()){
            res += ((LL)vc[i][j] * (LL)j * (LL)j);
            sum[i] += (vc[i][j] * (LL)j * 2ll);
            sum1[i] += vc[i][j];
        }
    }

    memset(dp, -1, sizeof dp);
    cout << go((1<<mx)-1, 0, mx)+res << endl;
}
