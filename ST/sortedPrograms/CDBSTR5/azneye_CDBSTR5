/*
 *
 * File: stuff.cpp
 * Author: Andy Y.F. Huang (azneye)
 * Created on Aug 23, 2014, 11:50:25 PM
 */

#include <bits/stdc++.h>

using namespace std;

namespace stuff {
typedef long long ll;
const int MOD = 1000000007;
int dist1[11100], dist2[11100];
vector<int> adj[11111];

void dfs1(int at, int len) {
  if (~dist1[at])
    return;
  dist1[at] = len;
  for (int i = 0; i < (int) adj[at].size(); i++)
    dfs1(adj[at][i], len + 1);
}

void dfs2(int at, int len) {
  if (~dist2[at])
    return;
  dist2[at] = len;
  for (int i = 0; i < (int) adj[at].size(); i++)
    dfs2(adj[at][i], len + 1);
}

void solve(int test_num) {
  int N;
  cin >> N;
  if (N == 0) {
    cout << "0\n";
    return;
  }
  for (int v = 1; v <= N; v++)
    adj[v].clear();
  for (int e = 1, a, b; e < N; e++) {
    cin >> a >> b;
    adj[a].push_back(b);
    adj[b].push_back(a);
  }
  memset(dist1, -1, sizeof(dist1));
  memset(dist2, -1, sizeof(dist2));
  dfs1(1, 0);
  const int far = max_element(dist1 + 1, dist1 + N + 1) - dist1;
  dfs2(far, 0);
  const int res = *max_element(dist2 + 1, dist2 + N + 1);
  cout << res << endl;
}

void solve() {
#ifdef AZN
  double start_t = clock();
  freopen("input.txt", "r", stdin);
  freopen("output.txt", "w", stdout);
//freopen("azn.txt", "w", stderr);
#endif
  ios::sync_with_stdio(false);
  cin.tie(NULL);
  int T = 1;
  cin >> T;
  for (int t = 1; t <= T; t++)
    solve(t);
#ifdef AZN
  cerr << "Took: " << ((clock() - start_t) / CLOCKS_PER_SEC);
#endif
}
}

int main() {
  stuff::solve();
  return 0;
}
