/*
Original code :Abhijeet Kumar Jha
Debugging Credits : Abhinandan Agarwal 

Say thanks BC.
*/

#include<bits/stdc++.h>
using namespace std;
#define  mp make_pair
#define  pb push_back
#define  M 1000000007
typedef long long int ll;
ll powd(ll a,ll b,ll c)
{
	if (b==0)
		return 1;
	ll ret=powd(a,b/2,c);
	if (b&1)
		return (((a*ret)%c)*ret)%c;
	else
		return (ret*ret)%c;
}
ll a[100030],ans[100030],hashi[100020],dp[100030];
int main()
{
	int t,i,j;
	scanf("%d",&t);
	while(t--)
	{
		for(i=1;i<=100000;i++)
		{
			hashi[i]=0;
			ans[i]=0;
			dp[i]=0;
		}
		int n;
		scanf("%d",&n);
		int mx=0;
		for(i=0;i<n;i++)
		{
			scanf("%lld",&a[i]);
			hashi[ a[i] ]++;
			mx=max((ll)mx,a[i]);
		}
		ll ans=1;
		for(i=100000;i>=1;i--)
		{
			//if(hashi[i])
			{
				ll counti=0;
					
				for(j=i;j<=100000;j+=i)
				{
					counti+=hashi[j];
					
						if(j>i)
						{
							dp[i]=((dp[i]-dp[j])%(M-1)+(M-1))%(M-1);
						}
						
				}
				dp[i]=((dp[i]+(powd((ll)2,counti,M-1))-1)%(M-1)+M-1)%(M-1);
				//printf("%lld\n\n",dp[i]);
			}
		}
		ll anss=1;
		for(i=1;i<=100000;i++)
		{
			assert(dp[i]>=0);
			if(dp[i]!=0)
			{
				//printf("i is %d dp[i] %lld\n",i,dp[i]);
				anss= (anss*(powd((ll)i,dp[i],M)) )%M;
				
			}
		/*	if (dp[i]>0)
			printf("number of subsets with gcd :%d is :%lld\n",i,dp[i]);*/
 
		}
		printf("%lld\n",anss);
	}	
	return 0;
} 