#include <string>
#include <vector>
#include <algorithm>
#include <numeric>
#include <set>
#include <map>
#include <queue>
#include <iostream>
#include <sstream>
#include <cstdio>
#include <cmath>
#include <ctime>
#include <cstring>
#include <cctype>
#include <cassert>
#include <limits>
#include <functional>
#define rep(i,n) for(int (i)=0;(i)<(int)(n);++(i))
#define rer(i,l,u) for(int (i)=(int)(l);(i)<=(int)(u);++(i))
#define reu(i,l,u) for(int (i)=(int)(l);(i)<(int)(u);++(i))
#if defined(_MSC_VER) || __cplusplus > 199711L
#define aut(r,v) auto r = (v)
#else
#define aut(r,v) __typeof(v) r = (v)
#endif
#define each(it,o) for(aut(it, (o).begin()); it != (o).end(); ++ it)
#define all(o) (o).begin(), (o).end()
#define pb(x) push_back(x)
#define mp(x,y) make_pair((x),(y))
#define mset(m,v) memset(m,v,sizeof(m))
#define INF 0x3f3f3f3f
#define INFL 0x3f3f3f3f3f3f3f3fLL
using namespace std;
typedef vector<int> vi; typedef pair<int, int> pii; typedef vector<pair<int, int> > vpii; typedef long long ll;
template<typename T, typename U> inline void amin(T &x, U y) { if(y < x) x = y; }
template<typename T, typename U> inline void amax(T &x, U y) { if(x < y) x = y; }

int main() {
	char *S = new char[1000001];
	int T;
	scanf("%d", &T);
	for(int ii = 0; ii < T; ++ ii) {
		scanf("%s", S);
		int n = strlen(S);
		bool ans;
		if(n == 1) {
			ans = false;
		}else if(n % 2 == 0) {
			ans = true;
			rep(i, n / 2)
				ans &= S[i] == S[n / 2 + i];
		} else {
			int h = n / 2;
			ans = false;
			rep(rev, 2) {
				int L = 0;
				for(; L < h && S[L] == S[h + L + 1]; ++ L);
				int R = h;
				for(; R >= 0 && S[R] == S[h + R]; -- R);
				ans |= L >= R;
				reverse(S, S + n);
			}
		}
		puts(ans ? "YES" : "NO");
	}
	return 0;
}