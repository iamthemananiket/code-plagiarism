#include <iostream>
#include <fstream>
#include <vector>
#include <cstring>
#include <unordered_map>

using namespace std;

const int Nmax = 1002;

unordered_map < int, short > LIN;
unordered_map < int, short > COL;

vector < short > G[Nmax];

int T, N, M, E, match;
short st[Nmax], dr[Nmax];
char use[Nmax];

int pairup( int nod )
{
    if ( use[nod] )
            return 0;

    use[nod] = 1;

    for ( unsigned i = 0; i < G[nod].size(); ++i )
            if ( dr[ G[nod][i] ] == 0 )
            {
                st[nod] = G[nod][i];
                dr[ G[nod][i] ] = nod;

                return 1;
            }

    for ( unsigned i = 0; i < G[nod].size(); ++i )
            if ( pairup( dr[ G[nod][i] ] ) )
            {
                st[nod] = G[nod][i];
                dr[ G[nod][i] ] = nod;

                return 1;
            }

    return 0;
}

inline void read( int &n )
{
    n = 0;

    int ch = getchar();
    int sign = 1;

    while ( ch < '0' || ch > '9' )
    {
        if ( ch == '-')
            sign = -1;

        ch = getchar();
    }

    while (  ch >= '0' && ch <= '9' )
    {
        n = ( n << 3 ) + ( n << 1) + ch - '0';
        ch = getchar();
    }

    n = n * sign;
}

int main()
{
    //ifstream cin("date.in");

    //scanf("%d", &T);
    read( T );

    for ( ; T; T-- )
    {
        //scanf("%d", &E);
        read( E );

        for ( int i = 1, a, b; i <= E; ++i )
        {
            //scanf("%d %d", &a, &b);
            read( a );
            read( b );

            if ( LIN[a] == 0 )
            {
                LIN[a] = ++N;
            }

            if ( COL[b] == 0 )
            {
                COL[b] = ++M;
            }

            G[ LIN[a] ].push_back ( COL[b] );
        }

        for ( int change = 1; change; )
        {
            change = 0;
            memset ( use, 0, sizeof ( use ) );

            for ( int i = 1; i <= N; ++i )
                    if ( !st[i] )
                            change |= pairup( i );
        }

        for ( int i = 1; i <= N; ++i )
                match += ( st[i] > 0 );

        printf("%d\n", match);


        for ( int i = 0; i <= N; ++i )
                G[i].clear();

        memset ( st, 0, sizeof ( st ) );
        memset ( dr, 0, sizeof ( dr ) );
        memset ( use, 0, sizeof ( use ) );

        LIN.clear();
        COL.clear();

        N = 0;
        M = 0;
        match = 0;
    }

    return 0;
}
