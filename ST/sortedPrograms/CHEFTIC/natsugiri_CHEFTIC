#include<cstdio>
#include<iostream>
#include<vector>
#include<algorithm>
#include<string>
#include<cstring>
using namespace std;

typedef long long LL;
typedef vector<int> VI;

#define REP(i,n) for(int i=0, i##_len=(n); i<i##_len; ++i)
#define EACH(i,c) for(__typeof((c).begin()) i=(c).begin(),i##_end=(c).end();i!=i##_end;++i)
#define eprintf(s...)  fprintf(stderr, s)

template<class T> inline void amin(T &x, const T &y) { if (y<x) x=y; }
template<class T> inline void amax(T &x, const T &y) { if (x<y) x=y; }

int T;
int N, K;
char F[33][33];

bool win() {
    REP (i, N) REP (j, N) if (F[i][j] =='X') {
	int cnt = 0;
	for (int a=j; a<N; a++) {
	    if (F[i][a] == 'X') cnt++;
	    else break;
	}
	if (cnt >= K) return true;

	cnt = 0;
	for (int a=i; a<N; a++) {
	    if (F[a][j] == 'X') cnt++;
	    else break;
	}
	if (cnt >= K) return true;

	cnt = 0;
	for (int a=0; i+a < N && j+a < N; a++) {
	    if (F[i+a][j+a] == 'X') cnt++;
	    else break;
	}
	if (cnt >= K) return true;

	cnt = 0;
	for (int a=0; i+a < N && 0 <= j-a; a++) {
	    if (F[i+a][j-a] == 'X') cnt++;
	    else break;
	}
	if (cnt >= K) return true;
    }

    return false;
}

int main() {
    scanf("%d", &T);
    REP ($, T) {
	scanf("%d%d", &N, &K);
	REP (i, N) scanf("%s", F[i]);

	bool yes = false;
	REP (i, N) REP (j, N) if (F[i][j] == '.') {
	    F[i][j] = 'X';
	    if (win()) yes = true;
	    F[i][j] = '.';
	}
	puts(yes? "YES": "NO");
    }



    return 0;
}
