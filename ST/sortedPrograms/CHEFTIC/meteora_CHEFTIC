#include <algorithm>
#include <iostream>
#include <cstdio>
#include <cassert>

using namespace std;

char A[22][22];
int N,K;

int check(int i, int j, int k, int l){
	if(k >= N || l >= N) return 0;

	int bl=0,jj = j;

	for(; i <= k; ++i){
		for(j = jj; j <= l; ++j){
			bl += (A[i][j] == '.');
			if(A[i][j] == 'O') return 0;
			if(bl > 1) return 0;
		}
	}

	return 1;
}


int check_diag(int i, int j, int k, int l){
	if(k >= N || l >= N) return 0;
	int bl =0;
	while(i <= k && j <= l){
		bl += (A[i][j] == '.');
		if(bl > 1) return 0;
		if(A[i][j] == 'O') return 0;
		++i,++j;
	}
	return 1;
}

int check_diag2(int i, int j, int k, int l){
	if(k >= N || l < 0) return 0;
	int bl =0;
	while(i <= k && j >= l){
		bl += (A[i][j] == '.');
		if(bl > 1) return 0;
		if(A[i][j] == 'O') return 0;
		++i,--j;
	}
	return 1;
}

int main(){

	int t;


	scanf("%d",&t);
	int i,j;
	while(t--){
		scanf("%d%d",&N,&K);

		for(i =0 ; i < N; ++i){
			scanf("%s",A[i]);
		}

		for(i =0 ; i < N; ++i){
			for(j = 0; j < N; ++j){
				if(check(i,j,i+K-1,j)) break;
				if(check(i,j,i,j+K-1)) break;
				if(check_diag(i,j,i+K-1,j+K-1)) break;
				if(check_diag2(i,j,i+K-1,j-K+1)) break;
			}
			if(j < N) break;
		}

		if(i < N) printf("YES\n");
		else printf("NO\n");
	}

	return 0;
}
